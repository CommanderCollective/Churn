<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='analysis_panel_201802091343' inline='true' name='federated.1b3s7g509zerqs11id46a0rz930i' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='analysis_panel_201802101203.csv' name='google-sheets.1f7mc6i1xyxa4r1emj84208f9ksi'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='analysis_panel_201802101203.csv' googleSheetId='1PtkrzKhmD4f8tTHhkMu5v-7tGDKL62Nvevzc1yy-ew0' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='Hernan@pisano.pro' validate='no' />
          </named-connection>
          <named-connection caption='Distributor Churn Data 1FEB18.xlsx' name='google-sheets.0lhrpof07trfvs14tlpt90so95iq'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Distributor Churn Data 1FEB18.xlsx' googleSheetId='1QLxBH1ZWQAg5GXjRxhIiSh-RPQXlnK1sthasOaLlvK4' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='Hernan@pisano.pro' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.1f7mc6i1xyxa4r1emj84208f9ksi' name='analysis_panel_201802101203.csv' table='[analysis_panel_201802101203#csv$]' type='table'>
          <columns gridOrigin='A1:BO10001:no:A1:BO10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='customer_number' ordinal='0' />
            <column datatype='integer' name='customer_number_cx' ordinal='1' />
            <column datatype='integer' name='customer_number_s3' ordinal='2' />
            <column datatype='integer' name='customer_number_3yr_order' ordinal='3' />
            <column datatype='string' name='customer_name_3yr_order' ordinal='4' />
            <column datatype='integer' name='customer_number_s2' ordinal='5' />
            <column datatype='integer' name='customer_number_customer' ordinal='6' />
            <column datatype='integer' name='customer_number_sh' ordinal='7' />
            <column datatype='string' name='customer_name' ordinal='8' />
            <column datatype='string' name='region_customer' ordinal='9' />
            <column datatype='string' name='region_market' ordinal='10' />
            <column datatype='string' name='type_customer' ordinal='11' />
            <column datatype='string' name='type_market' ordinal='12' />
            <column datatype='string' name='segment' ordinal='13' />
            <column datatype='date' name='date_customer_since' ordinal='14' />
            <column datatype='string' name='country' ordinal='15' />
            <column datatype='string' name='economic_condition' ordinal='16' />
            <column datatype='string' name='competitive_intensity' ordinal='17' />
            <column datatype='string' name='distributor_mystery_shop_performance' ordinal='18' />
            <column datatype='string' name='resolved' ordinal='19' />
            <column datatype='string' name='service_type' ordinal='20' />
            <column datatype='integer' name='quantity_2015' ordinal='21' />
            <column datatype='real' name='revenue_2015' ordinal='22' />
            <column datatype='real' name='discount_2015' ordinal='23' />
            <column datatype='integer' name='quantity_2016' ordinal='24' />
            <column datatype='real' name='revenue_2016' ordinal='25' />
            <column datatype='real' name='discount_2016' ordinal='26' />
            <column datatype='integer' name='quantity_2017' ordinal='27' />
            <column datatype='real' name='revenue_2017' ordinal='28' />
            <column datatype='real' name='discount_2017' ordinal='29' />
            <column datatype='integer' name='customer_duration_cmdr' ordinal='30' />
            <column datatype='integer' name='north' ordinal='31' />
            <column datatype='integer' name='south' ordinal='32' />
            <column datatype='integer' name='east' ordinal='33' />
            <column datatype='integer' name='west' ordinal='34' />
            <column datatype='integer' name='type_pawn' ordinal='35' />
            <column datatype='integer' name='type_recreation' ordinal='36' />
            <column datatype='integer' name='type_specialty' ordinal='37' />
            <column datatype='integer' name='type_mass' ordinal='38' />
            <column datatype='integer' name='type_other' ordinal='39' />
            <column datatype='integer' name='segment_product_breadth' ordinal='40' />
            <column datatype='integer' name='segment_availability' ordinal='41' />
            <column datatype='integer' name='segment_price_point' ordinal='42' />
            <column datatype='integer' name='segment_not_classified' ordinal='43' />
            <column datatype='integer' name='segment_customer_service' ordinal='44' />
            <column datatype='integer' name='economic_condition_negative' ordinal='45' />
            <column datatype='integer' name='economic_condition_neutral' ordinal='46' />
            <column datatype='integer' name='economic_condition_positive' ordinal='47' />
            <column datatype='integer' name='competitive_intensity_high' ordinal='48' />
            <column datatype='integer' name='competitive_intensity_low' ordinal='49' />
            <column datatype='integer' name='competitive_intensity_medium' ordinal='50' />
            <column datatype='integer' name='dmsp_worse' ordinal='51' />
            <column datatype='integer' name='dmsp_parity' ordinal='52' />
            <column datatype='integer' name='dmsp_better' ordinal='53' />
            <column datatype='integer' name='resolved_numeric' ordinal='54' />
            <column datatype='integer' name='service_type_return' ordinal='55' />
            <column datatype='integer' name='service_type_tech_support' ordinal='56' />
            <column datatype='integer' name='service_type_complaint' ordinal='57' />
            <column datatype='integer' name='service_type_other' ordinal='58' />
            <column datatype='integer' name='service_type_refund' ordinal='59' />
            <column datatype='integer' name='relationship_nps' ordinal='60' />
            <column datatype='integer' name='transaction_nps' ordinal='61' />
            <column datatype='string' name='text_sentiment' ordinal='62' />
            <column datatype='string' name='socialcx_class' ordinal='63' />
            <column datatype='integer' name='text_sentiment_dummy' ordinal='64' />
            <column datatype='integer' name='socialcx_class_dummy' ordinal='65' />
            <column datatype='integer' name='churned_cmdr' ordinal='66' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>customer_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_number]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_number</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_number_cx</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_number_cx]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_number_cx</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_number_s3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_number_s3]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_number_s3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_number_3yr_order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_number_3yr_order]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_number_3yr_order</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_name_3yr_order</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_name_3yr_order]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_name_3yr_order</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_number_s2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_number_s2]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_number_s2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_number_customer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_number_customer]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_number_customer</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_number_sh</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_number_sh]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_number_sh</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_name]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_customer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region_customer]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>region_customer</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region_market]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>region_market</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_customer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type_customer]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>type_customer</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type_market]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>type_market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[segment]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>segment</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_customer_since</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_customer_since]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>date_customer_since</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>economic_condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[economic_condition]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>economic_condition</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>competitive_intensity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[competitive_intensity]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>competitive_intensity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distributor_mystery_shop_performance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[distributor_mystery_shop_performance]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>distributor_mystery_shop_performance</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resolved</remote-name>
            <remote-type>130</remote-type>
            <local-name>[resolved]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>resolved</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[service_type]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>service_type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity_2015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity_2015]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>quantity_2015</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revenue_2015]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>revenue_2015</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discount_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[discount_2015]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>discount_2015</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity_2016</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity_2016]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>quantity_2016</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revenue_2016]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>revenue_2016</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discount_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[discount_2016]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>discount_2016</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity_2017</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity_2017]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>quantity_2017</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[revenue_2017]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>revenue_2017</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discount_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[discount_2017]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>discount_2017</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_duration_cmdr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customer_duration_cmdr]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>customer_duration_cmdr</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>north</remote-name>
            <remote-type>20</remote-type>
            <local-name>[north]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>north</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>south</remote-name>
            <remote-type>20</remote-type>
            <local-name>[south]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>south</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>east</remote-name>
            <remote-type>20</remote-type>
            <local-name>[east]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>east</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>west</remote-name>
            <remote-type>20</remote-type>
            <local-name>[west]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>west</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_pawn</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_pawn]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>type_pawn</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_recreation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_recreation]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>type_recreation</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_specialty</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_specialty]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>type_specialty</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_mass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_mass]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>type_mass</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_other</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_other]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>type_other</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_product_breadth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[segment_product_breadth]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>segment_product_breadth</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_availability</remote-name>
            <remote-type>20</remote-type>
            <local-name>[segment_availability]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>segment_availability</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_price_point</remote-name>
            <remote-type>20</remote-type>
            <local-name>[segment_price_point]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>segment_price_point</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_not_classified</remote-name>
            <remote-type>20</remote-type>
            <local-name>[segment_not_classified]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>segment_not_classified</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_customer_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[segment_customer_service]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>segment_customer_service</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>economic_condition_negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[economic_condition_negative]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>economic_condition_negative</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>economic_condition_neutral</remote-name>
            <remote-type>20</remote-type>
            <local-name>[economic_condition_neutral]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>economic_condition_neutral</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>economic_condition_positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[economic_condition_positive]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>economic_condition_positive</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>competitive_intensity_high</remote-name>
            <remote-type>20</remote-type>
            <local-name>[competitive_intensity_high]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>competitive_intensity_high</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>competitive_intensity_low</remote-name>
            <remote-type>20</remote-type>
            <local-name>[competitive_intensity_low]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>competitive_intensity_low</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>competitive_intensity_medium</remote-name>
            <remote-type>20</remote-type>
            <local-name>[competitive_intensity_medium]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>competitive_intensity_medium</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dmsp_worse</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dmsp_worse]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>dmsp_worse</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dmsp_parity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dmsp_parity]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>dmsp_parity</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dmsp_better</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dmsp_better]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>dmsp_better</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>resolved_numeric</remote-name>
            <remote-type>20</remote-type>
            <local-name>[resolved_numeric]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>resolved_numeric</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service_type_return</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service_type_return]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>service_type_return</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service_type_tech_support</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service_type_tech_support]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>service_type_tech_support</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service_type_complaint</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service_type_complaint]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>service_type_complaint</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service_type_other</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service_type_other]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>service_type_other</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service_type_refund</remote-name>
            <remote-type>20</remote-type>
            <local-name>[service_type_refund]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>service_type_refund</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>relationship_nps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[relationship_nps]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>relationship_nps</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transaction_nps</remote-name>
            <remote-type>20</remote-type>
            <local-name>[transaction_nps]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>transaction_nps</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_sentiment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[text_sentiment]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>text_sentiment</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>socialcx_class</remote-name>
            <remote-type>130</remote-type>
            <local-name>[socialcx_class]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>socialcx_class</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text_sentiment_dummy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[text_sentiment_dummy]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>text_sentiment_dummy</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>socialcx_class_dummy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[socialcx_class_dummy]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>socialcx_class_dummy</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>churned_cmdr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[churned_cmdr]</local-name>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias>churned_cmdr</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[analysis_panel_201802101203.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BO10001:no:A1:BO10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Competitive Intensity' datatype='string' name='[competitive_intensity]' role='dimension' type='nominal' />
      <column caption='Competitive Intensity High' datatype='integer' name='[competitive_intensity_high]' role='measure' type='quantitative' />
      <column caption='Competitive Intensity Low' datatype='integer' name='[competitive_intensity_low]' role='measure' type='quantitative' />
      <column caption='Competitive Intensity Medium' datatype='integer' name='[competitive_intensity_medium]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Duration Cmdr' datatype='integer' name='[customer_duration_cmdr]' role='measure' type='quantitative' />
      <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
      <column caption='Customer Name 3Yr Order' datatype='string' name='[customer_name_3yr_order]' role='dimension' type='nominal' />
      <column caption='Customer Number' datatype='integer' name='[customer_number]' role='dimension' type='ordinal' />
      <column caption='Customer Number 3Yr Order' datatype='integer' name='[customer_number_3yr_order]' role='measure' type='quantitative' />
      <column caption='Customer Number Customer' datatype='integer' name='[customer_number_customer]' role='measure' type='quantitative' />
      <column caption='Customer Number Cx' datatype='integer' name='[customer_number_cx]' role='measure' type='quantitative' />
      <column caption='Customer Number S2' datatype='integer' name='[customer_number_s2]' role='measure' type='quantitative' />
      <column caption='Customer Number S3' datatype='integer' name='[customer_number_s3]' role='measure' type='quantitative' />
      <column caption='Customer Number Sh' datatype='integer' name='[customer_number_sh]' role='measure' type='quantitative' />
      <column caption='Date Customer Since' datatype='date' name='[date_customer_since]' role='dimension' type='ordinal' />
      <column caption='Discount 2015' datatype='real' name='[discount_2015]' role='measure' type='quantitative' />
      <column caption='Discount 2016' datatype='real' name='[discount_2016]' role='measure' type='quantitative' />
      <column caption='Discount 2017' datatype='real' name='[discount_2017]' role='measure' type='quantitative' />
      <column caption='Distributor Mystery Shop Performance' datatype='string' name='[distributor_mystery_shop_performance]' role='dimension' type='nominal' />
      <column caption='Dmsp Better' datatype='integer' name='[dmsp_better]' role='measure' type='quantitative' />
      <column caption='Dmsp Parity' datatype='integer' name='[dmsp_parity]' role='measure' type='quantitative' />
      <column caption='Dmsp Worse' datatype='integer' name='[dmsp_worse]' role='measure' type='quantitative' />
      <column caption='East' datatype='integer' name='[east]' role='measure' type='quantitative' />
      <column caption='Economic Condition' datatype='string' name='[economic_condition]' role='dimension' type='nominal' />
      <column caption='Economic Condition Negative' datatype='integer' name='[economic_condition_negative]' role='measure' type='quantitative' />
      <column caption='Economic Condition Neutral' datatype='integer' name='[economic_condition_neutral]' role='measure' type='quantitative' />
      <column caption='Economic Condition Positive' datatype='integer' name='[economic_condition_positive]' role='measure' type='quantitative' />
      <column caption='North' datatype='integer' name='[north]' role='measure' type='quantitative' />
      <column caption='Quantity 2015' datatype='integer' name='[quantity_2015]' role='measure' type='quantitative' />
      <column caption='Quantity 2016' datatype='integer' name='[quantity_2016]' role='measure' type='quantitative' />
      <column caption='Quantity 2017' datatype='integer' name='[quantity_2017]' role='measure' type='quantitative' />
      <column caption='Region Customer' datatype='string' name='[region_customer]' role='dimension' type='nominal' />
      <column caption='Region Market' datatype='string' name='[region_market]' role='dimension' type='nominal' />
      <column caption='Relationship Nps' datatype='integer' name='[relationship_nps]' role='measure' type='quantitative' />
      <column caption='Resolved' datatype='string' name='[resolved]' role='dimension' type='nominal' />
      <column caption='Resolved Numeric' datatype='integer' name='[resolved_numeric]' role='measure' type='quantitative' />
      <column caption='Revenue 2015' datatype='real' name='[revenue_2015]' role='measure' type='quantitative' />
      <column caption='Revenue 2016' datatype='real' name='[revenue_2016]' role='measure' type='quantitative' />
      <column caption='Revenue 2017' datatype='real' name='[revenue_2017]' role='measure' type='quantitative' />
      <column caption='Segment' datatype='string' name='[segment]' role='dimension' type='nominal' />
      <column caption='Segment Availability' datatype='integer' name='[segment_availability]' role='measure' type='quantitative' />
      <column caption='Segment Customer Service' datatype='integer' name='[segment_customer_service]' role='measure' type='quantitative' />
      <column caption='Segment Not Classified' datatype='integer' name='[segment_not_classified]' role='measure' type='quantitative' />
      <column caption='Segment Price Point' datatype='integer' name='[segment_price_point]' role='measure' type='quantitative' />
      <column caption='Segment Product Breadth' datatype='integer' name='[segment_product_breadth]' role='measure' type='quantitative' />
      <column caption='Service Type' datatype='string' name='[service_type]' role='dimension' type='nominal' />
      <column caption='Service Type Complaint' datatype='integer' name='[service_type_complaint]' role='measure' type='quantitative' />
      <column caption='Service Type Other' datatype='integer' name='[service_type_other]' role='measure' type='quantitative' />
      <column caption='Service Type Refund' datatype='integer' name='[service_type_refund]' role='measure' type='quantitative' />
      <column caption='Service Type Return' datatype='integer' name='[service_type_return]' role='measure' type='quantitative' />
      <column caption='Service Type Tech Support' datatype='integer' name='[service_type_tech_support]' role='measure' type='quantitative' />
      <column caption='Socialcx Class' datatype='string' name='[socialcx_class]' role='dimension' type='nominal' />
      <column caption='Socialcx Class Dummy' datatype='integer' name='[socialcx_class_dummy]' role='measure' type='quantitative' />
      <column caption='South' datatype='integer' name='[south]' role='measure' type='quantitative' />
      <column caption='Text Sentiment' datatype='string' name='[text_sentiment]' role='dimension' type='nominal' />
      <column caption='Text Sentiment Dummy' datatype='integer' name='[text_sentiment_dummy]' role='measure' type='quantitative' />
      <column caption='Transaction Nps' datatype='integer' name='[transaction_nps]' role='measure' type='quantitative' />
      <column caption='Type Customer' datatype='string' name='[type_customer]' role='dimension' type='nominal' />
      <column caption='Type Market' datatype='string' name='[type_market]' role='dimension' type='nominal' />
      <column caption='Type Mass' datatype='integer' name='[type_mass]' role='measure' type='quantitative' />
      <column caption='Type Other' datatype='integer' name='[type_other]' role='measure' type='quantitative' />
      <column caption='Type Pawn' datatype='integer' name='[type_pawn]' role='measure' type='quantitative' />
      <column caption='Type Recreation' datatype='integer' name='[type_recreation]' role='measure' type='quantitative' />
      <column caption='Type Specialty' datatype='integer' name='[type_specialty]' role='measure' type='quantitative' />
      <column caption='West' datatype='integer' name='[west]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.48433' measure-ordering='alphabetic' measure-percentage='0.51567' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='Impact of each variable  (Distributor Churn Data 1FEB18.xlsx)' inline='true' name='federated.1ksibkk0zvmz1f11xn2wb1lgkgg0' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Distributor Churn Data 1FEB18.xlsx' name='google-sheets.0mm1ais0pgeb8w14b7ubo0flq2m6'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Distributor Churn Data 1FEB18.xlsx' googleSheetId='1QLxBH1ZWQAg5GXjRxhIiSh-RPQXlnK1sthasOaLlvK4' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='Hernan@pisano.pro' validate='no' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='real' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[2015 Discount %]' />
            <value name='[2016 Discount %]' />
            <value name='[2017 Discount %]' />
            <value name='[Competitive Instensity]' />
            <value name='[Distributor Mystery Shop Performance]' />
            <value name='[Economic Condition]' />
            <value name='[Realationship NPS]' />
            <value name='[Region 1]' />
            <value name='[Region]' />
            <value name='[Segment]' />
            <value name='[SocialCX Class]' />
            <value name='[Text Sentiment]' />
            <value name='[Transaction NPS]' />
            <value name='[Type 1]' />
            <value name='[Type]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Impact of each variable ].[2015 Discount %]' />
              <field name='[Impact of each variable ].[2016 Discount %]' />
              <field name='[Impact of each variable ].[2017 Discount %]' />
              <field name='[Impact of each variable ].[Competitive Instensity]' />
              <field name='[Impact of each variable ].[Distributor Mystery Shop Performance]' />
              <field name='[Impact of each variable ].[Economic Condition]' />
              <field name='[Impact of each variable ].[Realationship NPS]' />
              <field name='[Impact of each variable ].[Region 1]' />
              <field name='[Impact of each variable ].[Region]' />
              <field name='[Impact of each variable ].[Segment]' />
              <field name='[Impact of each variable ].[SocialCX Class]' />
              <field name='[Impact of each variable ].[Text Sentiment]' />
              <field name='[Impact of each variable ].[Transaction NPS]' />
              <field name='[Impact of each variable ].[Type 1]' />
              <field name='[Impact of each variable ].[Type]' />
            </group>
          </groups>
          <relation connection='google-sheets.0mm1ais0pgeb8w14b7ubo0flq2m6' name='Impact of each variable ' table='[&apos;Impact of each variable $&apos;]' type='table'>
            <columns gridOrigin='A1:P14:no:A1:P14:0' header='yes' outcome='2'>
              <column datatype='string' name='F1' ordinal='0' />
              <column datatype='real' name='Realationship NPS' ordinal='1' />
              <column datatype='real' name='Transaction NPS' ordinal='2' />
              <column datatype='real' name='Text Sentiment' ordinal='3' />
              <column datatype='real' name='SocialCX Class' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='real' name='Type' ordinal='6' />
              <column datatype='real' name='Segment' ordinal='7' />
              <column datatype='real' name='Region 1' ordinal='8' />
              <column datatype='real' name='Type 1' ordinal='9' />
              <column datatype='real' name='Economic Condition' ordinal='10' />
              <column datatype='real' name='Competitive Instensity' ordinal='11' />
              <column datatype='real' name='Distributor Mystery Shop Performance' ordinal='12' />
              <column datatype='real' name='2015 Discount %' ordinal='13' />
              <column datatype='real' name='2016 Discount %' ordinal='14' />
              <column datatype='real' name='2017 Discount %' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Impact of each variable ]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Impact of each variable ]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P14:no:A1:P14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ONLY SIGNIFICANT COLUMNS' datatype='string' name='[Calculation_660903279422902272]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  float([Pivot Field Values])  &gt; 0.4 THEN  &apos;A&apos;&#13;&#10;ELSE &apos;B&apos; END' />
      </column>
      <column caption='-Pivot' datatype='real' name='[Calculation_660903279427690499]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Pivot Field Values]' />
      </column>
      <column caption='Frozen Set ID' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[cum:sum:Pivot Field Values:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Pane' type='CumTotal' />
      </column-instance>
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[cum:sum:Pivot Field Values:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.501424' measure-ordering='alphabetic' measure-percentage='0.498576' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Pivot Field Names:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Type 1&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;Text Sentiment&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;SocialCX Class&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Segment&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Region&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%all%</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Distributor Mystery Shop Performance&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Competitive Instensity&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;2016 Discount \%&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;2015 Discount \%&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;2017 Discount \%&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Transaction NPS&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Economic Condition&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Realationship NPS&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Type&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Region 1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Pivot Field Names' />
        <field-sort-custom-order field='Pivot Field Values' />
        <field-sort-custom-order field='Pivot Field Values - Split 1' />
        <field-sort-custom-order field='Calculation_660903279422902272' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ALL FIELDS EXPOSED'>
      <table>
        <view>
          <datasources>
            <datasource caption='analysis_panel_201802091343' name='federated.1b3s7g509zerqs11id46a0rz930i' />
          </datasources>
          <datasource-dependencies datasource='federated.1b3s7g509zerqs11id46a0rz930i'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[churned_cmdr]' role='measure' type='quantitative' />
            <column caption='Competitive Intensity High' datatype='integer' name='[competitive_intensity_high]' role='measure' type='quantitative' />
            <column caption='Competitive Intensity Low' datatype='integer' name='[competitive_intensity_low]' role='measure' type='quantitative' />
            <column caption='Competitive Intensity Medium' datatype='integer' name='[competitive_intensity_medium]' role='measure' type='quantitative' />
            <column caption='Customer Duration Cmdr' datatype='integer' name='[customer_duration_cmdr]' role='measure' type='quantitative' />
            <column caption='Customer Number' datatype='integer' name='[customer_number]' role='dimension' type='ordinal' />
            <column caption='Customer Number 3Yr Order' datatype='integer' name='[customer_number_3yr_order]' role='measure' type='quantitative' />
            <column caption='Customer Number Customer' datatype='integer' name='[customer_number_customer]' role='measure' type='quantitative' />
            <column caption='Customer Number Cx' datatype='integer' name='[customer_number_cx]' role='measure' type='quantitative' />
            <column caption='Customer Number S2' datatype='integer' name='[customer_number_s2]' role='measure' type='quantitative' />
            <column caption='Customer Number S3' datatype='integer' name='[customer_number_s3]' role='measure' type='quantitative' />
            <column caption='Customer Number Sh' datatype='integer' name='[customer_number_sh]' role='measure' type='quantitative' />
            <column caption='Discount 2015' datatype='real' name='[discount_2015]' role='measure' type='quantitative' />
            <column caption='Discount 2016' datatype='real' name='[discount_2016]' role='measure' type='quantitative' />
            <column caption='Discount 2017' datatype='real' name='[discount_2017]' role='measure' type='quantitative' />
            <column caption='Dmsp Better' datatype='integer' name='[dmsp_better]' role='measure' type='quantitative' />
            <column caption='Dmsp Parity' datatype='integer' name='[dmsp_parity]' role='measure' type='quantitative' />
            <column caption='Dmsp Worse' datatype='integer' name='[dmsp_worse]' role='measure' type='quantitative' />
            <column caption='East' datatype='integer' name='[east]' role='measure' type='quantitative' />
            <column caption='Economic Condition Negative' datatype='integer' name='[economic_condition_negative]' role='measure' type='quantitative' />
            <column caption='Economic Condition Neutral' datatype='integer' name='[economic_condition_neutral]' role='measure' type='quantitative' />
            <column caption='Economic Condition Positive' datatype='integer' name='[economic_condition_positive]' role='measure' type='quantitative' />
            <column-instance column='[customer_number]' derivation='None' name='[none:customer_number:ok]' pivot='key' type='ordinal' />
            <column caption='North' datatype='integer' name='[north]' role='measure' type='quantitative' />
            <column caption='Quantity 2015' datatype='integer' name='[quantity_2015]' role='measure' type='quantitative' />
            <column caption='Quantity 2016' datatype='integer' name='[quantity_2016]' role='measure' type='quantitative' />
            <column caption='Quantity 2017' datatype='integer' name='[quantity_2017]' role='measure' type='quantitative' />
            <column caption='Relationship Nps' datatype='integer' name='[relationship_nps]' role='measure' type='quantitative' />
            <column caption='Resolved Numeric' datatype='integer' name='[resolved_numeric]' role='measure' type='quantitative' />
            <column caption='Revenue 2015' datatype='real' name='[revenue_2015]' role='measure' type='quantitative' />
            <column caption='Revenue 2016' datatype='real' name='[revenue_2016]' role='measure' type='quantitative' />
            <column caption='Revenue 2017' datatype='real' name='[revenue_2017]' role='measure' type='quantitative' />
            <column caption='Segment Availability' datatype='integer' name='[segment_availability]' role='measure' type='quantitative' />
            <column caption='Segment Customer Service' datatype='integer' name='[segment_customer_service]' role='measure' type='quantitative' />
            <column caption='Segment Not Classified' datatype='integer' name='[segment_not_classified]' role='measure' type='quantitative' />
            <column caption='Segment Price Point' datatype='integer' name='[segment_price_point]' role='measure' type='quantitative' />
            <column caption='Segment Product Breadth' datatype='integer' name='[segment_product_breadth]' role='measure' type='quantitative' />
            <column caption='Service Type Complaint' datatype='integer' name='[service_type_complaint]' role='measure' type='quantitative' />
            <column caption='Service Type Other' datatype='integer' name='[service_type_other]' role='measure' type='quantitative' />
            <column caption='Service Type Refund' datatype='integer' name='[service_type_refund]' role='measure' type='quantitative' />
            <column caption='Service Type Return' datatype='integer' name='[service_type_return]' role='measure' type='quantitative' />
            <column caption='Service Type Tech Support' datatype='integer' name='[service_type_tech_support]' role='measure' type='quantitative' />
            <column caption='Socialcx Class Dummy' datatype='integer' name='[socialcx_class_dummy]' role='measure' type='quantitative' />
            <column caption='South' datatype='integer' name='[south]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[churned_cmdr]' derivation='Sum' name='[sum:churned_cmdr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[competitive_intensity_high]' derivation='Sum' name='[sum:competitive_intensity_high:qk]' pivot='key' type='quantitative' />
            <column-instance column='[competitive_intensity_low]' derivation='Sum' name='[sum:competitive_intensity_low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[competitive_intensity_medium]' derivation='Sum' name='[sum:competitive_intensity_medium:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_duration_cmdr]' derivation='Sum' name='[sum:customer_duration_cmdr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_3yr_order]' derivation='Sum' name='[sum:customer_number_3yr_order:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_customer]' derivation='Sum' name='[sum:customer_number_customer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_cx]' derivation='Sum' name='[sum:customer_number_cx:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_s2]' derivation='Sum' name='[sum:customer_number_s2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_s3]' derivation='Sum' name='[sum:customer_number_s3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_sh]' derivation='Sum' name='[sum:customer_number_sh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount_2015]' derivation='Sum' name='[sum:discount_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount_2016]' derivation='Sum' name='[sum:discount_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount_2017]' derivation='Sum' name='[sum:discount_2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dmsp_better]' derivation='Sum' name='[sum:dmsp_better:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dmsp_parity]' derivation='Sum' name='[sum:dmsp_parity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dmsp_worse]' derivation='Sum' name='[sum:dmsp_worse:qk]' pivot='key' type='quantitative' />
            <column-instance column='[east]' derivation='Sum' name='[sum:east:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economic_condition_negative]' derivation='Sum' name='[sum:economic_condition_negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economic_condition_neutral]' derivation='Sum' name='[sum:economic_condition_neutral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economic_condition_positive]' derivation='Sum' name='[sum:economic_condition_positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[north]' derivation='Sum' name='[sum:north:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2015]' derivation='Sum' name='[sum:quantity_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2016]' derivation='Sum' name='[sum:quantity_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2017]' derivation='Sum' name='[sum:quantity_2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[relationship_nps]' derivation='Sum' name='[sum:relationship_nps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[resolved_numeric]' derivation='Sum' name='[sum:resolved_numeric:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue_2015]' derivation='Sum' name='[sum:revenue_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue_2016]' derivation='Sum' name='[sum:revenue_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue_2017]' derivation='Sum' name='[sum:revenue_2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segment_availability]' derivation='Sum' name='[sum:segment_availability:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segment_customer_service]' derivation='Sum' name='[sum:segment_customer_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segment_not_classified]' derivation='Sum' name='[sum:segment_not_classified:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segment_price_point]' derivation='Sum' name='[sum:segment_price_point:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segment_product_breadth]' derivation='Sum' name='[sum:segment_product_breadth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[service_type_complaint]' derivation='Sum' name='[sum:service_type_complaint:qk]' pivot='key' type='quantitative' />
            <column-instance column='[service_type_other]' derivation='Sum' name='[sum:service_type_other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[service_type_refund]' derivation='Sum' name='[sum:service_type_refund:qk]' pivot='key' type='quantitative' />
            <column-instance column='[service_type_return]' derivation='Sum' name='[sum:service_type_return:qk]' pivot='key' type='quantitative' />
            <column-instance column='[service_type_tech_support]' derivation='Sum' name='[sum:service_type_tech_support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[socialcx_class_dummy]' derivation='Sum' name='[sum:socialcx_class_dummy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[south]' derivation='Sum' name='[sum:south:qk]' pivot='key' type='quantitative' />
            <column-instance column='[text_sentiment_dummy]' derivation='Sum' name='[sum:text_sentiment_dummy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[transaction_nps]' derivation='Sum' name='[sum:transaction_nps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type_mass]' derivation='Sum' name='[sum:type_mass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type_other]' derivation='Sum' name='[sum:type_other:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type_pawn]' derivation='Sum' name='[sum:type_pawn:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type_recreation]' derivation='Sum' name='[sum:type_recreation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type_specialty]' derivation='Sum' name='[sum:type_specialty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[west]' derivation='Sum' name='[sum:west:qk]' pivot='key' type='quantitative' />
            <column caption='Text Sentiment Dummy' datatype='integer' name='[text_sentiment_dummy]' role='measure' type='quantitative' />
            <column caption='Transaction Nps' datatype='integer' name='[transaction_nps]' role='measure' type='quantitative' />
            <column caption='Type Mass' datatype='integer' name='[type_mass]' role='measure' type='quantitative' />
            <column caption='Type Other' datatype='integer' name='[type_other]' role='measure' type='quantitative' />
            <column caption='Type Pawn' datatype='integer' name='[type_pawn]' role='measure' type='quantitative' />
            <column caption='Type Recreation' datatype='integer' name='[type_recreation]' role='measure' type='quantitative' />
            <column caption='Type Specialty' datatype='integer' name='[type_specialty]' role='measure' type='quantitative' />
            <column caption='West' datatype='integer' name='[west]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <sort class='computed' column='[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]' direction='DESC' using='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:type_pawn:qk]' />
          <slices>
            <column>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]' value='223' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b3s7g509zerqs11id46a0rz930i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]</rows>
        <cols>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Cascade'>
      <table>
        <view>
          <datasources>
            <datasource caption='Impact of each variable  (Distributor Churn Data 1FEB18.xlsx)' name='federated.1ksibkk0zvmz1f11xn2wb1lgkgg0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ksibkk0zvmz1f11xn2wb1lgkgg0'>
            <column caption='ONLY SIGNIFICANT COLUMNS' datatype='string' name='[Calculation_660903279422902272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  float([Pivot Field Values])  &gt; 0.4 THEN  &apos;A&apos;&#13;&#10;ELSE &apos;B&apos; END' />
            </column>
            <column caption='Frozen Set ID' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_660903279422902272]' derivation='None' name='[none:Calculation_660903279422902272:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Calculation_660903279422902272:nk]'>
            <groupfilter function='member' level='[none:Calculation_660903279422902272:nk]' member='&quot;A&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]'>
            <groupfilter function='member' level='[none:F1:nk]' member='&quot;demographics 1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]' direction='DESC' using='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Pivot Field Values:qk]' />
          <slices>
            <column>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Calculation_660903279422902272:nk]</column>
            <column>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Pivot Field Values:qk]</rows>
        <cols>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cascade ALL'>
      <table>
        <view>
          <datasources>
            <datasource caption='Impact of each variable  (Distributor Churn Data 1FEB18.xlsx)' name='federated.1ksibkk0zvmz1f11xn2wb1lgkgg0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ksibkk0zvmz1f11xn2wb1lgkgg0'>
            <column caption='-Pivot' datatype='real' name='[Calculation_660903279427690499]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Pivot Field Values]' />
            </column>
            <column caption='Frozen Set ID' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[cum:sum:Pivot Field Values:qk:3]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Pane' type='CumTotal' />
            </column-instance>
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_660903279427690499]' derivation='Sum' name='[sum:Calculation_660903279427690499:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]'>
            <groupfilter function='level-members' level='[none:F1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Region 1&quot;</bucket>
              <bucket>&quot;Type&quot;</bucket>
              <bucket>&quot;Realationship NPS&quot;</bucket>
              <bucket>&quot;Economic Condition&quot;</bucket>
              <bucket>&quot;Transaction NPS&quot;</bucket>
              <bucket>&quot;2017 Discount \%&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]</column>
            <column>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk:3]' value='100' />
            <format attr='title' class='0' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk:3]' scope='rows' value='Contribution to ' />
            <format attr='subtitle' class='0' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk:3]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk:3]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]' value='142' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]' value='256' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Calculation_660903279427690499:qk]' num-steps='3' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#d8272a</color>
                <color>#d83739</color>
                <color>#d84749</color>
                <color>#d85759</color>
                <color>#d86769</color>
                <color>#d87779</color>
                <color>#d88789</color>
                <color>#d89899</color>
                <color>#d8a8a9</color>
                <color>#d8b8b9</color>
                <color>#d8c8c9</color>
                <color>#d9d9d9</color>
                <color>#c5d4c7</color>
                <color>#b2cfb6</color>
                <color>#9fcba6</color>
                <color>#8ec696</color>
                <color>#7dc287</color>
                <color>#6cbd78</color>
                <color>#5cb96a</color>
                <color>#4db45c</color>
                <color>#3fb04f</color>
                <color>#31ab42</color>
                <color>#24a737</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Calculation_660903279427690499:qk]' />
              <size column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Calculation_660903279427690499:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk:3]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='807' />
                <format attr='maxwidth' value='807' />
                <format attr='minheight' value='275' />
                <format attr='maxheight' value='275' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk] * [federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[cum:sum:Pivot Field Values:qk:3])</rows>
        <cols>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cascade BASE'>
      <table>
        <view>
          <datasources>
            <datasource caption='Impact of each variable  (Distributor Churn Data 1FEB18.xlsx)' name='federated.1ksibkk0zvmz1f11xn2wb1lgkgg0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ksibkk0zvmz1f11xn2wb1lgkgg0'>
            <column caption='ONLY SIGNIFICANT COLUMNS' datatype='string' name='[Calculation_660903279422902272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  float([Pivot Field Values])  &gt; 0.4 THEN  &apos;A&apos;&#13;&#10;ELSE &apos;B&apos; END' />
            </column>
            <column caption='Frozen Set ID' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='real' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_660903279422902272]' derivation='None' name='[none:Calculation_660903279422902272:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Calculation_660903279422902272:nk]'>
            <groupfilter function='member' level='[none:Calculation_660903279422902272:nk]' member='&quot;A&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]'>
            <groupfilter function='level-members' level='[none:F1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]' direction='DESC' using='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Pivot Field Values:qk]' />
          <slices>
            <column>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Calculation_660903279422902272:nk]</column>
            <column>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]' value='136' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk] / [federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Quantity per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='analysis_panel_201802091343' name='federated.1b3s7g509zerqs11id46a0rz930i' />
          </datasources>
          <datasource-dependencies datasource='federated.1b3s7g509zerqs11id46a0rz930i'>
            <column caption='Customer Number' datatype='integer' name='[customer_number]' role='dimension' type='ordinal' />
            <column-instance column='[customer_number]' derivation='None' name='[none:customer_number:ok]' pivot='key' type='ordinal' />
            <column caption='Quantity 2015' datatype='integer' name='[quantity_2015]' role='measure' type='quantitative' />
            <column caption='Quantity 2016' datatype='integer' name='[quantity_2016]' role='measure' type='quantitative' />
            <column caption='Quantity 2017' datatype='integer' name='[quantity_2017]' role='measure' type='quantitative' />
            <column-instance column='[quantity_2015]' derivation='Sum' name='[sum:quantity_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2016]' derivation='Sum' name='[sum:quantity_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2017]' derivation='Sum' name='[sum:quantity_2017:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2017:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2015:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2017:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]' direction='DESC' using='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk]' />
          <slices>
            <column>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]' value='255' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b3s7g509zerqs11id46a0rz930i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]</rows>
        <cols>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='analysis_panel_201802091343' name='federated.1b3s7g509zerqs11id46a0rz930i' />
          </datasources>
          <datasource-dependencies datasource='federated.1b3s7g509zerqs11id46a0rz930i'>
            <column caption='Customer Number' datatype='integer' name='[customer_number]' role='dimension' type='ordinal' />
            <column-instance column='[customer_number]' derivation='None' name='[none:customer_number:ok]' pivot='key' type='ordinal' />
            <column caption='Revenue 2015' datatype='real' name='[revenue_2015]' role='measure' type='quantitative' />
            <column caption='Revenue 2016' datatype='real' name='[revenue_2016]' role='measure' type='quantitative' />
            <column caption='Revenue 2017' datatype='real' name='[revenue_2017]' role='measure' type='quantitative' />
            <column-instance column='[revenue_2015]' derivation='Sum' name='[sum:revenue_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue_2016]' derivation='Sum' name='[sum:revenue_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue_2017]' derivation='Sum' name='[sum:revenue_2017:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:revenue_2015:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:revenue_2016:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:revenue_2017:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]</rows>
        <cols>([federated.1b3s7g509zerqs11id46a0rz930i].[sum:revenue_2015:qk] + ([federated.1b3s7g509zerqs11id46a0rz930i].[sum:revenue_2016:qk] + [federated.1b3s7g509zerqs11id46a0rz930i].[sum:revenue_2017:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='analysis_panel_201802091343' name='federated.1b3s7g509zerqs11id46a0rz930i' />
          </datasources>
          <datasource-dependencies datasource='federated.1b3s7g509zerqs11id46a0rz930i'>
            <column caption='Competitive Intensity High' datatype='integer' name='[competitive_intensity_high]' role='measure' type='quantitative' />
            <column caption='Competitive Intensity Low' datatype='integer' name='[competitive_intensity_low]' role='measure' type='quantitative' />
            <column caption='Competitive Intensity Medium' datatype='integer' name='[competitive_intensity_medium]' role='measure' type='quantitative' />
            <column-instance column='[revenue_2015]' derivation='CountD' name='[ctd:revenue_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue_2016]' derivation='CountD' name='[ctd:revenue_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[revenue_2017]' derivation='CountD' name='[ctd:revenue_2017:qk]' pivot='key' type='quantitative' />
            <column caption='Customer Duration Cmdr' datatype='integer' name='[customer_duration_cmdr]' role='measure' type='quantitative' />
            <column caption='Customer Number 3Yr Order' datatype='integer' name='[customer_number_3yr_order]' role='measure' type='quantitative' />
            <column caption='Customer Number Customer' datatype='integer' name='[customer_number_customer]' role='measure' type='quantitative' />
            <column caption='Customer Number Cx' datatype='integer' name='[customer_number_cx]' role='measure' type='quantitative' />
            <column caption='Customer Number S2' datatype='integer' name='[customer_number_s2]' role='measure' type='quantitative' />
            <column caption='Customer Number S3' datatype='integer' name='[customer_number_s3]' role='measure' type='quantitative' />
            <column caption='Customer Number Sh' datatype='integer' name='[customer_number_sh]' role='measure' type='quantitative' />
            <column caption='Discount 2015' datatype='real' name='[discount_2015]' role='measure' type='quantitative' />
            <column caption='Discount 2016' datatype='real' name='[discount_2016]' role='measure' type='quantitative' />
            <column caption='Discount 2017' datatype='real' name='[discount_2017]' role='measure' type='quantitative' />
            <column caption='Dmsp Better' datatype='integer' name='[dmsp_better]' role='measure' type='quantitative' />
            <column caption='Dmsp Parity' datatype='integer' name='[dmsp_parity]' role='measure' type='quantitative' />
            <column caption='Dmsp Worse' datatype='integer' name='[dmsp_worse]' role='measure' type='quantitative' />
            <column caption='East' datatype='integer' name='[east]' role='measure' type='quantitative' />
            <column caption='Economic Condition Negative' datatype='integer' name='[economic_condition_negative]' role='measure' type='quantitative' />
            <column caption='Economic Condition Neutral' datatype='integer' name='[economic_condition_neutral]' role='measure' type='quantitative' />
            <column caption='Economic Condition Positive' datatype='integer' name='[economic_condition_positive]' role='measure' type='quantitative' />
            <column caption='Revenue 2015' datatype='real' name='[revenue_2015]' role='measure' type='quantitative' />
            <column caption='Revenue 2016' datatype='real' name='[revenue_2016]' role='measure' type='quantitative' />
            <column caption='Revenue 2017' datatype='real' name='[revenue_2017]' role='measure' type='quantitative' />
            <column-instance column='[competitive_intensity_high]' derivation='Sum' name='[sum:competitive_intensity_high:qk]' pivot='key' type='quantitative' />
            <column-instance column='[competitive_intensity_low]' derivation='Sum' name='[sum:competitive_intensity_low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[competitive_intensity_medium]' derivation='Sum' name='[sum:competitive_intensity_medium:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_duration_cmdr]' derivation='Sum' name='[sum:customer_duration_cmdr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_3yr_order]' derivation='Sum' name='[sum:customer_number_3yr_order:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_customer]' derivation='Sum' name='[sum:customer_number_customer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_cx]' derivation='Sum' name='[sum:customer_number_cx:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_s2]' derivation='Sum' name='[sum:customer_number_s2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_s3]' derivation='Sum' name='[sum:customer_number_s3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customer_number_sh]' derivation='Sum' name='[sum:customer_number_sh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount_2015]' derivation='Sum' name='[sum:discount_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount_2016]' derivation='Sum' name='[sum:discount_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[discount_2017]' derivation='Sum' name='[sum:discount_2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dmsp_better]' derivation='Sum' name='[sum:dmsp_better:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dmsp_parity]' derivation='Sum' name='[sum:dmsp_parity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dmsp_worse]' derivation='Sum' name='[sum:dmsp_worse:qk]' pivot='key' type='quantitative' />
            <column-instance column='[east]' derivation='Sum' name='[sum:east:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economic_condition_negative]' derivation='Sum' name='[sum:economic_condition_negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economic_condition_neutral]' derivation='Sum' name='[sum:economic_condition_neutral:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economic_condition_positive]' derivation='Sum' name='[sum:economic_condition_positive:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[ctd:revenue_2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[ctd:revenue_2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[ctd:revenue_2017:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[ctd:revenue_2015:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[ctd:revenue_2016:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[ctd:revenue_2017:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:competitive_intensity_high:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:competitive_intensity_low:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:competitive_intensity_medium:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:customer_duration_cmdr:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:customer_number_3yr_order:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:customer_number_customer:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:customer_number_cx:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:customer_number_s2:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:customer_number_s3:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:customer_number_sh:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:discount_2015:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:discount_2016:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:discount_2017:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:dmsp_better:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:dmsp_parity:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:dmsp_worse:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:east:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:economic_condition_negative:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:economic_condition_neutral:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:economic_condition_positive:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1b3s7g509zerqs11id46a0rz930i].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1b3s7g509zerqs11id46a0rz930i].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1b3s7g509zerqs11id46a0rz930i].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]' value='334' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b3s7g509zerqs11id46a0rz930i].[Multiple Values]</rows>
        <cols>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='analysis_panel_201802091343' name='federated.1b3s7g509zerqs11id46a0rz930i' />
          </datasources>
          <datasource-dependencies datasource='federated.1b3s7g509zerqs11id46a0rz930i'>
            <column caption='Customer Number' datatype='integer' name='[customer_number]' role='dimension' type='ordinal' />
            <column-instance column='[customer_number]' derivation='None' name='[none:customer_number:ok]' pivot='key' type='ordinal' />
            <column caption='Quantity 2015' datatype='integer' name='[quantity_2015]' role='measure' type='quantitative' />
            <column caption='Quantity 2016' datatype='integer' name='[quantity_2016]' role='measure' type='quantitative' />
            <column caption='Quantity 2017' datatype='integer' name='[quantity_2017]' role='measure' type='quantitative' />
            <column-instance column='[quantity_2015]' derivation='Sum' name='[sum:quantity_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2016]' derivation='Sum' name='[sum:quantity_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2017]' derivation='Sum' name='[sum:quantity_2017:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2017:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2015:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk]&quot;</bucket>
              <bucket>&quot;[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2017:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]' direction='DESC' using='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk]' />
          <slices>
            <column>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1b3s7g509zerqs11id46a0rz930i].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]</rows>
        <cols>[federated.1b3s7g509zerqs11id46a0rz930i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='analysis_panel_201802091343' name='federated.1b3s7g509zerqs11id46a0rz930i' />
          </datasources>
          <datasource-dependencies datasource='federated.1b3s7g509zerqs11id46a0rz930i'>
            <column caption='Customer Number' datatype='integer' name='[customer_number]' role='dimension' type='ordinal' />
            <column-instance column='[customer_number]' derivation='None' name='[none:customer_number:ok]' pivot='key' type='ordinal' />
            <column caption='Quantity 2015' datatype='integer' name='[quantity_2015]' role='measure' type='quantitative' />
            <column caption='Quantity 2016' datatype='integer' name='[quantity_2016]' role='measure' type='quantitative' />
            <column caption='Quantity 2017' datatype='integer' name='[quantity_2017]' role='measure' type='quantitative' />
            <column-instance column='[quantity_2015]' derivation='Sum' name='[sum:quantity_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2016]' derivation='Sum' name='[sum:quantity_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quantity_2017]' derivation='Sum' name='[sum:quantity_2017:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2015:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2017:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]</rows>
        <cols>([federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2015:qk] + ([federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2016:qk] + [federated.1b3s7g509zerqs11id46a0rz930i].[sum:quantity_2017:qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Cascade ALL' w='49200' x='50000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98000' id='3' name='Cascade' w='49200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='ALL FIELDS EXPOSED'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='421'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Quantity per year'>
      <cards>
        <edge name='left'>
          <strip size='395'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='616'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_name:nk]</field>
            <field>[federated.1b3s7g509zerqs11id46a0rz930i].[none:customer_number:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cascade BASE'>
      <cards>
        <edge name='left'>
          <strip size='230'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Calculation_660903279422902272:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Values:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cascade'>
      <cards>
        <edge name='left'>
          <strip size='184'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Calculation_660903279422902272:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Names:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Values:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Cascade ALL'>
      <cards>
        <edge name='left'>
          <strip size='290'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[sum:Calculation_660903279427690499:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[:Measure Names]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Calculation_660903279422902272:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:F1:nk]</field>
            <field>[federated.1ksibkk0zvmz1f11xn2wb1lgkgg0].[none:Pivot Field Values:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cascade'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cascade ALL'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ALL FIELDS EXPOSED' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2915Oc6XWn+aT3mZW+vPcOBd9ANwC2IZsMShQljaQZKTQTM9JImtXubMRG
      7L3+gr3Yi73ZjVhpNBpJI1I0UlONbrSBawAFoFDeZlVlVlZ6792X37cXUEPLrpbIbnIqmch8
      rrqBrMpzqvDm957fe87vlUmSJNGmTYsib3QAbdo0kvYCaNPSNHwB1Kslnj5+RDCW/qm/RhSq
      FMpVwkcHZPJF8qUKIZ+HbLn+ua/37O4i/tNXk88X/8XvH/Efki6UyBfKP/bnlWyM41iO0NE+
      sfAxwUThxd8dHuz//97jp0Ei7N/n6fIawhf4wnw+D9TZ3fVQyOeRJIHd3YPPfa1QSLAfSLz4
      /3KpgFD/l97sH79vIc9nd8b7B5//Hie+Q7XE0uPFL/T7rAtViuUqx/se8pUKxXKF0OE+uarw
      ua/f3d198d+SJJEvFD73dZ8SOTogVShTKH7m95lPovypo/wfxP2PbjH+ylvYtPDg7kcojE5k
      5TSFQgmtUU+Huwv/pge11cpIlxmPL4JDV+GDrSJvLXQihLzcWkvxtYVOArEcQ5Pj+PcPKeeT
      qM1uzs1NsLS4SLGYplQso+2wcetHt/md3/k2Ozt7uHuHCPm2QWWmx64jURSxaepUU1He+3ib
      669MMzM7wr6/QJ8qykbMjDr2jN6xGYoKGZ61x6AxEvVu4D/yMnn+NVwmzU/Mu14r8cnTLX75
      m18jdLjF3lGEyalRNlf3QAnIlLisWgr5Ip3D00QPt1DorTy68x5vf/vfEA4f8+HNH/L6L/06
      0UiIUrmAWSOjIikIhSMsXLyKNh1geauIb3sFVFpygU2Mw5fp0VWJZgVsOjl5oUqHs4+oz0PP
      6DSRSIC7t97hwvW3QKZCJZYZm55jeXmFkeFh9jdX8IbTdHc66LAa8YYrGBRl5ufnAXh850O6
      z72OwwAP7t5GYbCjqKbI5ksYjAb0HZ1EAl5UOjMDLiP7RxGcJri/neTiUBfxXIhPngV5dWqI
      SLFAd+8owYNtyoUCKouTc3OTLD5epFbMkC+WMVjs3Lz5Hr/1m7/Owf4+XX0D+A8PQaVlyGUi
      kCxh10E5meTuw1WuXFxgYmyI43CGbn2h8U+AYkXAqNNQz/pJ4yLm3WM/FKHToKOjp4/j4B75
      spJi5Jhbd++BVEWtMTE6PkE1n8JgtjM8NoGQT2Hq0PP+D/+eVDLI0+0Q2WzmxfuE/AHGR7rx
      RHIMD40S231GvCIjnYyTLYvkE0EqQo1MOk02HUdjtjE8Oka/TcHf/M0/YHE6APB7PRyHYwjl
      DHsbz5B1DBIP+1BpjfTbVXjD2Z8ucamOTKFCpVLzZHWbKzO9fLL4GEltRyhXkFUKeI4DzM9O
      8Pj2OyxuBMgVinT3DTI60E08kaCrd4DRgW6i8STRoJ+1XS9Ljx+gok4q+49PuXqVTBHyiRB2
      dzeTo4Pc/eQRtUqO/Z0jhkd72PEcUS6XyOULxOJxOnv6mZycxLu3wXE4hlIhexH26s4h871q
      dr1B3rv1iGzGTyD8Tz/nUqmKwaChkvSTVzmIHu3hC0TpsSno6OnHu+shL6ipJAPc/OAOSiqg
      MTI2MU0lk0BvtTM6MUUtm0CjV/Pogx9yHIqxsh8il/mnn+1RIMhQv5tAvMjw8AgxzzMSZRnZ
      VPhFvtWaQDabJp1IoDTaGBmfpM8k8ffvvI/a8vz3qfiTP/mTP/mS/3Z/LnS7bSw+XkJl6aaa
      9KJ39ODqMOG029CaLajkVdYW1+mdmmJuuJtcTUb/yCixIy/uLhfmzn6SRwe43E7svZMkAvu8
      cv0NqpkI9q5e3A4bhUIBu92Gw+WiJunRimm6RqdIx2P09PWj06ixmEwYjQYy2QLuThdmZx/Z
      oJehuQXWVje4ceU8Ur2K2T1Mv9OAucOO0dZFIrBLLF1gcnQYp8OGQm/FavzJTwCZXE29kODA
      H2W4z8X6fpD5+RnUKj0mgxqz2UwqHiKayHPm8jWUlRT2zl7cZg3pihydSk6300qyJKJTqxnr
      dVJSm5kd6iRZhr7eHnRKiQoaOkxGrBY9A309HAaT9DtMKHQWHB0WnN0uhJqIWiZDptLQYdTT
      3+kgnK1iJ4XomqbfaSYZ9hPLlOl2GPGE8rx27RXCkQRjTi324XnsJi0AbredpSdLaKydlGN+
      DI5unFYTDocNjdGGrFZhe3uLrsExZkd7yAtKhodHiPgPcDhcuPr6iXn3sTm7cA2OENg/5M2v
      v0khGcXR2Y3baaNYKGC323E4HUhyDSohR+fQBJlkit6+PtRqHVaLHpPJSDaTxeHuxN7ZQybk
      ZWjuAs+ePuONa5eQxBqyT2XQfD5Pvf75e+jGUsGzF2V0rK8h756OBsjUNQx0OU78Xb1aYmV1
      FbOrn9H+rp/7ex8e7NM/OIxCLvvJL/65I7KxssHE/BzKn+PbS7USB4EkI4M9P79v+gXIxI5J
      1bQMdj//fcra5wBtWpkTRfDm0l02g3VenbLzdNtPR2c/+eAe+ZqSs1M9bB+EcfQNQzbKoT/G
      lVcX8Hk8qGx9kI3hDycZ7jSQkBmZn5qly2FuRF6nTsR/gMcXoH98jj5XR6PDORUkUeDhR7eZ
      vHYDq7rhesqX4kQRPDY9Q71cwrO3y+UbbxPxPKZEB336OvfXD3jtxuscew8ZGepFodHS6XKT
      SyVQaU0MD3aj0OqxONwoyxli6VwjcmoIju4Bhnqc5HL5RodyakhIWI1GysIv4tb5p+MzC0Ai
      Ho2QTiewWG3sbCyjsw8iVVIEcwITPVY2N9YwWUz897+9yaWLC8TjSSampgkf7/Gd73/ApXPz
      6E0d9LptxOKpxmTVAIKHO6RFA1PDvY0O5dSQy1VotapGh/Ez8ZkaQCIWDlGu1XG4OsmlElid
      bmrFLGVRjtWkJxqNYXc6iIbCiMixWk2k03lcLjvRcATkShz2DhKpLG63q0EF3OlzsLNGJJln
      YHSabqel0eGcCkIpy4PFJTQWJxcWZhqvqX8JXiwAQRBOnP61afOy86JyEQQBURSRxDrlqoBW
      oyKTTmO0WKlXilRFOUadmnQmi9nSQSGXRqbQYDLqKZVKaLVaSoUcAkrMBi3pVBq92YJaqWhk
      fm3a/IucKN23Vx+wfFji0oiRYEFBuVqjnIojihL9fXaKgooqSvqsZpZWVnnjzav85V/9HX/4
      x/+Bfc8hO9u7DI50odA5GFRqUZv1jcjr1An7Dzj0B7H3jDI+0NnocE4FsV7mgx++x8I3voGz
      SWuBE9u20clp1DKJSCTK1Px5ivFDJI2VbpOSLX+CufkzZJNJtOo6JUGiw95Nj7MDGUqUlLH3
      DxM6ClBOBVjd/ukaqF4G3D0DdBh1aLXqRodyasgVWiZG+6k38db5MwtAZG9ri1DQj7Wzl8W7
      t3AMnkFTT+HPw6XJPu7fvU1np5vjaAaTRkU45CcUDrN/sMOt208xaZWMjg6Tr9TRarWNyaoB
      7KwtobR04ba1xrkHPD8HKBSLFApFmnUJvCiCy+UyovjFGnrb/BOJSIBoMourux+7xdDocE6F
      erXI7r4PlcbA8HB/c6tA9Xq9rQK1aTlO9ALVKgUiyQLdTgtrq+uMTJ+hEPeTqakY6bWztrbN
      +Ow8Gqpseo4Y6LSyve9nenqczdV16jIVc7NjbG95mJybx9ikxdEXRZJEqtUaarUamaw1zj4A
      xHodmVzetDmfWADbq5/weDvDXLcMff8ZNp4tItaVmBUVJJ2a0ckzrG8d0G0Qebof4Xd+7ZsU
      k0csHVX4+qtz/OVff483vvIaskqKx74q37xxtlG5nSrho32OgmGU5i7OTQ83OpxToS6U+NFf
      fY/zv/brdOt/cgv4LyIntm0j45Oo5VAolLBYHUjVDHKVDoNKTjxXwWq1Uc2GeLp5SC4epFqv
      s7FziMlowLf5hL6ZiyjqBe6vB3j9lblG5NQQHJ1diHWRvp7WkEABFEodc3OTNOdn/3NOqEC7
      m1uUiml6xmZYvv8Bo2e+gttUJ6Pq4K1L8zy6f5eZCzf4wz/4D7xy+TLZWACV1ojJoCWQrHBx
      eoD19S0cVhPx5E8/F9rsPLr9AQVBRq1aa3Qop4ZQyrKyvsH6+s4XnIf+xaE9D9CmpXlxElwu
      l9sqUJuW48daISRJIhY8JJAWmeq38WRplYGpsxQi+2RqKmaH3SytbDE6ew6rqsrdpR1mhzs5
      9PvRWnpRVePUVBY6zSq8/hDD0wu4ra2hiQuV55r4yPgEGmUzKuJfjmwyicbSgUbRnDmfiFqk
      jmd3n9UnDxiau8jSJzfZ9aWoRby8f/8Rk3NneLy4yOMnS8RiETr7hjBSQaOr443USPl20Tq6
      MKgEfMFoI3JqCOl0BrfDxNqmp9GhnBpivczix3dI/jP+Pc3AiQVgs9l+YlUvVtJEUgWiwWNy
      pTI7gRwTPdYfe41Wq6VYLP08Y/2FxqBTsXMQZHpypNGhnBpyhZbxscGmVoE+0w0qsr97gE4j
      MTB9nt21x5y7+jaFsIeM4OKrw26erqxw+drX6LQZ2draRl3LMX/pVeRqO4NuFVXlONmgl0S+
      zsREY5wcGsHWxgYyuY5MNo/e0RoDMfVyjh2vD62gwnW2yQdi2kVwm1akLYO2aWlODMR4Np5w
      mICL43YerezSNTRFPrhLRlBxfqKbZ5sH9I/P41t7gLV7lOnRTv7u3bv85r/+ddJ+D+893uXG
      2VF2drZQuaa5dm6sEXmdOul4iG2Pj7GZhRcuaS87kiSyu7ZGz9QsRlVzTv6d2LZ19fWSjMbY
      WFlm4eobeFY+JpKTY6mmuLW4yqWrr7G1vkxdrJPNZdEYOpALJUSpztMND0qxTM/QOAgCY6P9
      jcipIah1JiaHe/D6jhsdyqkhiVWy0TjZ2kukAqnVzyeaDAYd6WQcmdqCWCuRr4o4TBpSyQRK
      tZrLr32NWjxIWa5GLpNRL6WRZEqOjo7I59NES2o6zc3ZIPVlKGZi7BxnODsz2uhQTg25QovT
      aW1qFegzNYDI1sozErky0/Nn8Ht2Pqcdeovx2XlCB9uIWhtWjcD2/hGunkHGh3oJBoPYTBpy
      dR3OjtaYBwbYeLZItlxvOVuUO3c+QePs5cq52eZWgdoDMW1akRdFcK1Wa49Etmk5TqhAW8v3
      2QzUuDJpY2UvjNnZRT50QEFQMD/ehecojrV7GP/6QwanzuIywV4gzfTMLHfe/QFjcxehFCNX
      rGLoHOPC9GAD0jp9oseH7PuD9A5P0+e2/uQveAmQxBoPP7rL5LXrL4857ujkFNSqeA8OuXjt
      TeLeFSoKK30GWNz2c/XadcL+A3r7egkcHbG+uY1GLuIPRujr6+XY70cUqqRzeaSm3BV+ORzd
      A/S77RRL5Z/84pcECRmODjOVf/HesV9sTpjjRoJBEvEYZqudrdWn6B1DyCpJgjmBqT47a6vL
      mG02OqydUCvj6uxEqdGSTSew2rqQKiViuQqjgz2k061jjhs42KaosDAx+PO/KOMXFblciaZJ
      P/k/5TO2KHUyqRRVoY6lw0oxn/1nrRFL+Swo1Rh0GjLpDEazhVIhi1ypRadWkMrm6Oiwtow5
      rs+zRSSZo294gq4W6gVafLqK2mTn7PxkUz7v2+a4bVqaE71AkihQKFUx6DTEorHPt0d3uckm
      ohRrYDaoyGQLmCw2hHKOSl2O22EhnszgcjmRN6ldRpvW4MQC2Fi6w9J+gcsjBmKCgUw2SyWd
      Akmiu6cDSWkiW5YR921w9cbXsFm07C4/IKEeJLb3mGtvvM3e2lMcNhMFbS+vnmmN/viQz8P+
      0TG27jGmRxpzAdxpUxdKvPfddzj3rW/h1jWnJ+qJbdv49CxqGUSiMcanFyglvKCx0m1SsBNI
      MTU9Ry4d4/zZBe5/9BFKk43jSJZrFyY5tzDPvY8+xmS1kC+WCYUiDUipMXT2DWLWazEaW+f0
      W6HUMTU5jNjEW+cTtig7G+tEwn4cPYM8vH0T9+hFdFKao6KCV2eHuXv7Q3oHB8lkCmiNJuq5
      IGrHCDqlQDZTRG8009PTQ7la5+z8ZGOyagDrTx+iMHfiaBFfUABRqJJMpUmlM81vjtvmZyMV
      D5NI53G4u+kwtcZTQKyWODgKoFTrGejvbsqmuBcLoFqttlsh2rQcL04xRFFEFEUqxSyRVIke
      l4X1tQ2GpuYoxI7JCipGeuysb2wzOj1HOR0mmCwzPz3GkWcLvWsQMRchmhcZ6bayuXPA2PQc
      Zn1zFkdfFFGsUyyW0BsMLaV8CbUqcqWqaXM+UQQf+3Z5sLjCxuO7GN393P7gJo9XPAS3nvHx
      3dvY3J3cvnuHm+9+iEqtopKLsvjJA3aPg9x87w5qlYpiuUa/U8eDpe1G5NQQYiE/B54dVrYP
      Gx3KqSHWy9z62x8QKTevHeSJBdA/NIxSBsVSGZO5A6mWR6ZQo1fJSRWrmM0W6uU0KqOL2O4z
      fvTRA5QaFZGgD62li+PNJyQzaR5uR7lxeaYROTUEu8NJuVRhoK+70aGcGnKFlunpsabc+3/K
      CVsUz84etUqOnrNnWXt0m7GFG+RDe2RrNt6Y6+LpowdMLVwjc7xNpmLil2+8RiHoISRZyfrW
      KNQ7CR8dYu/oIJ5I09tpb0xmp8yTB3epqCxUyhUwtsZMcL2cY317B11Viet8kw/EtK9IatOK
      vFgAbTW0TSvyYgv06RU3Id8O/jTMD9l58HiZoZkL5IM7pGtqzo538Whpg/H5ixTCHlI1FWOd
      Jtb2vIxMniG8v0ZNaWbApmI3nGFycpYuR2vcmlgr51nb2GX6zALaFjLHTceiaG0OtC+LOa5S
      o+Jw74Bni/eZvPAaS/feYe84ixT38aM7Dzhz4RKPH9zi7v0lZJLEvmcXnUbN7v4O3qMYYd8h
      +14fdUlErW6N+8EA0pkco0NdLK/tNjqUU6MulFj8+C7JykukAnV0dACgkMsRajWQK5AkEVEC
      lUJGrVZDJpNjcXZTi3jwJkqYTEaKmSR1hQa5VGXu6ptcnezh/uLqqSfUKPRqOavbRyzMtoYR
      GDzvBRofH3q5VKC9bQ9GvYzBucvsbjzllRvfJB/ykK6puTTi5smzNa689lVyIQ/xkow3ezrY
      3j/i3PlXiHp3qCkHqCSCbBwFefXyucZk1QC2t7aQoSGZzreULcq214dOUOE+P9fcKlBbAWrT
      irx4ArR7gdq0Ip9vjpuEC6N2nqx7cA+Mkw/tkaupWBjvYnXHR8/QGJV0jPXNXa7fuErgyIe5
      a4Sjjcd0Dk7isijx+o7p6J1kdqQ1TkZT0QB7h8cMT87jsOgaHc6pIEki28sr9M7OY3pZzHF7
      BwfIJpJsb6yzcOV1vOv3SBRUWMUcHz/b4tKVV/Hs7jE3M4bB6qLH7aSUz1AV6igUctKZDJ19
      w+gUdWpCvRE5NQS92c74UDeBULjRoZwaklijmstTaOLf84kFoFA8X8kmo45kIopMa0UUSmSr
      Im6zhkQijlKjZ/3pInMXLpEv17h4/gyBYx/nLn+FSjzE/TsfoO+b52wL3RCTS4Q4iBSZmxhq
      dCinhlyhwWo1NTqMn4kTKtCB54i+7g56p2cJHnp466tfp5gIkK2pGOi2sbm5w5s3rpCKR3F3
      Wsgmwuwdp3nr+quEvbvMXrmOoprmOOLjWKNsmV6geDKNUKoRSWRayhbFG0ugEfdxnZlqbhWo
      Wq222yHatBztkcg2Lc0JFWhj6Q4r3grXpm0880Qw2TvJB/cpCArOTHWzf5Sgw92LVizx8Z0H
      vP7KHIGKinNzc3z4999h6txVzs2P8Wf/5//B2V/9j5wddDQir1Mn7N/H4wvQMzzDUHdrbPtE
      scq9mx8y88ab2DXN2fbyubYoClHA6/Vy5StvkzxaQVA7GLLIWdw55tpX3iASCjIz3svI7Hm6
      evswUuI4HGN0dBjfwSFP7t9maHq+pVQgV88QfS4r1Wq10aGcGjLkdDlsVF8mc9yjwwPCoWMs
      NifLi/cwusehHMeXEZgfdPJk8SEdji4efbLI5auXkCvVdJiMFAoZDAY7klDB3jtIKR0jmUo3
      JqsGcLS3QU3railzXJlcieplMcd9jkQhn0eoi+gNRqrlElq9AbFWQZBkaDUqCoUieoOBWrWK
      WqNBqgsUimUMRgOVUhGZQo1Wo6Iu1JBkCpRN2ib7RfF5tgjG0i13RdKjp6tojDbOLUw3twpU
      q9XaKlCbluPF86teryOKIlJdIFcsYzLoCAaDOLt6qObTlOoKHB0GgsEwrq4eipk4VdQ4bRYy
      yRgqQwdahUQ0maXT5SCTyWC2WJq6VbbNy8+JmeCtlfssHxQ5P6Alq7ARj0ep5gsopTp2lwm1
      wUE8myMfTaBC5PVfepO///M/p//Vb2PIHbK4E+DXvnaF//bdm/zR//T7J2Wml5Sw/4DDowCW
      rmGmh1vDHFesl3n/e//Awi99E7e2Of2fTl6RNDGFWiYRT6QYHJ2kkg4gU5txGhQcRLKMjI5R
      zKQRagVytRoPbr2HymQmcrzHw1UPlXwKrbWbLntzH5F/Udw9/Ri0aixmY6NDOTXkCi1TE0M0
      8875hDnu3tY2iXgIZ+8gT+59QNfYRQzyHMGKiquzI3xy7w59Q8Po9UaMOh2X3/oWVxZm6Okf
      5d/97r9mZGiIfMxPPJnEe9w6jWFrTx4gNzow61vncnBRqBCJxYnFEs1vjtu2RfnZyKWTZAsl
      zFY7Jn1r+AKJQoVQJI5CqcHtdjRlvfdjE2FtFahNq3GiF6iQTRBOlhno6mB5eY3hmbMUol4y
      NRUT/U6WVzcZnztLwr9DQdIz2mNlddPDxMw8xcQxsYLEmekxdteWsA1O4zC1yKdhvUYqnaXD
      amuZiwEBquUSCo0WRZOa454QaSJBLw/XomTcEtbRS9y+9Q6SpMOiKHN0qGR2/gIf3/6QWqGG
      jiohn4rxiWnuP3pIaHeXV978KsWknwf3HzFr7G+ZBRALBUik0xwGk1yYaw1niLpQ4v2//QFn
      v/2rdDdp7XNCBeobHEIpg3K5isFoRqoVnp/uKmVkSzWMRhP1ShGhUiBXqaFRa9nd9aBVSZhc
      Q0S2n/LDDx6i1ysIR6KNyKkh2Ox20ukcI8P9jQ7l1FAodczMjDfl3v9TTgzE7G7tUBcK9E2e
      Z+3hR0xf/Cq54A6ZmouvnevmycNPmD9/heDeBhVJRW+3neNwHFfPGCbFHvl6N79x7SpJ7zY5
      Q2vo4QBPHtyjojJTKpaxGprz0/CLIpSyrG3voK8qcV+cb+5WiDZtWpEXT4C2DNqmFTlRBAe9
      2xynYW7IxuLSOv0TC+TDe2RrKuZHu3i6us3IzFlih+sUJR1jvVZ29v1MnDnD8fY2JZmaoU4z
      Xq8PnXOEc9ODDUjr9KkUs2zu7DMxM49e3ZwWIV8USZJIhEMYXJ3omrTr90TUWoMOv/eItaeP
      mTj/KmuL7+MNF5Gng7z/4DHz5y+y/PQTjvwx4oFjFlfWmZ+bYHFxnd5eN+FAAPfAKAqhhMPt
      bERODaFQrDA62MXG9n6jQzk1JLHC+uMl0lWh0aF8aU4sAJPpeQ+PUqmgVqmAXIUk1qmJElqV
      gmqlgkyqI8i1aGQ1zl96hY3VFZRqNVqzDWW9TLVW5jgt0mdrnTtzVXKR9d0AZ2ZGGx3KqSFX
      aBke6n25VKD93UMsRiX9M2fY313nletfpxA5ICOouTzg5NnaNldee5Ood5uSpEUr1VAZHFyf
      nmBrc5PBqXlkxQwXX71Ok56NfCkOPB5kqEikci1li7LnD6AV1LjONvlATKVSaRfBbVqOtgza
      pqU5oQJtrzxgPw6XJxw8XvPg6h8nF9whW1NxfrKH1R0f3UNjRA93qci1fPPtr/DuX/8ZXRe/
      QWx7kZrKzNe/ep0f/Nn/zeRbv8VUT0cj8jp14iEfuwfHjEwv4La2Ru0jSSIrjx4xfP4iZlVz
      jj6d2LYNjY2RT6XZXl/j/LWv4t24S6qswyUr8OHSFleu3WB/7RHxvEgl7OfZ6lM0FhfZ5BEF
      mQtdOcWTxQcY7N0Um1gd+KKY7V1MDHe3VPuHJNaQVevka81rf3PCFqUuCAhCDbPZSCR4hELv
      RKzmSJbr9Nn0hILHqK39vHZxmiJKVDI55WyMSKpMvZwkVxVRKFUU0+GW+seQCvvwJWotZ45r
      seibWgX6TA0g4tnaJFuqMjIxRdh3yMDYJKVUmKygpM/dwe7OPkPjEwT2tzG6+nBZTVSLOUqS
      mkomjKA00+2yUs5nqCn1mLTN6Rj2RdleWyKVr7ScLcq9+4/Q2Lu5fHamuVUgQWid7UqbNp/y
      onIRBKEtg7ZpOU6U7lvL91jxlnl10sqqN47e4qAQ9lIU5Lz1xlX+/L9+lz/6z/+Rd7/7faqo
      +favfoPv/j//F/3XfoXIxmNEpZ6LZydZe/IJ6r5LfPXyZCPyOnUix4ccHAXpHJxgqLs1DIHF
      epX773/E9OtvvDzmuKOT06gQ8fuPuXztLbLBLUStk6EOFSWdk/5OO1RTyIw99Bhl3Ll7j+6R
      CarZEKqOIZxaEWP3KCgNXD073oicGoKze4Auu6WlnqIyuYIet5Oa2LxHSSdsUQ49ewQCR5jt
      LpYe3MHUOY6sHMeXqaEuRgkEg/giZaRCkGBBYnJ8DGW9TKGuo5bxES/L0BSPEfRdGNTNWBZ9
      OY72NsHUyUivq9GhnBoymQKlsrl/x5+xRalTq9YQJQmVSoUgCChVz5vhREmGQiZRE+rI5Qrk
      MpCQoVQqkEQRCRmSKCDJ5ChkICJvqeHwgHePQDRF3/BES/UCPVneQG3o4MzcZPOrQO2uiDat
      xoleoETIx3G6zmS/jcdPVxieOUc+7CFdVXN+doQHj57xymtX2Ft9ShE9g3YNawchRsenCewt
      Izc4mei38WzjgDPnL9LRKvOx1RIH3mMGR0ZRK1rnyZdPp1CbLajlzfj5/zlFcKVWZHNjh5VH
      dxmYPs/D2++w4YlRCuwRyBTZ3dqiLqTZ9qZIebdZ2dyhWAeDXsPm5jZ6g5E79xoutesAABbw
      SURBVB5yfnqAu49WGpFTQ0gmEph0CpbXdxsdyqlRF0rcu3mLeLnW6FC+NCcWgNPlRg7URRGl
      SgliHWQy5DLQmjow6TUgSSBToJDBwo23eWNhiI/uLfLvfv+POHj2kFwdlColoti8PSJfFLNR
      h8cXZnpypNGhnBoKpY7JyZGmboU4MRCzt7WLWikwNHuRrcd3OffaN8kHd0jX7KgyQVQ6HftH
      OYY7NRQYphI6YN0X4PKFOR5/ch/HyDTXes3cfbzNq5euNCarBrDy7BkypYFstoCxhVohNj0H
      6Goq3BfmmrsIbhfAbVqRF0+A9kRYm1bkRCuEd3cFXxLOjth4srpL1/AU+ZCHbE3J1fPT/Oi9
      O3zr136ZpXsfU0TPuYkeVrZ9jE3NcLjxFEFlps8sx5cVmJyYotNubkRep04uFWPH42N0eq5l
      lC9JkvDu7uAaGcOgbE4rmBPbNofbRTwcYXN1mdlL19lbvk04LWKsJEmIWqRKEbGaJJpTocpF
      ee/eI0Ain/KTrBgR02ECmRJirYTQxEfkXxS5UsPEcDcH3uNGh3JqSGKVmD9A7uUZiAGN5vmn
      l16nJZdNIVMZkeoVijURk07z/HRXoUEUSpQEEavJwMjYCDu7XsRakUpdYnRqlsvTg6xtek49
      oUZRLWbY9CU4M906KpBcoaHTbW90GD8TJ21R9ny4nQZ6Z+bx7+9y4823KcT8ZGsqpHQIZ08P
      3qMUF+YGKaJnuMfO2tom11//GumQl5rKjIEqW/40X7lypiFJNYJgKAyCRDSRaalWiINwFE1d
      javZ7wmuVqvtIrhNy9G2RWnT0pxQgTaX7rIZrPPqlJ2n2346OvvJB/fI15S8eeMif/GXP+QP
      /vj3eP8H36eMlpEeC5F4ms6RWYphH/5wkosXZ/B5PBh7Z7gwNdCIvE6diP8Ajy9A//gcfa7W
      sIKRRIGHH91m8toNrOqXxBZlbHqGermEZ2+XyzfeJuJ5TIkO+vR1CjoXbqsBqRqnqnLhUlU5
      iGYwmc3s7BwwPNiNQqun2+0mlYyj1rTG9UgAju4Bhnqc5HL5RodyakhIWI1GysJLowJJxKMR
      0ukEFquNnY1ldPZBpEqKYE5AL+RIp9Mk8jLEYoxYUeS1Vy6iU0Jvr53vfP8DLp2bJ5pIMTs9
      STAQbExWDSB4uENaNDA13NvoUE4NuVyFtsldPz5TA0jEwiHKtToOVye5VAKr002tmKUsytEp
      JeLJDDqDGZ1SpIoavUoimS3hdloJBUIgV2KxGMhki7jdLpRN6hv/RTnYWSOSzLecLcqDxSU0
      FicXFl4CW5R2Pdym1ThhiyKJdcpVAa1GRSadxmixUq8UqYpyjAYd5VIJrU5HpZhHQIleoyST
      zWPpsJDPpJCrdGhUMjKZHAZzB7omdQto0xqcNMddfcDyYYlLI0aCBQXlao1yKo4oSly9cYX/
      9l+/yx/959/j5ru3kJBhtekx6HRU1B04tSpW1tfpserQ9I0zqjO2zAII+w849Aex94wyPtDZ
      6HBOBbFe5oMfvsfCN76Bs0lrgc+1RVHLJCKRKFPz5ynGD5E0VrpNSqovbFEyyPQuXHoZksZI
      uSoQCSfRKKuU63JGZ2YpHu+xtudvRE4Nwd0zQIdRh1arbnQop4ZcoWVitJ96E2+dT9ii7G1t
      EQr6sXb2snj3Fo7BM2jqKfx5UOdDBMNhPIEiykqESEXJ1GAP9VqVqZEeAvE8RrWCXLEMcgV6
      bWt0RQLsrC2htHThtrVG9ys8PwcoFIsUCkWadQl8xhal3QrxZUlEAkSTWVzd/dgtrXE/QL1a
      ZHffh0pjYHi4v7lVoHq93laB2rQcJ3qBapUCkWSBbqeFtdV1RqbPUIj7ydRUjA124z/y0zMw
      QC2fJlUCg6LK9r6f6bl55NUsuZoKt92Mb28LS/dwCw2HiFSrNdRqNbIWuh1QrNeRyeVNm/OJ
      p9b+zgof3X3K6sOP0Dm6ef/mO9xb3MS3ukgwFuW73/0hArCxdJcHz3aQq3QMurTcW1xj9eEH
      PN7wUcmE+PC9W+xHcw1IqTFE/IesPHvCs63DRodyatSFEu/85V8TKlUbHcqX5sQCGBmfRC2H
      QqGExepAqmaQq3QYVHLkJhe9bhsAYxOTKGWgVcnY2DnEZDIwPjGJXAYfffAxOqOmpW6IcXR2
      IdZF+npaQwKF57Yoc3OTL5ctyu7mFqVimp5z51m+/wGjZ75CPrhDptaBOhukWKng2fdSChyQ
      S5XZ2dej0hox6dXseHbJZJV8+5d+i8zRBjljT2OyagCPbn9AWW2lVm1ek6gvilDKsrK+gb6i
      xH1pvrmL4DZtWpEXT4ByudxWgdq0HD+2BZIkiVjwkEBaZKrfxpOlVQamzlKI7JOpqTg/M8L9
      B0+5euM1IgebZOjArSmz4Y0yOj6Bf2cFlcnFwplplu9/TNf0Jbqs+kbldqoIleea+Mj4BJom
      98z/ImSTSTSWDjRN2vV7ImqROp7dfVafPGBo7iJLn9xk15eiFvESzFc4PvJRB4RqnkNfkOPD
      Q8p1EY1Gxf7BIWqNlkxgj0NfgEim1ICUGkM6ncHtMLWUE4ZYL7P48R2STXwf9IkFYLPZ/tmq
      Xmcwo/vH0Teb7bkdxswrN7h+ZphPHi7xm7/9b/FvPuPx9gFKWY1INPY/LPBfNAw6FTsHwZYy
      x5UrtIyPDb5cKtD+7gE6jcTA9Hl21x5z7urbFMIeMoILZTaM1mjk8NBHJRZEIQgc+48IhcJc
      ujDH6tPHuEanOTc/RSbko6R1NiarBrC1sYFMriOTzaNvIVuUHa8PraDC1ez3BLeL4DatSFsG
      bdPSnBiI8Ww84TABF8ftPFrZpWtoinxwl4yg4vqlWb7/9x/ym7/9G+wsfkRa2c1Mt4Zn20dM
      Tk1wfHDAtueQVy/N4vGGGD9zmaHO1rAIScdDbHt8jM0sYDe1hhuGJInsrq3RMzWLUfWSmON2
      9fWSjMbYWFlm4eobeFY+JpKTY6mmSMqMKOsVRKCzy0UykWbx4SNkSGSLImfnx9CZHWxsenjj
      6gLLKxsNSKkxqHUmJod78Ppayxw3G42Trb1EKpBa/XyiyWDQkU7GkaktiLUS+aqIWatG/o9X
      n376OpPRyPDYCDtb2zx58IALV6+iVcqIJ9PoDK3RFw9QzMTYOc5wdma00aGcGnKFFqfT2tQq
      0GdqAJGtlWckcmWm58/g9+z8WDu00wAbu17sXb1Uk2HyNYn5hQX2t7cYnZojnYjQ09NLvZJn
      ZXOf2fm5ljkU2ni2SLZcbzlblDt3PkHj7OXKudnmVoHaAzFtWpEXRXCtVmuPRLZpOU6oQFvL
      99kM1LgyaWNlL4zZ2UU+dEBBUPD69Yv81V//Hb/3n36ftbvvEKWHs4MWNlafUjGNkjtaYWzu
      IrJMgITCxOzkdMtckRQ9PmTfH6R3eJo+t7XR4ZwKkljj4Ud3mbx2/eUxxx2dnIJaFe/BIRev
      vUncu0JFYaXPAEWtk06bCQkYn5hEFAQ6+4aQJAWvXJimr6+XY78fc1cPykqWaDLbgJQag6N7
      gH63nWKp3OhQTg0JGY4OM5V68+4cTpjjRoJBEvEYZqudrdWn6B1DyCpJgjkBbS1DIpkkGksQ
      CgSIR8MUsjFyWLDqJKy2LqRKCYVGj9NqIp1pHafkwME2RYWFicGuRodyasjlSjRN+sn/KZ+x
      RamTSaWoCnUsHVaK+eyPWSNqFBKZXAG1VodYLVOXwGQ2AQrUKgX5XAa5UvvcGjFXxGrtQN6k
      w9JfFJ9ni0gyR9/wREtdkbT4dBW1yc7Z+cnmVoHa5rhtWpETvUCSKFAoVTHoNMSisR+zR7da
      TBRyOQwmE6JQpVwT0akVRKIJnC4XxVyKulxLh0FNJJbC6XI+v1WyTZtfUE4sgI2lOyztF7g8
      YiAmGMhks1TSKZAkXv3KVf7Ln/53/pf//X9l5cPvcSz00KVMoLU6iebKZIJRlHKJDpsOi9lC
      Qenk+rnxRuV2qoR8HvaPjrF1jzE90hpmAHWhxHvffYdz3/oWbl1zeqKe2LaNT8+ilkEkGmN8
      eoFSwgsaK90mBVWDm4FuBwCTM7MoZRJGnRqv7wit1kStkqNQE0hlSyxMjxOLRk47n4bR2TeI
      Wa/FaGyNEVB4bosyNTmM2MRb5xPmuDsb60TCfhw9gzy8fRP36EV0UpqjogJNLkg4GmVv38vW
      xhYB/wHZqgyL2YysXkKjM6HXahjqc3Pz9kPGx1qnL2b96UMU5k4cLeILCiAKVZKpNKl0pvnN
      cdv8bKTiYRLpPA53Nx2m1ngKiNUSB0cBlGo9A/3dTdkU174ou01L8+IUQxRFRFGkUswSSZXo
      cVlYX9tgaGqOQuyYrKBifLCbw0MfAyODeNbXELUd9Nm0rO956R+ewGlUsHUYYqzPwZbnmJm5
      2ZbpBhXFOsViCb3B0DJnHwBCrYpcqWranE/86zz27fJgcYWNx3cxuvu5/cFNHq94CG49I5RM
      cvPmLQQkegZG2VxaZP3ZE4oyHXarmaUnT1hd3+Dj2/fpd2q592SrETk1hFjIz4Fnh5Xt1jHH
      Fetlbv3tD4iUm9cO8sQC6B8aRimDYqmMydyBVMsjU6jRq+TIjXY67RZAQTp+jCRTMnftbc71
      m3j3H37E1kGIRCTI0NAgO55DiqXW8QWyO5yUSxUG+robHcqpIVdomZ4ea8q9/6ecsEXx7OxR
      q+ToOXuWtUe3GVu4QT60R7ZmQ50NU63XOdjdIZNMYbU7SIV8+I6OmVm4xGifi8XFx9g6TETj
      Wl45N9OYrBrAkwd3qagsVMoVMLbGTHC9nGN9ewddVYnrfJMPxLSvSGrTirxYAG01tE0r8mIL
      9OkVNyHfDv40zA/ZefB4maGZC+SDO6Rral5ZmODWR5/w1tdvsPzgCQVJyeW5YRafbTI6NUcx
      sktF34dTVWTz4Jjx2XN0200NS+40qZXzrG3sMn1mAW2LKF8A6VgUrc2B9mUxx1VqVBzuHfBs
      8T6TF15j6d477B1nkeI+Avka8XCQOiqGR/oIHfm4ffsj6jI5yGTIxTK+QJzd3R1MWgV7h4FG
      5NQQ0pkco0NdLK/tNjqUU6MulFj8+C7JykukAnV0PDeyUsjlCLUayBVIkogogcFkQqNSgFhH
      rtKhkmpUJCUz02MsPnpKh+X515aKZUxGPcVi66hAerWc1e0jFmbHGh3KqaFQ6hgfH3q5VKC9
      bQ9GvYzBucvsbjzllRvfJB/ykK6pUaSDGCwW9vc85FJJesamWZjs4/HSBpcun+Vg+xmKqpKJ
      uQWOAiHOzs43JqsGsL21hQwNyXS+pWxRtr0+dIIK9/m55laB2gpQm1bkxROg3QvUphX5fHPc
      JFwYtfNk3YN7YJx8aI9cTcWrF2f44Y8+5jf+za+wvrhEKFVgctCBP5zE0TNKNbJBxTxBv1lg
      d2cTpXOa1862Rkt0Khpg7/CY4cl5HBZdo8M5FSRJZHt5hd7ZeUwvizlu7+AA2USS7Y11Fq68
      jnf9HomCCquYI6OwoJXVEVHhdJpJpbMUsmmKxSKZXJHebjfZXIHugVEkQWRirL8ROTUEvdnO
      +FA3gVC40aGcGpJYo5rLUxDqjQ7lS3NiASgUz1eyyagjmYgi01oRhRLZqohZq0QmA4Qyens/
      FnmFg1CChTOzxGMxlMrnDxSpmiNR1eI0NueY3JchlwhxECkyNzHU6FBODblCg9Xa3Oc8n2mF
      ENhZXyVTrDI+PUvw0MPQ5CzFRIBsTYVVK7J7eEyHw41USqM0uRhwm1nf8jA+NYVnfZmKpGRs
      ZABJacDaIj75ANtrz8iWai1ni3L/k0U09m4unplqbhWoWq222yHatBztkcg2Lc0JFWhj6Q4r
      3grXpm0880Qw2TvJB/cpCAq+9uZV/vS/fIc//t/+kLUHT9jaP2J82EU6ncc2MImQCHJwFObN
      t67w1995lz/+n//g5Bu8pIT9+3h8AXqGZxjqtjc6nFNBFKvcu/khM2+8iV2janQ4X4rPtUVR
      iAJer5crX3mb5NEKgtrBkEVOUef6R+djFW6nibIgIlaraPV6Dg789HTZMdqduDr7cVtbxx0B
      wNUzRJ/LSrVabXQop4YMOV0OG9WXyRz36PCAcOgYi83J8uI9jO5xKMfxZQQ05QShcBi/75B4
      vo5FJdEzMYdOKWN40Ml3vv8B40N9JKIhwuEwoUiiMVk1gKO9DWpaV0uZ48rkSlQviznucyQK
      +TxCXURvMFItl9DqDYi1CoIkQyl/PiqpUquR6gIypRq1QkapUsNo0JHL5kAmR6NWUq5UUWu0
      6LSaxmV3ivg8WwRj6Za7IunR01U0RhvnFqabWwWq1WptFahNy/Hi+VWv1xFFEakukCuWMRl0
      BINBnF09VPNpSnUFDpuFXCaD0WJBVq8RiafRqSCRzmHu6CCfToNcRd9AH/lsBrPF0tStsm1e
      fk48tbbXH/HOrQfsLX9CKJHlw49v8+HHn/D4zsfE4mH+3z/9C2rA9spTvvejW6g1WgrRA9YP
      ohhNBm7fvk0q4ufP/+JvaN4D8i9O2H/Ag/t32TxonSEgsV7m5ne+R6TcvIX/ySuSJqZQyyTi
      iRSDo5NU0gFkajNOgwJB76K/045YyXBvaQuxlKGu0OENpri8MIGUj9A/fQFHZx9dLTIK+Snu
      nn4MWjUWs7HRoZwacoWWqYkhmnnnfMIcd29rm0Q8hLN3kCf3PqBr7CIGeY5gRYUmHyKeTHIY
      yPBvf/e3GRkeQlmJoneNolPChifE5TNjxII+4skk3uPWaQxbe/IAudGBWd8aRT+AKFSIxOLE
      YonmN8dt26L8bOTSSbKFEmarHZO+NXqgRKFCKBJHodTgdjuast77sYmwtgrUptU40QtUyCYI
      J8sMdHWwvLzG8MxZClEvmZqK6dF+trf3mJiZQirnWdo8YHa0h/XtQ2bOLBDc36CmsmBWVjkK
      RHD2jTE20Nmo3E4VsV4jlc7SYbW11LVQ1XIJhUaLoknNcU8c40WCXh6uRcm4Jayjl7h96x0k
      SYdFUabDZuKjDz9mZGaK5cVHrPkSJAMHnL+wwMf37lFOF1FLHr72r36dZMhLWWruU8IvQiwU
      IJFOcxhMcmGuNZwh6kKJ9//2B5z99q/S3aS1zwkVqG9wCKUMyuUqBqMZqVZAplCjVcpQmuy4
      bGbEcorN/SDp6DHDY+Nsbu1QzOeplLIUanXEep0tb4rpAUcjcmoINruddDrHyHDrTMEplDpm
      Zsabcu//KSdUoN2tHepCgb7JM6w9/Ijpi1+l16GkZHChzgQRgINAjn//73+X69euYTUbQKbm
      +rVX6e604+zspp4OMnr2Copm/sl8QZ48uEdFklMqts5N8UIpy9r2DpsbOzSrfNKeB2jT0rzY
      pLdl0DatyIkaIOjdZnF5m1Imyu2PPuQwmGRt6RH3Hy1RKxd4991bCMAntz/gybN1yqUs7773
      IXUgHw/xDx/eJ+jzcP/2Byxtek89oUZRKWZ59uwZxWrrNIBIkkQ8FKT08swDgNagw+89Yu3p
      YybOv8ra4vt4w0Xk6SDhkkg2GaOORDgcRgREUUY2EaUuSTxeXqeQSdA9MIpCKOFwOxuQUmMo
      FCuMDnaxsb3f6FBODUmssP54iXRVaHQoX5oTC8Bket7Do1QqqFUqIFchiXVqooTBYEClkAMi
      3/jWvyLj3UXQmlDKZdRLSbIlgcCxn0KpwHFapM/WOlNhKrnI+m6AMzOtYQQGz3uBhod6m1oF
      OmGOu797iMWopH/mDPu767xy/esUIgdkBDXyTBiTzcbh4TH1TALX+Cy1mB+zzcZxrMKv/PI3
      8Hj2UVTzXHz1Ok16NvKlOPB4kKEikcq1lC3Knj+AVlDjOtucAzH/H/TzXRxa1PH+AAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cascade' width='192'>
      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
      A30X17XW4XTkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cascade ALL' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cascade BASE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Quantity per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3QVV5bv/6m6+V7lnHNECBA55xxMBrvtdnbbHTzdPen9ZuatN+2ZNx3c
      ud3BdjsbTM4IBAIhMhIIFBBCKKCcpatwr26sqt8fkgXYOIF6+k1b37W0llSqc2rXqbPP2efs
      795HUBRFYQQj+BpCEARB/GsLMYIR/DUxogAj+FpjRAFG8LXGiAKM4GuNEQUYwdcaIwowgq81
      1H9tAf6iUNzUl5dwu7UPg18E49Li0Ayzytv72imr7CQtIwXtcFasuGmqKqOqqQudTzjpo+Iw
      qIdTeBf1ZWW4AxKIDTQOY73gtvdQWXaTll4nYXGjiI/wRyUM5xMUuhsraLB7kxofjOohavqb
      nQEU2UXF6e28nXkNNzI3T+/gw6winPLDuj3MHHrrz1xr6AfA0naLHTuysAFVl3az9VjJw8uu
      KFSc38t7+87jRKDy3G4+OHwFu/RwstddPMA7x4sH/7JRcHQfFyq6PvP+4uJifvvb337qJz8/
      /7Nld1vJ2voGx4uaUGPj0AdvcuZG00PJDeB23OZPv9mKud8NyDQV53DoTBkut5WTH/6a87Wu
      B6pX9aMf/ehHDy3d/4Nwdjfy+z9sZ+M//StTkmMZNSqKHb9/k/jpU2m9msNtdwDhvioKT2fR
      IgbjL3aTfXgPWSfOUG0WiI0Koa/yEqeuN1N95SQnLpUREJ1ES8F+3vrgIBWNrfTYtSTERaII
      AlHeDt5/+x3OXK2kqaYT31A1F86UEpYUg06wciErG6d3FH6mLzHpKhZe//VbzH/mZWaPS2F0
      WhSH338Hr5TJ9Jee4pYjgEh/FWWnMqkRI/AXOzi5fzdHcs5T3wtRUWFYb+dx8loDjTfOkHni
      KlojZG5/l5MFlbS29hCRmIi3VkIfFEukn+G+YjgcDgACAgLu+YmIiMDPz+9+gtNz8wTvn+/n
      W9/+JqMSEojQt/LhgVJmzk3m1MGjmIKj8dDaydyfhX9kLFLHTXbu2MPZi1fpVvkTF+ZLYfYh
      qnu6uXj0MFfr+okN9SQ38yO278mlpaMDt2c4iSFG3LoAjOarvP7ODm7UddLe6sBbVcuFWy5i
      I/2RHc1kHs4nMi4ajerTY/0rr7zyyt/sDNBvaaFeHc4or4G5V60LJt7Twe2ePqoKTlNc3wu4
      uJl3mrImCw6bm6hxc3jyqSew5W3haEkr3dWX2XWskNR5qxitrmL7iSJiJ89mbEw0C9Z8k1Xz
      xiBY28jJOY8SmMi8KakkTVjMc8+tIc7fg6q8o1y9bcXZWMqRi9XoPHRfSnZFbqK9149IPw8A
      BGMkib4Ste1t1F7NpbB2QPbq/JMUN9pwSW6ixizgmac30XNpH8eK6uipK+RA9mUiJi5hemAD
      Ry9bmTd5DHETF/Lc4ysJ8VBz++ppCut6P1MOnU6Hj4/P0M/cuXNZsmQJ8fHxnyU5TbW30UYm
      EawfaPeQ8Hg03Q20Ou2cPXmSjj4nimIjJzuH7n4XdpvM1BWbeWzlJPK2vkGJGcrOH+JMeT+L
      Nj5G9+nt5LU5mbloDpEhSTz6xONMTwmlp66Q09eqCUiZwuTEYGY+8jQbV08jzN9I1p69dFrc
      dBXncKnBiXifzv8x/mbXAIKgQlQkJAbsPAUFlwwalYDzPverVE5Kco5yqLOHpppGRpldgIrQ
      6ARC/H3pMepx9DtRa3Vo1Gp0BiMGnXaoLkGlQa9Vo9HqMJkMQBgzxgZzMq+YQP8bBKVPItTw
      ZQ1hEUFQuMNSkXHJCqbP+JCiy0nh+SMcbLfSWNlOusUGgH9EAhEh/jR56lG6JXQaDWqtHpPR
      ANi/UIq6ujqysrKG/k5OTkan+zwlFhBFEWQZBRAASZZQBNVnrAFkBKWf4x+9Ta/TQl1bAz19
      AB7EJ8fh5+mNQS3glBV0eh0qlRqjyYhOc8fqF9VatGoVOoMRo0GHoksnzbiV4vp65MuVTJ79
      d+g+ZwHyN6sAJs8QopUmSroUxvsLuG2N1Dq8eMTbRPF97i/K3kOz10x++NxkCrb/mFsPLYGK
      pGlz2fHmOa4GWpi4fPWXXqwJYjhhPl1Ud1qI9NWhWG5T3evBhtBA2u5zf8mp/dR7zuAfn5tG
      /oe/4fpDyz6ASZMmMWnSpK9QQiAiNgHn2Rs09y8i3CjQVHcLMSyBUM19bneZydyyl6iN/4sV
      oxS2vfLTh5ZZEHTMmzOKnTlnEfuCeCnNl88bdv5mTSC1VygvPreKfb//JR/t2M7P//3/ErX0
      KSK8vYiOj+Tm6UMcyjxGaWM3AAFhIbTcuMSRw4c5feXWfWeJAfiRPi6EMwc/IvfKLRzynf+E
      Jk/AUZHLzr05tDvdeIUkMcOrlrPmYJIj/JFcdv7zqSXsKmqhp+IIyx7/33Ra7vMkwcATT6/j
      /La32LpzBz/99x/jOW0DaSEeRKUkUnH2IPszj1FUM6AOfkHBtJWd5/ChA+Rerf5MyQNT05Fv
      nGZP5mk6+u88t/Pmab77zLe43gPnt/w7z/1kDwCnT5/mpZde+txF7ydhSpzLmrEi77/+Jrt3
      vs8v3z3L0kcWoMWLpGCB41kHyTp6khY7oDYQGeHBlewjHNp/hMLGjs+sV6WOISXMzN69Byi8
      3X7nH2oj4ydPJO/AO2SdKsQqQNL0xTivZCEmZeCngs7yM3feb+uPeO7He+409d80G1SR6Gxp
      oLPXRsOVgxysCePffvgovmI/dXXNiCZv9IILrXcwPho3jQ1NOAQ9fp4qFJ0/HkoPnQ49IYGe
      OLpb6ZZNhPh54Lb10NDQgsojkBA/PW3tPYREhKKSnHS0NNFlFYiKj0SPi/Mf/pii8Cd5aWE8
      IjIttdXog6LxEvu53WIlJjIE9f1MG0XC3NZMe3cfTYXHOFTuxQ9/+ARhOie1tU0oehMeooTK
      OwxvrYOmhiZcKg98DQKywQdP+uiw6wgN9MLV24rZaSLYV0t7cyNmh4qoqFBc3W049AH4apw0
      t5oJiIhC6mmm06knOsSXvr4+zGYz/v7+mEymL93skstGW1MTvQ4HuR+9jmP0Y7y4bhrunhaa
      2vsw+PiBw0ZgSCiCs4fahnb0Pn7oJCfGgHCcnQ0I3kH4GrV0NNaj8Q/BS6emv7uVpvY+vIPD
      8Rb76bBrCA30BpeV+tpGZK0PEVGBqBxm/vyLn5O84Z+Ym+yH29533/cTBEH421aAuyA5zVzI
      LSJx2jRCPL/cYvTh0MepD7aQ06Tme99/jmDDQ0y2TjMXLpQSkZ5BlP+X74j/L6Cn+RZFlRYm
      TB+P6WE27L8kZKmZ9//zD1hSFvLMhrl4fI6Rf18FcDgcdHd3/6XlHMEI/uoICQn5tAJIkoTL
      9WBOhRGM4H8SDAbD18cEGsEIPglBEIQvvQ3aUX2Vqw0a5s5ORwvYuhs5l5NLY7+emYuXkhBk
      AsVBQc5RrtdbiMqYybyxMQAoikzrrXxKzX7MnpqEBrB21XLh9EXqzHZGTV3ExJRwNCLILgtX
      zl3CK3kSKWHegEJnzTWO5RaiDx/NwtkT8NKK9LbcIufUJSyaQBYuW0zI5xl7IxjBZ+ALqRCy
      q58rx7bx9pYd5NVpWLwgA63LzLbX/4SSNJ8pIb28/WE2cWPTqT3+FjnmaJZNiybn/Tewxk4n
      xmjn3OGtvLtlB9d7glgwMwUNfWRu3YspdTrT0iPY/vvX8EibjL+9lrffepvd+3PwT5/OqHAf
      rI2F/O7Ph5m4YiOu4r1k12qZGKfmtV++Ter8R4hwl/PG/hKmTB6N/iuRxRQ668s4vONDzjWo
      GZ8SjoCCy9LBuWM7+WhPKSmzxmACZKeV8mtneP3VLfjNmUaQ5t7VnOy2cP7gdnYcPMrFK2X4
      xqYRaIKWqmL2vvNrSoRxjIk0gaLQ21LOno+2knkilxttMmkJkai/MlNMwdJRx5mj29h9qoOx
      kxPRoiDZe7l27ghv/TGL2EXT8AYsraVsfXsLWTmnqeqQiEuIQTcoviw5uXZiBx/sOszZcxdp
      sJtIjQlGFAQUxU32e6/wzkkzU6enoJjr2P3BexzMPsWFy6V4RiYS7KX/3D32+0F2O6i7eYW3
      fv02roQ0YnxM4O7jYtYBdh84TG7uaRod3sRHhaARQXH2sPu1/2LXTYW54+LuqaujMp8P3t9K
      du5ZOggkLsIfe0sp77/7AcdP5lJU00dSaiJ61UCb9d0+x7/86G08E9OI9DPxyiuvvPLFw6ag
      ImT0PJ7QuXgzd/BaVxXFLVq+PXYU8V6JpB49zdWbVXTklZP+rReIjdWyfkEcfzx2henPTyVm
      4lK+IfSyteLjSvUsfvQZjB5aZIcVD7eFXqcLwdObVU8+h73+P/nYLqsty0cOn8rk5HBs6tmc
      evsKrWN7qJKj+FZSHJ4JPngf+A+qetYyPsjzK3yKTgryqvGKDqOnyzF4zc6NK9eQgkLwcLfz
      8RZ/W+NNqtvcBPt4IH3KYlToKs2lVE7huz98HLW7HwcqHJ0NXKtsITrMj3LXQE2K7CL3xCmS
      FjzK5rgA+nqtaB6IJtlHcf4NtLERaG7ZB9tKofZmIZ0Y8ddqcA/eqTEFs+Sx5wn0Fsj68E1K
      m6YwLVoPgLO/kQvXrTz98j/iK7fz9uv7aJmZRoRORfeNXGpVMfhoVcgoVFw4hZK2jH+cloC1
      Opv3s66R9Pxc7s8i+hzJu6spuWkmLMwPxT3Yws5+tGFjeWbeWrxUNra+9Q4N41JJDNBwK+8E
      fb5p+Ks/6bl2c/HMecauep7JEbD1vR3UxnlTdvgs49a/QEagmsv73yLrahObp4Yh9XeSeeoW
      Y8eEIbvvOG++cMgU1ToioyLRiXd9KK8g/Omkur4D2e3GqBVo7nESHebBzetVONwyBpMHXa1N
      uEQjUZFhaO4ujwaThw5HTwPbf/cf9KWvZlK4P3rfUCICPO4ZVXo729B6eiMCJpMHiqOTXkMk
      BnMVTV1WFFnCINpp7vmqC/cAFm9YyYTksLs8tAbGzl3M/ClpeNw1yofETmD58tmE+97vc9u4
      erYCD1MbW956g13Hr4Jagy4ghmVLl5IWHTj0PpK7hbo6G1WXj/LGm+9yvbEPhAdRAC+mL1/G
      7PGJ3HGwisSNm8PiuZMIMN0hZus8AggL8qKrsZY2MZSogDtbwCq1Cb3KQb/djdtuxaU1YBJF
      HL2N7DvTxPqVkwdHTwHfAB/6Osy4JRlzayceIQEPRCPwDkhl5bqlxATe9Z2NwUwYl4yPQY3T
      XI9VHYS3UY1suc2pGxJzpybfx4veREdPBMlxfqj0foyK9KW5o4VW2YtR4d6otSbSZ0+k83o5
      TiQq8rPRJS8gxvfeLfAHM5wNkTz34mYOZL7Hr054Ym2xEz/Xj0Vz/h7r9u389tfZBIiteHjP
      RvMZT+i4dY4/vX+MlCVP8W/TU9F+hvmi0eoQnAMaKysKgqBD55/KD56fz6Gtf+S4zpN6i5Zp
      nn+tNYCTLnMvGr9ENk6ZTs2Vo2w7fJln10xC/Ym+LSvdtLS4mPvNZYQb7Ox6bzs+Qd9m9DDz
      8e+Fg+ITB8gubWVUxmx89XeEUml9mDg6iF1v/RoJDYmTluApOrh8+hwJ85fhp7pDvAhIzMD3
      xiF+88sctB6BLF4dOaw8GsXVz/X8k+Rc62btNzfir+rj2J5TzFr/JH7WsvuUcCHqPNEOdhuD
      zoTF4M2sJIV33tlDQrgJe1cFfc4kuqqucrkrhE1rorl84N5aHvAdFDzDRvPsyxNxW+t57edN
      pIYFIokaVj/9MqJk4eTbr6KkpXN//peN3e9+RMT877BuVtrnBksERSXSc7ycPtdkumqqUAdG
      EaRXUKXM5nsZC+ltLubV5h7iPPQP9ioPDR3BIZ6I4bH4+GhJHj+LoszLuOVJqD8xbImCP6Gx
      AYQHB+Krgxkp/jT2OP/CCqBjzMJNJE01c+bQTvIrI5mbPEBltrUXc6HayEs//GeMSh+Z72yl
      IFTmdN41HNdrOO8yc/1WD/3eeqbrmvCbvJp/Tg3H3lnCtj0niHhuPX734/h8VShuik9ncsMe
      zBPPLMXPpKG3uZRLV0spbPgFTksnFc1WPLwD2LhsCgYVgAeiqx2rU8FDK9Bj7UYrGEiZtxF9
      eTnddgXFYKZdHUjFlVxKirppLL9E8+2bCNc6MT79HPAlFMDWU8++LdspvXWD6gZ47ZdmFm54
      GkfBAfKqOui3WEmcs5HRESZai3PZf+IaVqcdvMbwnRmRWFrL2bfzAGVlRVSab/Ha75pYvnwK
      +cXNBGgO8KvCo4CB2Rs24ddwgf2XSimsqqVsx9u03Z7D08tmMe3qn3n1J6+iON0s/sa38KCf
      w9ve5qbZic3qYM6mZwg0DWs81leAgfTpSfx+5yHGvbiCtvJ8ZK847jehqdRBhBqbOXvtNsvG
      +lBwu5dJ0/6ycreUXabFEMOoIDV93Wa8pDujjaDS0t3agNUpo5OtNLT3khiayv/3X68O3NBT
      ymtbKnn68QWU7HqT5mYzUkoYlrYmzC5x+KK8um9yvtbAE0/OwkszUKl36ARe+fWEgX/XFvPR
      uXqeXDnlrkJBhPm3k3etjmUpbvIqLKyf40dXQw2GiFSCXU3s/aiNKZvWMzZoPLM3D5Q6u+9d
      hNRljI/zHWiDL/IDKIqCJLn5+C5BEBBFFSAjywOkV5VKRBA+vnfAXBFFFaIooCgykiR9oryI
      LMt30X0FVCoVKDKSfGeBIogiKlEERRm4LggDfwOKLDHweAGVqPrqpnT7DX7zwWH6HQPvJhpD
      2LBhEbfOHqK4thtZUhDUOsYv3EhMfx77zlchyzKCKOIfN51vLgvhD29f4rmXnsBXp1BdkM3B
      3BK846by6JpZWGsus2vfSbqdMgoCJr9w1j76JBH6To7v2UtJs41pyzczI3Vg1+UroaeeLTv2
      UN/ZjywpiDpv5j2yDm4d5dT11gHZVSJxE1ewNMPEiYNZVJvdZMxbzfxxUeQf+DOtYUtYPTmS
      lvI89h89j1X0YuayNUxODLojj62Jk5famDFvLDp3PxeO7OViWRPG0DQ2blhCgFHzlXeBWoqO
      8e6RqyiD31MXOJqnl0bx4Y4sbK6B/qALjOexjWsJ9R6YXvo7G8ir6GLe1DFUXtxPbmsIz6+Z
      isvSRvbBvZS0CKz6xhOkBpuwtpaybVsmPSofZi9fy6T4wHv6xq2r5xBC00kM9f56cYGGFzL1
      eafoiJrKuFDTV+4Ef03Iko1zJ88zZs48fHT/DeScYYWLgpxcgibOIdLr4WfO+yrAiD6M4OsC
      URQ/7QmWZXkoFnQEI/hbx99sQMwIRvBl8KW3QSWXA4dbwGDQIjCwCHXY7bgkBZ3BiEYtDlAJ
      HDbsTgmVRo9B//EiSUF2u+i3OVHr9Oi1ahRZwm6z4ZZBbzSiFsFpt+G8y0un0ugw6DRILgd2
      hwtEFXq9fiiARHa7sDsl9Eb9iCaP4IHwxQqgSHTVFPPR1i2UyxP4yf/5Bh5AQ1E2W44W4WOQ
      sfln8OymxXg66njjj+/jNvpg7lN46nsvE+czsLtzPWsrr+87Q/LaH/D9lWOpvLiPXWdr8dXa
      cUXM5tlVGZSdPc61mg7AReXli3jOfonvLvAn8/BJLJKW/u5W/MYs54nl47E1l3Ngz05OlJv4
      7e//AZ9hahC3tZUTWTl0i75MnzWbqAAjtu5G8s7n09BlxT8mnVlTRuOhvbOAlCUbhaezKWu2
      EpI4gTmTk1ADiuSkuvAclqApjI0cDGSRHVy/mEtxTRchKZOYnRGPWhyeZbTs6ObCqVPU9chk
      zFhESrgXstPCpZwjVHc4MPpEMG/xPPx09xSi6NxJSht6CU2dzOyxsch2M5fPnua2GcbPXkBq
      mBcgU3/9EpdKbqOYwlm0ZCa+ugdzIymyg2unz+ObMYVYn4F26e+s5cyZS1h0ESxZNA3PoQxm
      CpX5x6gSklgy6V4uUFt1IRcLyuh1QurE+WQkBSOiUFOYS155O1FjZzA9NfxOAUcbhzMLSJ87
      m2i/ged+4cApOfopvd1JWlo8WmFwdJZ7yM46z6RHnuHFl/8Ov6Zz5FU2UJy9C1fKGr7zve/w
      2DiR7Uev4VTA3lnJ8XInSyYlDJbvIjPrKgs3PcuLL38fufgw19ucTFq8jm9961s8tW4xvgFh
      LJw7EZXeh/mrHuOFF1/gmTXTuHUhHzMKlZU1RKYkYxxivTw83NY29m7dh8/oGUyI07F3617M
      buhqa8IYlsaCxQvwaL3MwYsVd5ei7Nh2Cp1hzJkzDaU2h8xLDbisHeQc3MHxY1kU1FoAUBSJ
      guy93LL5MmfeLAIMDG4lPzwUycXJPduw+KYwc1I8J7Z/SF2vA3tvB7c6ZBYsWszs6Rl43uW4
      UmQXeUd3USOHMGfuDPx0Ckj9nN6/B7NPCnMmRHF27zZudjjprLjCpRobE2bOY1ywmZ37LvMg
      K0Vbbz2HPnyfo6fyqTVbBy66uzm85wim+Amkejaz81A+9sGu1lt7hWPnbnGj8pNpCmSamztI
      HD+TRfOmUnpiNyX1XViqcjh4tZ/JU8fScm4/F+ttKIAiOcg/nkVJdQWNHZahWr5QAVR6T2bN
      X0iUv8edm22tNPeqCAsORFSbiA00cruhherqBmLiE9CqNCQkxtFYVUm/w8KlI5lEz1xJgGmw
      9S2NtDs8CfbzQdR4EOsrUtNu/fizUFV4hp6AyUyI1OPtF0p4iB+yo5cLZy/gHZ+ItyAyfvZS
      UiMD+JyUL18Z/WYzjqB4piZHkThmBpMDO7jW4CQ8aRKTxyUS7B9AeEQIgny30rnp6rCTMjad
      8LAo0lKj6evqRhG0jJq1ig3zRiMMbkTL7l5Ka6xkjIpBq9ETFxt134RNDwLJ7aTDZWDquBSi
      YtNZMEpLQXUvdkcrouiHWq3B08vzntSQLlsXN5okxqdEotUYiI+LQrQ3U+OOZMHkVCISJzAt
      1Yvyiga8osexfvk84iJCiU6JRdNn5UHCpkSNB1OWPcrCseFD5oerqQRz4GSmpSeQNnMVfr3F
      tPZKKJKd3LPFTJgxGc9P7diKjJ2xkNS4CAL8gwkL9MQt2yg+X8X0dUuJi0lm4dJ0Ki6XIaFg
      biimzBbJ1IR7s0Q82BzmduNSlCGHiSAquJxunG43xkFHlSiIuCUnbeX5nG0L5u+/GU7xx0rs
      duGCoY4hiDKuQb4PUjdnzpQzY933h3JtWlpv8u6ft6JNW8xLy6bzl4ro1Rl0WBpu09zvJlB0
      IOHC3GWFGBeXj2Zx6VYdxtBUVq1IuquUngmLZrFlz5sUq9Uoah9WbFyE1qgm1AidlXfulOUW
      am80gscxFIedDocXTz+zHn/9w7NqRFGN0N9BXUcfXsE6ZNlJR2cfujAvDFI5h/ZsR/ZKZvPG
      BXgNPs7tbqbhZh25xiwku40Otz/f+uYMTJYaypstpAepsDsk+mQLGq0WUOipK2JXZj6TH3kc
      jweQU2fwJdigUHPXNau5G9/QhEHulA4/Pz12u43a0iykhCUkhXVzvfbTYbpOcwNHso5yu9lK
      /MSFzIr0JNvhyUTfAW3R+oSjc9TgtLZy+nwlc1duojF32z11PFjLm3zx08hY+vsBPeY+F8Gj
      fAls8aXWbEZBj9ncha9/KJauVgRHPa//6pe03iqhzcNBXuJqvAUHNocd0GK2QKi/HhSFhivZ
      3NamsD41DAB7+03++NqHjFr/EkvHRQ6bvXw/aP0i2bxiArvefg2Hxhtflw0frQYwkD5nMXHj
      zeSfPMbZ4tusn548UEi2c/NqMcETFzMryY+qKycpvF5L+PT4+1AF1ATEprJ60wa8VBJX92+l
      pNnK3Fjvh5ZdUGtZuWYlBzI/4GS/SIimD+1oHR7BcWx6MhVZcpG780+U1E5lRvzHgfUaAuPT
      Wbv5EUyim/yd71Pc7c3ytXPIPPQuOQ4NPkYFU5wakCi/kMXZCgdLv/Ek4V7DNwyp1Cr6bbah
      v+12O/2dVezPqWTcND8uXmqgpqKTgrJRjEmOGprFNF4hLFyxkZ62Wo6duMCtWF9Ubgc2CVAN
      rM2ckori3ExqrHq8r5zmVnkVgs2fqIC5wJdQAMltp6OljeaOHmz9Ag119YQFBTNpbDDnck/j
      PUZHicWPzfExBPnM4dTeQxT6TKUg5yZzV68kY5QP4+cN1HXxw1fJ913ClOQ0elKOcPrsJYQY
      B5ViLAtDfVFkO2dPXWbsvO8QoBvoPfU3L1PjCmatPzQ11KPSGAgM8qWnpYmm1k4cdguNdXXI
      fiH4eTycd1AADCGjeP5745GszRzadpy0OA/6+3pAZ8IvxIPZU1N5/UI98vTkAZPQbeFmlYVJ
      c2LwNWmISYqh8GwV0rRPK4BKFYZefZjWTiuegVrsbtANU7pqAdD4RLHpme8gui2c2LmboCRf
      rF1t2DWeeOkUXJKAx13P02rDUMk5dHbbMPqK2N0CJrWI3jOajc99D8Ft4WzmHkzREVhrCrjQ
      pGfdpiX4GYaXeWsKj8aZV0bXtCg8XE209XiQFhbByhWLcQBWqRu9wYaHUXeX+eKir9eOwcuL
      sPjRZNwqpqbFRnKsRMn1DqJGe9NWVoYmchLxsaFoQwdMbJPBgODhMcQ+vm9Q/N2OMIe1jfMn
      cukYvCSIKsbMWkGCt4Oi/ItUd7hJnz6HpBBPBBRqS85ztaIdv7hxzB4Xe4+91Vx2hRZ9NBmx
      gbj7O7ly8RKNvTBhzgKi/fQoUh/ncgoYPWM6fsaBztxaWcCFq1VD9qbBO5yZczO4kX2Yxv47
      dSdMWsT4WN+H+xJuK5dPZHLhVjOyIpI0bTkrJsdz/dROTpW0oAggSQLjFqxn7mhfTmefJ2P2
      HHrLctlzqhSVRkSStcxYtYlYsZbDR8/RVl9GtRLN+NRYlq/ZgFCXy+5jRQhqAV3IaB5fO++e
      HaUHhiJRfvEI2QXVSLJCUOocNiwYh7niAntPFNBvd+GbMIVNj8zAWplPlRTNtJRA6otPsju7
      FJVGQBc2jqfWzabm4n6yrzYiSS7Cxyxk9fw0Svb/iT0l/YQOxkSEJE5nxdIJfO1lnuMAACAA
      SURBVFUea3tpLttzimmpvIkUGE1MTAZPPrGAsmPbOH29DVlSmLDyCeaMCh5ac/bUX2fXxQae
      37SU3pZbFNRKzJsSyuG3t1NldSKggDaIlRsfIUbfzft/3ko3atCH8/jTmwm6iyh84eAWhJRF
      TEsKxmQy3T8rxNfWE6woyLKEW5IRBBGVWjUQHihLuAcJfYIoolaJdBZlccqaytrpMagAye0e
      iFcQVahVKlAkXG7pTt2CgFqtQUAZulelViMK4oPFxNxPdkXG7ZYGn6UeWGMpCrLkRpIZeB5O
      MnfsYvTS9cT4GgYIjEPyaAbDISUkt4QyWI8ogCwNtMvQ64gq1GrVVw+JlNz31IMgotGoQZZx
      u90ogohGrRpaHw682gDxUqWCvMzdiKMWMSnW9x6ZRJV6kCipIMtuJElBVKk/lXRMliQQRERR
      GFGAB4dCv9mM4O3Hw+S7+mtAUSR6uvvw9PEZ5kMr/jsg09vVg8HHd1gOOrmvAsiyjHwXJXkE
      I/hbhUajGaFDj+Dri5GT4kfwtceX4AIpSG4nt4tOcaHWxKb1s9Cj0N1UzpGDR2mw6pi3dhMT
      Yv3B3cvJPTsorOsjauJC1s8dg0qQab91kW0HzqMOTGLVmmVE+eqpuLCP3SdvgFoEQxibv7mB
      KA83OXu3c62+l7DUGaxbOhWjSqG++BR7jxegDx/D2kcWEOyhQZZcNFcWcORSB994ehXDlTJW
      URTcTjtOl4Sg0g6R/z4m9NldMnq9nrvdEYqi4BosI6o06PU6REHGYbPj+niRptFh1A2SAO0O
      JBk0Oj1a9QNEs32G3A6blbu4hGh0hoHDJBQFt+RCpdbeu2hVBhaMdrsDRRggGqpEYeib2xwu
      RJV68H3A7XTgcLoHSIkGPaphWb2D7HZiszuHUuEI4l2yoOBy2HGjxqD7dACyLLlwuGT0Oi2C
      IAx9P4dLQlBpMAzKPnDdgazSorsrXvWL/QBOC7kHtpKbf40mzVTWrZ8Fjja2vPkByRt/yCrP
      Sv7jN7/H+E/fp+vYa5T5r+M7L/mx5Sf/xV6/V1gW3MRv3szkyX99BdflD/jje4f4jx9u5Oal
      fELmPcszMxMHn+TgwjuvcsW4ih/+XRLnPvgVbxz24KmxffxxRz7f+l//SNux3/HGLjX/8swC
      rmZt4XjedQrrfdgwjArgaC/jvY+O4RRFNLooNr64lgAGuCTndr/LruJW/vGff0T0Xey7jvLz
      bD92GUUQsdskZm54mmmRVt74ydu4A/xQAyHpC9g4O5nzB9/hSp0dQXHjMMbw0lOP4PWApLK7
      oUguzux/h5sdAArtFcXEbX6Fp6b6c+NiNtds/Tyy+FHudrlJbjsndr5NWaeEu99K1PQNrJ+V
      hLOnnkM799PsALUxkGWr1xLkqGbXoWx6nQIui4WkxY+zcmL0sLBwu2uL2XP8AjYXgJPKWivf
      /9d/Jd5fg2Jr471Xf0ZF8AJefWnFPeUsbVVkHThAdqOJ1/73C2jVAt1VeWzNvIgsiDj6nUxZ
      /yyzEryouXaWfbt3oJ33r3xvUfRQHV/Y8qLGyORljxMeoOGPpwYvmuu4bfVkWVQAnp5+TAk+
      QGF5Nb03W0l5MQGTl461K8bzk5OXGTWtAyV0Msn+WtwZUxGP76XeLtHU3oajvpyLeb3EJI8i
      xBskRcDTyxO1SoevjweS203tzQI8E6YT66MlYtpM9v7hAi3OhYyes4HQ6HDqXssbhk8wCHcf
      OYfPMeXRFxkbpEdyuoZG/7bKfKpVo5gQ/mmXvMonhsefnYiPh5bOmtMcOF/GeIMRMW0uP9g8
      d6iTKLJM7ITFTFgRiV7l4NCbH1BjdTBmGBRAVGtZ/I2/YzEgOXrZtWUX08cEYrM20iVHMnHG
      p30Nttar3JbTefG7sxB6Gvnju4fomRJD3YUcjOPX8fKEcGS3C0Q1tp4AVm56Gj8fLxRbCW+8
      UYhlYjReDy05+MVP5IVvTwQULFWn2FboSbivGlC4fDILnzHzie7/dLmGmjoSJs+n5kLRnYue
      ETz27Ev4eujpbT7HjqMljPdPpMHlyfK5Ezn9ia2vL1RgQVTh6el573TnF0WssYer127Q1tqM
      1Wanywbpo8K5eu4iDS2tdPXZ6evtpM/cDXrDgKdSrUVU+uizwYLNzzI21IPuumv84pdvcrtL
      IWPpGrrPvsWPf/xj9pVrWT03FWdvN+Jgea1Wh+TuxWoXMHl6oR3mfTx3Xxc3euxUH3+PX/z8
      l2w7eQ23pODqa+T0xQbmLJk+lIfmbviFRODnqcNl6aS4oIro9ET6Lf20FWfxs5/8lD++t4/b
      HVYQRcKjYtCrFcxN1TSJnoQZhpvZpNDTWITdZxShHlpM3nHMnpOBl+nT5oMiuVBpB0wZrZc3
      kYqbJqmLm8VttFef5Oc/e5UP9p+h2ynj6RdEoJ8XistC8blCAjNGfWUn2BdK7rZx6nw1M+ek
      oxfA3lpIUVcIU9Mj7utvSJk8j1HRQdztR/QNjsDfU4+7v5OiS+VEZaRg9Atn1pRJBHob4BM1
      PdjQow3mqe8+T87J8xypM9JiVYjx92PmopeRj2Zy/GgDHrYWvH0TMXk6EKUBh5CsyIABvU5F
      wrgZDJCj59Je/B0uV9filbcNnxnP8sKiSC7veI1dJ4pYaDAi9AyUl2QZUTSg+wtlEnG7XNj6
      bUz45ndZ4wUXdr1BZnEiUa1nCBw/h1gvDRfvV1BR6K4rZOeh80RNX8GSsUEIBPEf/zUDkKkr
      OMSObSd46eXVeCouik7s4extN6s2b8Z/mGkFuPu4eKqU8Wte+EQ2vk/DEDIWX/NbvP6nqxj0
      InVVHSQodnotMimTVvDUBm8KsraTde4GTywaQ39HDYf3ZSLHzWTd7IRhP2Cur62CZiGMJb46
      3LYuDh+5xpKNz+DZ+RXOXlYUehtK2HXwDMGTlrJ8fMjnjvIP+A5u3KIfyzZ9E3tbMb8tr2Bs
      TDB9fXYmLtnAVFcnu35XzIzlE4j09saZmU2jZTH28hKcgXFEGXq4fqWFqNHxGOQuGnpVzPTS
      UG+24J3hi1qtxdfbSHdjN2HpYzDvKqC1fxIdxdfQRyUT+hfKgaUzmfDRe2L09kClgbRxSVQ3
      VHKrtIbqghouZQpUlF6jxr2DZ57fTOhgpkRbWxnbskpZ8djTRPgNZImQZTegRhRFosaMxSf7
      LBZFour4Dm6pRvPMM6Px0A5/NrvWiiLa/UezzP+L6RVqrQ9rnv0eFqsd2dXH7v5jhKv8aY7S
      olF7IIoaYhJTKS/vQeprZN/+U4xa+ChjYvyHbQE8BNlG4emLpM15Co1KoM/SSENtHRWv/fQz
      EmPdH86uSj46fI3FG58iJtDjC02cL06M1V3H7ve3cquxid4u+M3P2lm0+QXEG0fJLa7HhZaZ
      G54gIVBP582r7Dp8nj63QEjyKtal+6OXjTyxsIK3f/1z1DpP1m58FKOgobfhCm/l7MPhkohe
      8QwT42IY/cRz7Nj7Hr84KyPqQ3n+0ZmE+8OaCfW8+cufozL6sWHTXLRKL7v/8AdKWzpx2Hv5
      /U9+wuTlz7BkbMhXbPV7IRgDWJhmZNuek6yYGErxhTqSly9i6pI7CZk++tNPmPHYZkL0El2d
      3Xj5eFJyMhvvtKVg7aLBasbo409/w2UKqiA9PZqW4pM4o5PxcZnZX9TKtDUz6WppogsNgeHB
      GIYrqEF2UlJ8k1GTNg59eJe1m+bOXtpoxSh4gX8gBsVGP3o8tVB6rQCPoDCay/LRxY3FT+tB
      2sREdhw8QMjyiZRdLSYoaSG383PpD07BT9VPY30/OqMPAQFeX/rkyy9Cb0MZt+RYnogcMHe9
      gsbwgx+NAe5NjOV2WOmygJ+3ns6WZno6W+nt6aGhoR6fgABqTxzFmLYYtd1MQ303Ri8/vPQK
      HR1ddLZ102troqFJQ0DQQF8ZcYR9AorspvTCMUoa+okZN4NpKWH3/L+sMJ/w1MmY+q7xi48q
      eOnFVTRdOUvB7Y/zaKoGywVScfUS1yoaMYUkM3dGBia1mWM7jtE11OLezFu/hHDDMNl0bjNF
      hW0kTUgeSknZW3OVg+duDIpmYOz0OXRe2ok9+RGWpIdQcS2Xq7fa8A5PYfaM8ZjUoMhO6q7n
      c76kjrCUKcwYH0tr2SXOXa0eir8LjM5gzqw0hmsy7qi7Rbc6kISwTxMaHb3tlDX2MS41jrLT
      O8m3JvDU8lFczDxIlfnOaZcJkxfgby4lr6Jl8IpI1OjpjA5xcTY3j75B4bUmH2YuXEm410hi
      rAeETP21yyjJE4k0fnVC2F8TsmSnqOAGKRMyMPyPIwO5uJFfSGjGBHyHgQz0mYmxRnRiBF8H
      qFSqkcRYI/h6Y4QLNIKvNb70Ppytp5XWPpHIiEBUgOy201JfR1e/THBULAGeA+Fq9r4O6hpa
      caElIjYOb70K2W2joaaWXoeCb3AE4QGeOG09NNQ1YpO1RMXF4qkb4KzYetupbWxDVhuJjI7G
      U6dCUWQsnU10S16EB3sNaa3k7KeupgbFFEx0mP//QH77CP7a+EIFUGQ3TdfP8vaWnbSYZvLq
      vz+OBwqVFw6wp6CXMeECh3KLePapDQRpO9j25nuoolMI1Cv0ir5MTTCSf2grlzq9SA4zUtXh
      Inx2Mid2vkuLJhKv/hqOFWTwwuZ56J31vPenj/BNGY2nWsGh8WVclIHSc0fYtvsAqnEv8G/P
      zRzMCqHQUHSKbbuO0Ba0gB//YB3GYdhWN5ed4s+Hr6ISQa0LYO2zT1F/7HUuVQ/ElMqSm6gp
      q9k8J2WojOSwkH/yIPnlrXiEjWb92gV4q1yU550kO68cv6TJrFwwFW+diOSycOnYQS5XdhA+
      di6r54wZNo+2IrupunaK7HPXwTeJzZuX4KuBhuIzZBa0smjVKuKC7hxNZG8v5Z0PsrABKAou
      ty/f+PsnMTSUcDT7PO1WiZj02SybNw694ObmpeOculKBbIpk3eZVhHnqhm0DwNHbwuljR7ne
      0EP6rDXMmxiN6Orl2I6PqOjVM2PpKsbHBdzzPFly01VXwtHCbh5bPRe1KCC7bFw5uZ9LZS3o
      g1LYuHEJPtqBrIWypZZ33s9lxvq1pIYMsKK+sMvITjvNDk9WL53KlvODi2OpkxM5Jcx98p+Z
      FmfC+ssfcfHWFNLajtARtYgfrB/P4DkHmGvyOVIq8c//thmPj6VvzeNUhZof/ss6wkxWfv4P
      /4cbs0ajv7ILacxaNixLHjpeyNnTgs07kRXTkjl21zlpsqWBo2erWLBwOtuKH7L1h+DmdslN
      Zj71D0wPunM1au1LzBj8vSRnDy3e954V1nD9AtbgqXx7cSR1BQfZf7SYmSENXGjx5IW/e5kb
      h99hZ64Hzy9O49yhHdij5/HdZZG0tXYMxLMOSzdSaL52nDP1njz+0svQ3oJbBT2Nxey52M6m
      ZaM4sPcIm5/bNHSqiz4wje/8QxoALksbW3adwFcQMdsF5m58jkhvkbMHt5Kd582MoC5q5TCe
      emkp7qYzfLj9HM+/sOArH5J3f9jI2bsP45S1fH+tD23NZiTZwaVdHyGNWcOz4Ta2vL+L0O99
      m7C7doxvXTrM+dJO6p1aZGWgHZtLz9PtP4kXX46mtSST3Qeu8czGCahcNk4eOoFdlOjutcOg
      AnyJxFgeTJw0EY+7D7yydtDpUOHj6QmoCPHV09jaTlVFLdam6/z5t7/kv376G67V9dLdcRtL
      t5ldr/+Wn/305+zKKcatNaJx99FrdaBIWsJ9VdR3tFNxq4Gemiv86de/4Ge/eoPSZgsa7xAm
      jUtBf5ekiiKTl7Uf05gFJAUMI5dGtlLb4sZ8+zIFhSU0f5y57GO4urheZ2N0fPg9lyPGLWDB
      hDi0ooBKq8ek19LaY2XcmDT0KjXj5s9Brqyk091FVZOEv7qPoqJSJI3H0IEfDwtFcpF/o57k
      cBMVJYXUO1V4iSq6am6SMHU+odGjyQjuprLFeb/SNJfn4xU/GZNaJGpUBpG+Bhz9fchqE95e
      BnzjxrN0ZgYeWhHUGjxNw+eOl5qKKJcj8XM1c63oJoK3H2prNzec/iweHYKHXwyL0zUUVNnu
      KRc9biGPblhGkOmuAw3T57FoUgI6UUDU6vAwaAGZpvKLdHqPJz3sXgbTA7a+MsDd/lgnBnz/
      2J0uYjIW8K2Xv88LSyLYsf0Y3RYH2qAEHnvhZb735GIqTh6gSpXMI9ND2P/Ob/ndG+9R1uxA
      owK7WyZpyjK+8/3vs36CgV37z+KUPv10qecWRy/3MCben96+flyOfiz2+33Yrwo9GQtn4Omw
      0dlYzu4tu2i0DRLsFZmmaydRJc4l+BMH8qlEEdnZT9Hpg5wqh7mzkgnxMVFcWERrRxcNzc1Y
      u3qxye3UV7bR0tGFxdzMvh17aLEOh9wDTNOulhpqG1uxWHq4cnQ7F6p7cdgdePv4IggqfP28
      sNk+vcMn29u4XNzL5EnxiIKA29pF5tY/8Ks/vEu7NpbxSSGoVCoUyUldyRm2H6tn9pIJwzT6
      g7Wzg7aOJlo7eujrqGbPrkO09DrRe3gOWAKCSGCgLxbLvZRQg8kD7Se86CpRRHbZuH7+CFmF
      TubPG4XUVcv5633MnzcOjTAcZDhTAP46iZ4+CwQYaTU7CBsbSLwzgiMtrShiOP7BQTh6b2IK
      SEXpK0JSiRg9fTEKNix2LVMfeYapjwCKhV/97/9LTFAwtpggLre2g+iHf4Av/T09SPdxSTj6
      bMQkh1Fw6giOljLaawQKKuawLCPygV5nCKKOmFHjiQFAISrrdfJu9rIuwwe3zczJYjvLnwz9
      1KghS/3k7NmKJWQyj24ci1ElEDhxEW75DFmHDuAT7IFoMqETDIQmpjBn7nw81TKBjq2UtdoI
      e8h8RjCQZU/nH82cufMI99EzM0HHm3lVzPcV6e+3At5YLBbU6k9/8rrrhRA7hshB97Ha5MeK
      x7/L/O5mco9nca4oiOWTI7l2Yi/XLUE89tRjeGuGb8dBq9MRmjiR+fPHD7TtwQ9p67Bgs93p
      8H19vWg9v7idFMXJ6b0f0uU3nsc2T8CkFrhweB8l1WDd/j715cVQ48LXtH7gXb+oQpe9m9Jr
      xdy6UUNXm8DFs+dITZ/EvFkpHDq0B0uMigpVEk8nRhGcuJqTv9vFgcOt2OuKmbZsE3GJvsxL
      uMr7Hx0iQtWGFDedtIB+8rJPY9Xo6b5djMfEtSQG+yMuW8PpP+4nUxhLR0U5sxc9itLXxOUb
      5ZTebqXdXsrFPD2j08bx7LMZAPRe3U15jsic9Ifs/IDbbqGiuo6I+GT0Ui+1LTb8Uwam+rbq
      K2gjM/D5lAdSpuFiJuboxaybGj2Uuc7pcBE8ajpPTtZy4/R+HBPS8VeF46Hay82adsZHG6jv
      cBBsGh42jaBSkxKg4VxRFWtmJNNe14zRfwL+EfGczrtMd3A8Nxr1zJ//CdNF7qPoRjNjls8d
      vOCgqbYdz+AQPLyDiI3wJ7+tHfP1akqVJDavyUD/yfNfHxL6mFEYDx+ktCWRND+FTrOT8ImB
      RLrPUdDYyxgfO+dK7Ix78ouSMcq05B2iJWwRG2fEDLFhx698jhTHgClx+ZgLIWkmMUEDIVRf
      mBbF7ejl1o2bWD7OTCWIRCaPJdjgpq66gvY+mcjEFIK99QhAX0c9VbWtCKZA0pKjUQsDARrl
      ZRXYBSOxifH4GtW011VS19qDaPAlNTUevWognK23rZaq+g50PqEkx4fj6m2lorIW+6ApJGoN
      xCel4ju45ePubaWyCxKjgx96G1R29lN66QS5VytxSiKhqVNZu3QqBqWHnD3ZRC9bQ/yg+aO4
      Otm3/zzzV86jYNsbnGkT8NIAqEmZuZzZCRqyDhymzuzAL3osK5fNJtCowVxfxP7DZzDbZcJH
      z2L1/Az0n3FG8leDgquvjayD+6losWAITGTdumUEaB3kHdvHpao+JixYxazREdRcOU6tbjTz
      xoTRd/scx6oCWL0gdXDjwk5h9lHO3LiN063gFRDLguWLsBbsZs/lFrwGE5aFJc9i9crJwxQT
      oFB//RxHT12mz61m1LSlzJ+UiNRZzrbtmXRLGuImLGD17DQ6qq6QV69h1dxEst5/l5KWHhpb
      uwgPC2HsovUYivaT3SQzcL6eisQpS1k2M2XoQPGCE/sR4mcyPjZgJC/Qg0Om8WImxR6TWZIe
      /D/KmyhLdo7sPsCEFWsI9fhLpRn+S8HNhUP78Jq4lNGhng9d24gCPDAGsqkJKg1/wVy9fxEM
      HGUroVKphycj3X8rFNxuCVGlHpZ2v68CKIoykhhrBF8LqNXqETr0CL6+GEmMNYKvPb5EYiwZ
      W08bF7L3k98Rwfe/vRIjMnUlZ8nMvoS5X2H0gnUsnZyI3FvL7m17aeh2YIocx9OPLsVTrWDp
      bOTcsb2Uusfy3afmokeh5tpJDucU0OdSiMlYzKp5Y9G7Otm75QOqOpx4xoznmxsW4yXauZqz
      l2NX6tF4hrBiw3pSQw2Uns/iTH453XYXoWmz2bR8GqZhCJJw9rRQXtcOgKDSE5OUiEGyUFNT
      S79TBkQCo+IIuYsOIUsWqm7cxj5QiODIOIK8RZqra+iwDqynDH7hJIT74rZbqKtrwOpUCAiP
      JsTHNGy2uNvaRWVtEy5JAVREJCQjdNdS3zHg0RbUOiJj4vEeCqpVcNv6qK1rwOYWCAyPJsjb
      iCI5aWuqo73HjodvCJHhAagFsHQ1Ud/chd4vjOgQ36ETgoYDsttOS0M9nX0O/ENjCAnwQJAc
      NNy+TY9dwiMgnOgQn/+fvfeOr/K48/3fp+uco6Peu1BBBVEkhOhNdNHBYIwxxgXHTnWy2cR3
      d+8mu/feZO/eTdZJHDsOLhjjAphehUQREkIUgVDvvddzdHp5nt8fEgIcJ3aMfnltNnz+HD0z
      z2jOzDMz3/L5PBQ0Yhrsoq2zD7vASB0fd6SIWIf7aW7rwiXTEBEdhbsSjP1dNHf2I3PzJCIi
      FM0olYTsJz/5yU/+VMdcVgO5p49R01hPda+GZZnTUJpb2fPWIVKf/A4b5wTy8Vv78UtKoeLw
      mwwkPsXuzbNoOfsed5UpJHtZOXfmDPV1lTRZg8mcm4CCft78+R7St3+XbSvTyX77N0gSpmG+
      tp+LljT+7sXVdF7eTynxhNjusudUIy//3asEG65zoGiQ2dMDKb/TzfwNT5CZkcDxN3+L/5z5
      BGse1aohUn/+XU40SFHa9Qwb7QRGRmFvusnH54pQSEGvN6LxD8FPd9+ebum5xtv7buKmBcOw
      EXffUHwVPezdcxyHSoZRr8ep8ibMT8v5T39HRbcdi76T3IIykiYnoVaMhy9ApOvWKQ7c6EQp
      WNHrTfiER+LsqaWqqRP9UDeXT2fjkzKPkFHBLZfdytkDe6jpc2Lqb+X81SqmpibRWHCY0zda
      EJ1Giq8Vgl8sIcoePnzvM3rtDu7kXUY1YSpBOsU4BcOJlF8+TM6ddpw2PX2DIqERntw+fZCC
      +gHsxl6uX8zHKzkDP7d7bxS4duYANT0WTIYeLl28QXBcAp4KAwff20+3TUDf0w5ekeisTXz0
      yXGGnNBWXsjdPhVT4oL5l5/+9KdfugPI1J6s3Po8tRffpebCaKGhm3abmmB/T9QeKcyK/JSS
      2iYsLQPErAzGTePG6pXpvJZ9kydmrWf9U7soPf46LdX3WlXg4aHCbnchCiDI5KgwcetmDRk7
      voNGK2fejCR+drOU+KhqvGNnEayVEzBtBh9eyqHTvoal65YDIgP1LQy4VGhl48GwYKahXcO6
      XatJeGAt1Q7pSZyRSdbMiV9cq6mFCSu2sHam31iZvbUaafwMNq6eM1YmiiJzN7yA1t0diWhD
      tecDWiw2fNR/yNnz50OgrcvBvBXLmR3pe784aRahSWBouEanJZCUB6LJJHIViza9iEarRSKa
      kf5mH60OJxFpq3hloQ4J0FB8mpsNrXjVleK74AnWTwvF0ZHHWzl3SN4xm3HJZjbWUlCjYMtz
      G/G+NxQuJ0mLNzNDo0YiEWk6/ybX6odJSLtHxSVl/sbnx5q4cugd2gaGkN05g3TmDram+Ywt
      zobrdbgnLuDJJVPBVM+be26iJxX4uqEQ/vGkB58m+9Rp0mJ9aOwcQpqkZMH8qRw6dhDtzHhc
      9W3YbOG4Rk4Nn4OOOXMSOfjJb7kmt6NIWEy8txvFDjtBoxNZLpditVqwmUyI8tHtSirFJViw
      2UCUm7lz5TQnLpSx+pXvEes5DsFZTieCyszBX/wMuUxBeOJsNq6aDYKZ2+c+peSSEs/AeNas
      W0mEz/0jkMEGlZfe5ucXpeiCJ7Jh02q0LhmWmvP87Gd5KDR+zF+9nvQYf9zd3REcZmpLCmlR
      BzHbfZwiakQR5GZyP3iLywo5vhFT2LxxCT6jAnxl/QGkTvd8aMJKpVK0Wi2C3URlcQFdvhEs
      USrQyFWIokhPw22u3u0jbcU8ui+XEjllxHuqCJ6A52ARJhiXBWBqqaV5qJuDb/0HA0Y7UTNW
      sW7BZHRaOYgOWspucr5Rx+p5D9v+XRY9VVUVtDTW0+mMYH2EO4WnBugNPsYvcrtxKbxYsWU7
      cRMm4jyeT26+FXtnJb6T0scY7b7eApB5sv75lygrrcJoceGSKQjx9WbS1B1IA4rpHrbidNjx
      CQhB9UW7u7mRw+cqWf/dfyA1WOCtf/kpBU0ReLqpsdptiCix2uy4u/uh8fBA7LUhMkJcJZO5
      o1EJ3Dr1LofLVTzzyqskBD+6yBwAck9W7fouqwC7qZ/sD9+moGEKS2dt4h9nbUIUHJSc+4iz
      hRXszkobqzZhwdP87wUgOC2U5x3iVE4ZuzZM4wevTQMEemsvs+/YJeK+vxkPu5Erxw9SL4Sw
      fsNKdOMhjwQgkTNjzQvMWAMuu4nCg78j++5knpwRAoiEhpnx8o3+XCURl22YC0c+oUM5gY3r
      F6OWSxFddppuZnP8joFla9aREKSmRyJB+kD043j6EJx2B9rAOJ58cgHuUkPvmgAAIABJREFU
      EhP73/uAxoRYEoOV3M49yPUONSs2biDY7eGXioITs8mCAyWCfRCz1Y7dLpA0Zx0LwjwZaCjk
      YPYVQpfHolDKsZmHcUrkSEUn92yfX/PWaGdQL5CSMY+UYAd9sjBSYwLp7xkgNHkGM6dFUV0z
      wJIV03H7IwPlsNmwu1xIELCabYgyD9JnJXE1JweDoYfcggrSZkwhNjENfd1VmvQ2bl8rQBuf
      QqC8m/0H7rBxxxPjN/kZyYd2jrLYKbU+xIRq0RudOByOkah9qYLIyDDs1gcdhQIOx0gdqVxN
      WGwELoMBl8vBiDtFin9kNO52KzZB4OqJjzFFLOTZLSsI0MrHLaFEFMWxfsqUGmKj/Bg2jkaa
      OrppvXAbT+XnJpDTTt7RjxAnruTpjUvw04z0p730Imfq1bzy0lMkhngiQUqATqS5xzTaXBN6
      j8Bxo0b0DI9AodcjyBVIVV6EBOpw2M005h+mxJHMs0+vJ8rvD+OA5Fpf0ucuZu3GLcwKdlJU
      NUBsrIrefgkyqQzPoAloxWEqbt9AN3EOq5YtZe2mLITSAupH4+y+1A9wjxiradCMyQ4enjoy
      t76EpimX89drETSBZG3cwMRgHUPNtzlw+AJ6UcXkuStYOiMec3cVBz8+QvuQEbNTjrevHyu2
      PoefvoSzuYX0WgQSM7JYOicBlWDi0tH93GwYJmTyAp5Yno5K4qT+ZjbHLpSiCkpg/boVBMua
      +Nm/vg9eHqMU2lpW7XqeKUGPxhHtHO7l5PGjSH1jcHP0UVprYOvLz9F75WPKhjwI93ejsriU
      pNVPMT/eh7rqRsJiwig9c5xalxfBOpGa8ipSVj5HhPMOF653ExoZQF9dCfbwRTy5yJ/Xf/oW
      SYsX466QABpSZk3DZxwY4kSXg0tH3qdXEYGfxkHJrTqWPb+bZD8lVef2UR24mnXT/AGR4Z5m
      +gQfgrX9/Or/7mPyovmjFClapsyJ58Kv/hND3FyiPWSAgrCEZKJUPbyz9zxBCTF0V5QzedNu
      ZkS4j88CFh1c+nQPNUIQcX5Q1ylj/eoZ7P/9HhJmzB3pm0TKhEkZ+MuHaB0QiIuScfz988hC
      g9DKXVSVVDN9w1NM8ezjjd+dJG5KCrbeBlSJWaR5tnDobBkTU+Jx9DXTYApk144VuMse8wJ9
      DiI2fQ/l1Q3YUREWE0+Yrzsum5GG2hp6DTZ8Q2OYEO6Ps/Uqe/KsPPfkItxEM7UVlQxYBLxD
      okmIDADBTldTPU1dA6g8g0mMj0QlNVNadBfj2IhrSEpPwXtcKBJFHOYhqqtrMVghKCqOqCAv
      pLjoamrHPSIcd5kUUXBy/pM9uKdvIiNKQemNckxj/dEyaeZEBioq6TDcSz5REBKfQLS/B/qu
      BmqaetAEjvyPsnGMA3Fah6mvrqbfKiUueRK+Khd1laX0Do9EYUqkUiITU+m7cZgGdSob5sbR
      11ZPY3sfdpeEoMh4okJ8kCJi6GmiprELuWcIkxIiUeCiv72ButZepGpv4uJj8dIovpgX6DG+
      CgS6a6qRRSfiNx4GnL8gRMFOfU0LEfGxX8h0/V8bTpqq6vGPm8h4RJH/UWIsl+sL0rAe4zH+
      m0GhUHwxMZbdPj5peo/xGP/V8Ve3CT7GY4wnvvLta6ijhpoeGdOmxqAAXLZhKm7fpGXQRULa
      zFG+GZG2yhuUNfbjGZnMzOQIJKKLgc4GiktqcCo9SJ6WRrjPiAHNZTNy53o+Fs0E0qfGo8RC
      9Z1bNHTpcQ+IJj01CbXUSWd9OSXVrehCE0ibNAE3uQSHqY9bN24z6HBj6sxZ4+iWf4y/JXw5
      MZbTRmXhaQ4cz6ZHO4ekqTEocFF8dj9XBkJYlqjkk/f2se3FXfgPFPHO0XKWL5nOneN7MCv+
      jjRdG6fO3iAhbQb29lu8804LP/jhdnQItJRc4FpeEaWObpJSomkoOMUtgy9TYsIov/gZB01K
      lga28dH5BhYvTqfk3Ee0Dj/JljnRnNn3FgMhC5mk7eTtdw7xvZe34PmFXrc/D13XP+PN3CY8
      lPeJscKUNjoayjl56CqZ33+JOLeHb77m/hZys7Op6zSg9Agla/M6Ij0V6LuaKTh3GOfU51g3
      1QdRHAkizL16lyGzi9BJ81ifOQ3VOOkDDFXn8btj15DLZICa5c88R7KPjLaqIk5fvIVH5EzW
      rckYs9+LgpO6G+c5V1iFQ6IkcfZylqbFIJNKEEUX146+ydX+OF5+YTkaZxt7/t9+BhVypMDE
      eZtZPSPyT/Tmz8NgWzk5OVdoGTAzMT2LZXNjMbRUcDY7j55hGx5hk9myYclo2ukIam8e4+i5
      SqRuCvAI56nNa9AMV3PoZB5DVgdunuGs3rCWCE8JtTdyOVtYidw7mpWrVxDtNzIKX74ARBFl
      0CQ2ZxnYe2W00NXLtVvtzHt+B5Mi1dQV/Qu36poJuJtL+OzdZKSHEuOs4hc5N5j+/Cw2b4tD
      rZaj9xjm5PkLGAC1oZXz+c0sXDqTstMDgJSw1BVM9HRHIgqINbkca+mmpq0It5hVTJuUQqjQ
      yuvHrrIsXUZRLby8LYNgNytXc/8PtYOrmR70qGlyDlrqelm1+wdkPBBO091Yys3SFnC4sH6B
      0Wywu5Pw9NWsjPajoyKbC7llbFngz5Ubd1FIXPSYRkx5oiDQo3ey8skXCNDYOfT2xzTOSCTB
      azxcSiJdLV2krn2WpQn3Wb2MvTWcL2xl47MvobSYHjrz2s0d5F5rY9Pz38RH6Oa9d0/TkxJJ
      sEqOrfUGpQMKpHYHAiD2tOOIW8z3N6WPmyjG/a4PcyW7kAmZW9kUpkU/YETistPZZWDuhmcJ
      95Jx5+jbXK6bxZrE+76e3h4ji7e9RNqEe5oCInqLJyufepEgDwXt5Wc5e66EJ+a5cbnSwvaX
      v4el7Cyn8u/y4vqZwFe4A0gVbsTGxaF+0OZrHKDfLkWn1QJSfDwUdHX109HTj6+vLxIk+Pr6
      MdjbjijRoHaTM9BSynv7DhOzbCWhiFw7dxxVykKSfe9Fk8jQebojFazczv6Yj4strF+aiq+/
      NwOtzZidAhqtDqexh4HOLoxyD9wUSmRSBV5qB52Dji/q/p8Hl5HGTj1lFw5y+MQ5qtsHAQiM
      ns76TSuJ9v9iR1toUgZTY4OQS1wYBo14B/ji5hfJmrXrSZ8YzD0CJalMTvq8TIK91AgOC3al
      Gp18nKaT6KKzp5uaq+c4dOQ4t+u6cIkifdU3ETx9Kco9T8OwiwfjZaVSFW5KKS5BRHS5kLqp
      UUol2I1dHDpXx4YN81GPMkD0drTT01LC4UOHuXCtAqtr/LIGHc3FVAv+6CuvcORYNn2CErlc
      TUrGHKL8tOC00W+RE+T1cLRvd2MFRXnnOXzkFLXdwwhI8AyJJsTLDdtwH00NA4TGh9HT3klY
      Ugq+bjLCpqXh1dFK32gbXzMWSIZiVJQYJIiiBLlCjkIuQxBGvpCCKCCTKZCIdpqKc3nvRClL
      Nr/CjIQwnP2lnCpoY9Y6M8VVzZgGB2jo6McrSMrx/e/SJEby4ne+Q3SAGqfHBjL0x/nt66/j
      rXFhFbWotXLkozoGIiCKUhTjQdUh1bH8mWfQm+1Yhzq4fHA/4s5vkOD9JcMkilgN3VzJyaZf
      G8+azD+hnyu66KwpJie/lPjFawjSjpfin4z0VVuJMVhwWPXkn/oI6/rn0Q700W/xY2FKBIXn
      DyNbu4vJwSMTSa7yZnqiNwff+TUu5MRMX4qn1EX59WuEzFyEv9ww1rp30hKeDxzE5bRTdzOH
      g3p4cnkS4+EGMRsMGEzD+EfPIkrs59zhg7hte5pwLwVDHZXknL+GLnEp04Ie/h0WPfEyeosL
      l6mH0598yNIndxDvryb/yNtcrTcSGJXM0lh/hmskuMtHgyVlanQKkXufy6+3ADQBBGiddPX1
      k+DjTkufmcjpAQToQ7ja3IRzUjxNjc0ERabhGqjhvX25ZP3wn0kP0SGRgF3mw4r1K3AJJoYM
      JpwOKyaLlYaC0+T1hPCPr64fi2KUqX3I3LSLpVKoy/+EXoUPvt7h6MQT6E0WvDDRaVYw3efR
      J5KIDE+/ILwkEoiMQNJVQlmTkQRvrz9Zz2kd5MyRE/hOzWTD5GhUf8RDKooi3ZUFnC/RM2fN
      ZmICxkNl917fQevlj9ZbggQR3VAFJxsGWejtR7RvAjETIxAG62lq72Ny8Ai1o3WwmsJ6Oc++
      8l3cRT0nPzxMeZCDU+evIvo1cNsxSEWdAbOXllefWEBomAcSCUSGCrz1mwpMy5P40yPz1aB2
      1+Ef7E9ifAxySQxJdbUMDRkJdHby2alipi9dw+Qov88ZOUQ8/UNHfisiyaitom1Az8RAd+Zt
      epmZViP1pXnk5twgPUyCwToS/CM6jAw5ZWM74ZcuAJuxi4unz1NVfYf2RgmffihhZuZGlq2Y
      yf6je2n0FOn3m0lWXASeEU9Q8MaHvN0eQE+Phe3fns5Q9afU9NqJvXCUakCh9idzzQoWLAwb
      eUG9g4PVXaREaTh78C52MZ5TBz8GJARPnMGUYAd5l25iFJx0dVlZ/cxqVHJ31i+O4uC+9/CV
      GdClryHW89HP0U7zEEW3SklMm43W2cOd2mEiU76sXReNeSeQp21iXorPn7REiU4TFwtrWbr1
      GYLdx9mFLLi4ffUSvomzCNW5KC5rJ3iWDj+vJFo+Okd38kbq6/vwmX9/yoqCwLDBgFMAUXRh
      0BuR+yfyP37+7yMPGCp565MGnt4yj+bSa+jV0SRF+dBafBshKGrcqBGVkSl4H93L9cY4MoJd
      tHZaCJ/u5MTxqyx+chfRui86Jg5QkFNDXMY0/OTDVLQMkDJNTlNZGaqIGALd3dBpVRj0BoJm
      hpN3qpiuKbGYbxdhDIvk3hXvS2lRBJcd/eAQjgeOfO5efqjlAkaDHotDxN3DC7VKjgQRq1HP
      sMWB3M0dL50ap9XIkMHMvZdIpAq8fLwZy150Whk0ufDUuWEe1mO2Ocfeo1Tr0KllGA0GbE4B
      N60n7hoVUomI4HRg0BtwiFI8vLxQyqWPbAYVXQ46q29wIvc6ZtGNSbOXsCgtlqarRzh2rR6r
      0YxMqyEgeiZProjgo4+vsWn7KqpOfcqlxqHR0IIRYqzpAQaOH7/EkNmERXTDNzCMrHXzOffm
      exjUmlFaD182fmMb0dpH5+cRRZGBphJO5+TTaxSJnjqPFfMm4yYV6Kgs5PjFMmJnLWPhtGgq
      Lhyg02cOy6cG0XA7j5yrpVgkWqbMyWTelOgxdjvMrZzJ62LhiulI9B1cPJtNVfsg2pAkNq5Z
      jN+4Hd9EhtqrOXc2l3aTnLkrNzA1WMbRj9+jxSBhhB5UzrwNLxCov8bVLi+eXD6FpjtXyb16
      G71NztTFq5k3KQx9/W2O5hagt7jwCIhh5ZoVhOpktFdc5XjuTVRByWStXEiQh+oxL9DXh0Bb
      UQ6tQRlkRHr+VXkTBZeVi2cuMDVz2fiLdP//Dgc3zp/Hd/piJng/egLU4wXwGH/T+KPEWI/x
      GH8LkEqlfxgMJ/nr48t7jMf42vhrOr4+xmOMO74SMdZQexWHP/6AW6ZJ/NtPnsYd6CzL5d2D
      eUgkLjQTF/PcxoVo7R3seeMtumxKbDIfXv7uy4TrZCC6qDj7Af++7zwp2/6e769J4fqpfeTe
      bsVuNhG1+GmeXJSMpfUmb39wErtMjiDzYdPOncRq9Bz96EOqBlzggmlLt5CVEUbeZ3u5WTeI
      zWFB6j+Zl3etw9vt0S915o5Kzt+oGRkcpQcZixfhK7fRXFlCWWMnWv8Y0lOTRqSCHoBgN1By
      t4bwhKn4uY/0w2Ee4HbRdbotMhJSM4gLGrX7u8yU37yFKyCRSdF+4/YVsg+0cKmoBItdAFRM
      W7SYCI8RS01LSzODggdTorzvP29o4cLF29y/8XkwZ9lUGotu0KG/lxGmIiYtnUlh3nTWllBS
      04aoDmD23Ol4jldCP9BcksedphHPu0dgDBnTJ42KHoq03M2nRRLF3Ac1IGx9XLpQhN5+z2qo
      YcqcVCyNZdR0DI2WSQmJTyU1MQRjRy3X71Rjl3sxLWM6IaPEZl869i6rkVslVXj6eSI4R/1n
      4jBnj2WTnPU8P3rtB8irzlJU30lFzif0hKzi71/7ezbG6PnwTCkOEWz6Zk7dHmLZjBhcggiD
      FRy53MGmb/w9r/14N5VH9lLT00PRsUPo5uzixz/+EevjHRzOKaWx7CJ3hqP40Y9/zLc2ppJ/
      8gID2PGOnM3u7/2AH/3g27hKcqkdtvzpf+QrQaChMBu9ZyyxsbFMiI5ALYPmu5fJr+gjLDoG
      a30+p6/XP1TL0t/A/nf3ceTEMZr7R6aTaBvg3GdH6Jb4EBmkY2jIOPZ8Z/UtcvPOkX+zmfEL
      KBDpLCukxeFFbGwssbHReNyboKKdlou/4WpVx0M1ZEoPomNH/9cwP8ruluASFQSFR422EYO9
      q4zGbgsDtTc4f6sR39BIPG1VfHqimPHLGnFyu/Aq6uCRvoQH+3FPMsHUcZejJ65w+dbnlBBl
      asKjJ4z1s7PmJv1GAd+gsLEyL2sDxU3DmDrrOH2hCPegKAIUvRw8dJF7s+UrEGN5kJm1kdqL
      73K5YbTQ3EFLv5T0qDBkKimJwRoqm9sYrKhnYtY3UCvdmDI1md99Uo55QwKVpw/jm7GRkJaP
      aAOw6DGIKjRuShTaaCYHuqjptZAwIYSilmbMZg9au4YInhiAj58FmbWCXqMdY2cnmsBAtFIP
      ps5IQRRddJUW04o3/spxcCyJZpq7tWSsmkiMQoJUKkUqBWXiPLZOUaOQikRIuzlUr3+omuCQ
      sHDr8wSe+d1YWV/tHbo9k9k5NxWQIJVJARHR3kNeQQMz58/gTsujd/l+3wU6+pwkpyYwMcwb
      iVSGVDJi1BiqusjNBhXeIQ9Xkbl5MTHZCxDprysgOGk6vm5a5DHxI301tnD9aijzk0PRSvzZ
      HpOOTCJBSJRT8tt6rIwPLxBiN8OOCcyeMhEfuQSZVIpEMuKcu5ibT8q8uVS2Dj9cR64lJiFx
      pJ9DVVz2TiIu1A8PhT8BgGjr50CBlmVZE1GrnGzeGoVCoUB0eFFefIV7QR5f78zgsGNDRDrK
      rSuVCVgtdmwOOxrpfRIru8NKd2UhJxs8+dG2CZS8P1o/JJWFYbl89N4eokO8KW/Rk+KQEJgw
      A+n7x/n1ry5jdnnx5Dp/3NVyEjzy+f2v/xPRambaitmoANE2RPZn+7hUZeXb//M1osaDGMsF
      nqFKjv36FwguJ27+yex6dh2ebmoQXfTUFnPkcjPzN2x+qJo2KBotUPlAWVdXB12V3bxZn4/R
      ZCE0fQ3blqZw68wZAuasJF5ZMr4LAND5Kjl34D3yRAFRFcKOF7bh6+rkSF4/y1ZO58bwH6no
      NFB4uYKZm1647wQToayggKD0+QS6SWBk1BnuqOTQ4RymbXiWcQvksIJU1sn7r/8Cp8NG7MwN
      rFuUSO+NIxhCVzAr0vSHC+AeBDv5py4xLet5PB7QLWuvLsEVMZVodwmgAEQc+laOHDyJ/4KV
      BI4+9zVjgbzwkoPZOvINMJgE/Cd64eftRZfBgIgbBr0eT+8A+ltrMOtb+M3Pf0Zn1R26dVau
      Jn+fdS9+j57eARyI1BXkEa5zcOaTD5m46f+wcYqG5tx3+e2RAp4Ir6JBM4t/+HYmzsZ8/nnP
      MVKnfZ/KD39BMel874dLCdSNk2Sn3J25655hLiMq9IWHfktelYHViUoqC3O4UGNl/RNbCPH9
      Mq0qkEhkRKdmsiVzCth6OPjuUWomOMgpNbIwuJW73Y10tvbT2BVLXNA4cBtJZExa8ASTFox4
      7yvPvkvO7Wbiu85g8UigraGKDiM0dIYyIfjhCJ7umhL6/ZJZ4XX/RCw6DRQ3GVk6695UEWgs
      vkD2zU7mbthBYsijK7SMQR3K9le+O8JtZBli/zvvUB0q4XxuAzOWRFNe0UhXew/Vzd3EhAfy
      oKKUqa+ZSnsAzwQ8cAJwmSi5W8ekxTvG+t7XcIfDp28wbcV6pkQHjT36lZTiLWYLJqsNp1OC
      cXgYpTqIaQnuXMkvInKWhhvdCrbGRROkm83PT56kIXIx+dnFzF7xGhnTA5iVNdJW/nv/i0Kf
      LGbHqqkpa8YnNBBT2TmGA9NJCPVH7+1BVWMdQ1Fh1DX34OM7BZ23H+a7zfTqhxlubQGVJ2pJ
      GycudPLMv6ahwcHwsBM3jQbFIyaWCE4nZqsVtUaLVK7E3U1GnyChs+oa19uV7NyRhe4rqiMG
      BgXSc7sbQRSRK1UjGmgyL9LT4zAN9mMeNGAaFjCMl0yqKGIyDqPSuCOXytCqlQiCiG90KrH9
      RgYahjGaBtGbP+fkFJ3cvVtFUsaW+5NBFOi9cxYxZimBupGvp629hOxSI+u2bSXoK6g1/jlw
      WM3YkaFWKZErNagUgFLLjLQpmAf7MA8MYjYaHgqpGemni8aSawSnLL0fgCiKDNUV0amZwtLg
      kYuuY6CZU5fKyNz2DBN81Q+FzHwpLYrV0M7JA4fpHL01SKQy5qx9lhRfKwXnT1Pe6WDWyg1M
      jfRCgkh14Uku3+kgYNI81s1LeuhlTTcv0KJJYH5SAOVXzpBf2orcZwKbNi7HSylBcAyTf/oY
      Ze3D+MdMZ83SdNxwUH87jwvXK5F5R7N8RSbB8i72vneC+9dKDZlbt5EU8GgBcU5TP2ePHqDN
      rELmGGZIDOL5l7Zyc9+/UNTvR/hoFlHo5EUsmRZI0ZWbJGfMoPduHnnlbdTeKUATlU7ytJlk
      zYrmypGPuNMjwV1qQZeYyZbFk8aSSYbqsjlw25fnnkj7mtvwwxBdDvKPv09ptwSV3El3v4Tt
      r+wicnSytt84Rs5QLDuXJtHXUEKLEEpqrB+mlit8mCflme1zGVVJxWnq4v13TrPhW8/hKwVw
      cfOz33K8QcqE0ZwI/6g0MhemMB57r7WznH1HL4FSjUPfg2biUrauTEM9+j0bar7LR/mtvLI9
      i+HeRsraXcyaGou1r4J9R2rY+sJ6PO7Nf8HJ8b1vE7tyB8mjCVINRYd591QVsRNGLkFa71iW
      r5uL52NeoM9DxGW30D+gR0CGu5c37m4KzPo+9Ob7CTcqdy+kzXkcaQli+4oUXMYhhkz3v6xy
      Nx2+Xu6ITguDA3qcUiXe3l6oHti7BYcFk12Ku1Y1bhTjgsPG4JAeuxM0Hl54aJRjjk2nzYxV
      kKNVwamPPmBC5haSgnW4bGbMghLdAwzVgsuB0WzHQ6cda9tq1DM0bBn7AivcdHh7u49TdthI
      +3qjBVGqxMfX+yEBbMFpx2RzotOquH7qE0yRC1k0KRTBYcVoB48HVOvv7YRuWt3YfcZhHWZg
      0DhmcZPJ1fj4e6F4vAC+LkT0nR1IA0L5wkjd/8IQBSfdXX34BQcxznK/fwG46O3oxiMoBNU4
      OE++kBhLEAScTucfq/MYj/HfBiqV6g9jgURRfLwAHuNvBo9jgR7jbxpf2QDRU3ud6y0KlmZO
      QwWYB1u5cCabVrOaRavXkhDkDqKVojNHud1iJDp9EcvTYgARQ3sZh09eQRYwkRXLFuCvHXmt
      0zxIzolDDHtOJWtJOm4YuZ5zhtsNvXhHTiZr+VyGKi9y+nL5WBKz1mcCazevRNZbydlzVzAq
      Alm1PosQ3V8ZS+1j/JfAly4AwW7i2rmDnMkrok87h4WZ01A5+vl0z3sEL93FZk0Dr7/xFju/
      sxv9pXe4rljA9o3eHPj1bzit/ScW+nTxmzcPkvXyD3He/oS39tt4bfcq5LiounqSjq4hblRW
      kLl4CnWXTtPrMZntO4K4fvA3vHvKg1dWz+XZ+NkA3Dn5G050CGic7fznmwdZ9eI38ejK45ev
      7+Mf/m4nXm6PfiNtvrCHX+frCdbeJ8YKsLdy4tARmvV23PwmsmXTcgLcP28Ld1H42evsv+7O
      //q33Sh66jl27BSdBjsuQUrSvDWsnDGB0ouHyC/rwOZw4RYymWefyEQ7LiJ50Hf7FP95ogRv
      rYp7xFgx8i7OHsumoW8I97CpbNm4DO/Pdd3SW83bb76LbsYOnl0xCSkgik7O7vln8gZS+Ycf
      bUTe38DBAyfoMjlB4saiTdtJi/IeNza+M7/7J4oGvNApwS86jQ1rFqIxt3Dw4HE69TYUmmi2
      v7wRnwf7PdhOQe5ZztbL+Nnf7UQhkzDcVsZnpy4wYHTgElUs3rqD1GA5RWc+I6+6B6nCkyUb
      nmBqxIgz8Mt3AJmSuIwsfDykvJM3WjbYTJ1ey8KYMPx1wUzxyOFubRODZa0k7UrCJ0DJ2iVJ
      vHGxmAnp/Vh9U0kJ1eGQzeLEr07Tbl+Ff38Fl8rsrFmUxI0jfYCc+HnrSFGrEB0WlHIJDrsD
      iUwxIrPk1FN4s40FO7aj6C6lQx5JZJAvusBFBB/6GfUGM2luj+qdtNHWJvL0937A1Af8/KXX
      i1AlLOXV2fHcOXeAm9XtrEp7QG5IFBmsKaTeGUp86IhNQakLYsWWXXjp3LHrK9j7QQlDMyag
      C01mx+yN6BR2TrzzEc0mK0lejybsMQKBrm4TS7fvZkHMfbE+y4CMpIXrWR3qQf5n71LVMY9Z
      UQ+kswtWbhTcImrKJAyuUXuI6KK3JId+n6kEu9wAkbqiQnTp69g2LRJr+xX25t4ledeCcUqM
      H8Iim8hLrz5N8D2LpmClIPsCYYu28US0Ny6T+Q8WW1NNJeqQRIIHGhghyJFgx43MjTsJ8dWh
      b7vCkctlhM9SUGkN4pvffRp7UwEHCktIjlgAfBViLJkC/wB/HnKAegThL+mntqkbp92KFBe9
      w04mhHtQfrcai92JRCZnqL8HQ98AErU7UkCldEPq0qM3CVzNycYvbS6R7vfWoBSVmxJcJi4f
      eofTzR5sykwZWaGiyEB5Dg2KJKZEByDxi0Q7VEdb3zAuhw2py0yvYRwu7k4zzZ3tnPj9f/D6
      m+9xvaYbUYT+gSGio6OQSWUkxEfS1T3wUDWXY5jcwjrmzU9DM2qzBBc1AAAgAElEQVRbVKi1
      eHtocdr13Mq7hUdSHJ5SGTEJk/Bwk+Mw9tMrKvFVjpNXVRTo7mkm9+Pf84tfvUlucSNOQUTt
      E87EqACE4U7aTTpCfO8n4IuiSG/lFdpUyaTFBY6VW/XtnCnWs2bxpNFEfwn+wb70tXZidTjo
      bGzDIyxoXDiBALB0U15ayt43fsFv3ztE25Adl2mIkn47xuJjvPGr33DiViPyz1nsEzOWMCN5
      AuoH9KF9w2IJ9/dAKtpormzGPzaSwb5+QiKj0SqkeMfE493XTf/o81/PCekWwnMv7+Dk6UO8
      WaDF3O9ggq8Pixe/ivPwQX7/u6v4SLrw8JqH2t2GVBjRGxBEAYnEDfoK+exyE9NlZRypqmag
      3cC18maWx8n53S/fQJ68kn/88dxRGSFw2fWcOHqZBZv/mQC1FMQ4Xn1lNSeOvU+e3J0um5o5
      nuPgT5V789SPfgKAub+Jg3vfR7Lte0gkEpSjE1Xl9jkGB8FG5cUzeM9cQ4Sn+aE/td46w8FL
      5Wh9I0lNDBxxGolOaq6dI7ekh2VbthOgGadpJJGT+cwPyWQkD+Hke2+To36BFYl+COZesq+U
      MnPtRiJ19yeL09hJ9m0DWZsX4WjsHil0mbl1+SpJmSvxlN0Pn/aKSMK3PJu3f1uIQuvLwpVB
      40eRqJ7IP73+b4iiwEDTTfa+v49Nm5cwPNDLhHXfZpmvlGsH3+ZYaTgbJn8JE5EoYuqp59Sp
      HOTxC1k/M4yaG+Vo5KMfGqkb7kq4p4DxNWeNC6l7OFueewXHUANv/raLxFA/LDaRBRufY7FL
      z7l3XmfqjEkE+2qw59yg35KJpaUem1cYkaGT+Pt/eHVEqa/VzImafqKDdZSee58Ov/n8eM2c
      sckPMNRWwk19GD+dOPLPi7jQBKWw6xvpDLUW86tuE9HaR3fKi6Nsc1KpFI1vJLOSPSnvthAg
      lzE8PAz+XgwO6lGp/MfqOIwD3KqspbO0jTsuI5XV3fTsdef721YQMT2L76euxDhYx4mD5wkO
      347l9mlKhvzZ8vQS/P7gHvHofZdIpSg03syZHsWpbiOOSJHTh04SvWAVMZ+jdhxqLKGqppzO
      N5qwDrbSatDiLltMe1Utptp28u4RY3mqmC5tJ2DmGtZOCMAxXMsnn+QQ8twmfMdh/QqCgEQi
      QSKR4hudTrRXIRanDE+PAPz9dMgUEqZmJHOwrhdxstefvHc4je0cOVXA1MUbSYjwRwqoZTL6
      jSPRpIJlkD5Ryb2R+NIFYNG3cnT/AaqbG+jolvDGL/vI3LQT193TFFZ3YbW7SFmymfggNX0V
      BRzNvonR6UQbNJOdqUFoBR1rU8t545e/QC6RkbnmKTw1nnhGj0ZAShrx9JER5CHhXHUbfUNG
      fverckBK5LTFrFs4kbL860xcuBSvsQQPGwXH9lLRY8bhlLN0y1N4j4PYtNPYR86lQhIzFqBz
      dFJQYSJtujvehHK66BqxfhlcvlZBzMKtI5GLdjtyXRA7v/ePIw2YW9nz/lU278xC31hCmUFL
      fEwI5qEBBm0CUmGYortdzN+8EI3UhdlsQaV2QzYeediCk4Jzx/BKnEeEp4tL11uIzlpBX30R
      Q96TiPHTYbFYUKrckApOnEjxn7ySf528EoDeymzONgSzbkUK0hWZI22OEWMtoubUPirq20gO
      1DJUX8uwXDsu3lgAS3spOVVmZk5Pxtl1l1azL3MC/JkfLeXTs7fYMjeCu9fqCJ89F9HlxCGA
      UiHDZrFgtVhwOuxYzBZwU9Bw+Rza1CyiA9yxWy245EqCIiLoO5hPzcQIzLfzEaMmcy/+9jEt
      ykMQMXZUcfzcFUyiO2mLlpIa7Q+ig/obl8i53Uji7CxmTwpFqq/k9Q9L2PXCFrzcRmeCfYjr
      t5pJmTUFmaGHgssXqGkfROkRyqLlSwj3NHB4zxH6xkbcm1U7NxCpeXRiLBCxDrSQnX2RToNI
      4qxM5kwKp7v0AscKRlI8ZRpvlqxaR3fBfoYilrMy9X6KobGnhpp+HdMSg+9/Ya09XCvpZ1pG
      IirBSvGlc9yq7UITOJGslfPwGgc6+hEINBRf5PKtOkRNCCvXryBYqwBc3LlwlBv1eqLSFrE0
      NZrawmMUDobyzKokLhz4hOr++3M1cf5q/PvukFfRNloiJTo1kyUZsZjayzhxJh+3iDSWL0hD
      p5I+5gX6+hBoK76GKTqNeO/xCmb7y0BwWblZeJukjAzcFX9tflAHpYXXCZySQYDm0e98jxfA
      Y/xN4wsXwGM8xt8KJBKJ5K9tD3yMxxhXfOWDlN1swGCV4OOjG3GVuxwMDfRjsot4+vrh7qZA
      gohZ38+g0YZS64Wfl3b0fCzispno7jOg8fLFS6vC5bAy0D+AzQWePv64u8lx2cz0DQ7hdIFS
      44Gft26U2UDAZhzCJKjx8VSD00JXVz/31YyleAcEoh1HnprH+NvAVyDGctFTfY2397xPk2ou
      //m/d+IONN44zt7z9UT5QLs0lm88ux4vSy2/fn0fuqBQ2tv7efrVH5PoKx/hrj+xj7dPFBC3
      8Qf8cN1U8j97i8IuJUHuTpoN3ux+YS2dV85zo8eEWrRQ19DNyudfZWakGzXXzrHvw49xTn6J
      n35jAQpbP1cvXsQMOG19HPvsFv9jz2+ZEfqIPAWik+66Yk6ev45JUJI0eymLU6MpOvZ7ihpN
      Y49Fzchi/ey4B+oJ9NUXc+x8IS5tGKs3rCFQYaToQjbFdR0ovKPJWrOcMC8V1v5mTp/Opk0v
      krp4DbMSQ5CN6y1apOXWWS53+7B1eQZKqYvuqmucvNHJ8rVZhHl9LnhBsHDt9FFuNA4SmbaI
      rJkJyEa+OtTdOE1xXwDrVqWPCUqYeyv56GgFG55Zh69qnNilBSslV7IpvNuEQ+HFkvUbSQhy
      RzB1cfjTw/SKXixeuYaEzyXiW/qbOHsqmxaDwKzlm5ke54djqIVTx87SqrfiG5XGxtVz0EgF
      empvciKnCJsygGVrs4j1HyE2+ArEWCaquxwsXpiKWjqaVCYMcPrkNRZsfp5nX/4u4QOFFFQ2
      cePExyjStvPSS7t5fq6OfUeuYRPB3FPBmVoJWRmxo622c+FKJ6u3PMvO579JxMAdbneZmbxs
      HS/sfIYdu14kK0nG5Ru1WPQ9dIp+LEydcE9qC6k2jE07drBjx3YWx3kQMnclSf5fztTwpXBa
      aesTWLnlGZ59Kgt9wUdcbrIxfcXT7N69m927dzM33g/J55LvTR3F7Dtby/Itz7BxyVQEmwPT
      4CCykGSeee5FslLd+Pj90xicTi5k5xAzdz27nsri7skDNBvGg9DrPoY7SjmR3053610cLtC3
      l/LBuRrmpYZw+OOTDD0QMSK67Fw89AG9PlN5Zuc2Jvrfz6l2DtaSU3CT6sq2MQIswdLP+RPn
      aOzoxGAfx5wRax8GRTSbn9nF02umk/3RezR0dPHh7z8iZslWNi6K5cg7e+l+iD/AzNG9H+OZ
      lsXz21dz+8Reylr1DLR3Ej1/Hc8/t5MUTS37jtxmsKOOvLudLN/yLJsXhnJs/+kxXqAvXQAy
      tQfzFi7E/8HcVVM3PWY5gb4+SKQqwv20NLV309TSQXhkBDKpjIioKLqbGzBZ9Fw8epJJyzbg
      PcZH78+0STquX79JVckVWuUhxPl4IpPL6GuroTD7MGerJSybnYDaO4yFc6bj+QW0hy5jNyez
      i8lctRytchyuMwp30mbNJMTXHYVChZe3BwqpBIVKjUajQaN0UtthZerEByj6sFN+uZDo2TOx
      DfZiErUE+qjxCI4mY2oS7holbmodHjo1UpmcpZt3Mjk6AK27jgBPdxyMnw1CdJopzL/F5Pnz
      0I3+WP0N5cTMWk5ccjpTvHqo6bo/i+yWXmp6pMQFKOntGcQ3MACpRILLNkj28Txmrll938eB
      QPXNKzgjZpEcML6sEGjCmDc7BV+dGpmbDh8PNxzGYZxBMUwN9yEoOpWlsRauN1gfqGRHkHsR
      HuyH1iOA8AAdNqeT4OQMpkUH4KaQ4+7pjVolQxsYw4b1qwnz1eHh64uXXMa95fv19jCXCyf3
      maQlUhGn04XT5UJ5jyxLIsElOOmquMo1fTivpQZSPMZuJ8Vd40ZlcyUlejtOjR8ahQxREGit
      vUtNcydSlfpLPaTdDcVUWmN4evLn9aO+PlzOdvb+3/dpdcqZvHA1ayLu/dgi/aXnsIQvIszr
      wQlgoamhn3ahCKdKQl97CxELt7Niaggt146z//xN5J4JrN+6FneJBBQKnOZezn32GfbYWUS7
      j5PQkCjQWpzLoM8MZsf4UHFjpNhqNuETFoBEIicwwIMO430+N6ezi6aKZnSBxcjsRup65Hzz
      W09hKL/GYPB0VvkruKeM6+irorBJyroNSWTXloxPnx9AV10+Bz65iF7uycotTxPta+F8Sy0t
      w07ClBbMdgtDQyYY46HwYs7saA79/j+wO12ETF7C/FBvRMHF5YNvkFc1gP+EDJ7cmoJSJgFE
      bH1VvL8/h8Rlm8fCqr/eAtD54ad0oTcawV9N35Cd0BQ/Arr9qentRSSc3p4efAMjsBkH0Qht
      vP4gMVboAKeKjXznJz8gygs++/mr5FQsYOesKKZnbiZtMbRf3MO/H8jl3767Brcv+riLZnKP
      nmfyit14juPdVyoLYddrP2agtYrTh89QGBnJvEh3nJYBThQayHo+8nNBYFLUWi8Wrd/KFC2Y
      Bxr55MQ1HCkbicxYy2tpKyjNP8y5E5cIenY10p4KDhzJIz5zPasmBsE40dE77d3sP3CB4GlW
      Tp24SWVFBRev3iFYkGI2mwEPjCYTMvn9n1wiURGelMb6jetRS10Uf/p7rleUcutAAUHTp/HZ
      iU6qq3s4fTEU+Z1j6D3juXT6BCVVFQznXGFD5nz8PcbDiw2BMXP41mvptJYVcvTUMQKf2c6L
      z67m/Xd/iVHqSaBgx+3BQERHH/lFzSzZ/gopAVKO7P2AyvZ4pkf5sGDLt5lp6KHg/GFO5pbx
      5IpkOm/ncuhKO0889xJhD+izfekCcNqNNNU1UNPcxfCQhPLSUiZET2TuzEhyz5xClqSgzB7K
      zvho/P1XcGHfIS4qU7mbU8eqp7cwNc6DaQtH2hojxpoaTsnJXK5evYI+UKBs0IssH4GzJw6h
      8Z+Ah8JOyZ1Opk2Zh2Dqp6q5mYbOQfSWJsorg4mJikHacZ0SYxAvTY/7k/3/cyA4bPQNGvDy
      9cU7NI6ZiQXkNfQzN9KdvqY7SEJS8PsDS5OWxCkenL9YStLKZEz6HiQqD6ymAYyCCm9PLYkz
      5nCr+Di9Jhul5/KYsXYbk8L/dFDXnwupwoundr+MDbCbBqlv6SQmKgSdKZJbZXcwhsdQ3S5n
      1uL7O45SFYbMcYaW7mHi/KX0GkV8/MJ5avdObE4RjBrKG5UkxoQTHLeLQbMTXBbaa5uJj4tG
      O06hEE6zngGrFB8vd8KTZhB0rZi+QSNePiG88J0f4jC0cvjDc0xPeOCeZ+ulz+JOoI8WqRwC
      vVR0D+rRa13IPH1w9/Bn2szplB+vwdAm5Xz5MDte3I6fRvHQuH95RpjTRk97C6LfZDYth77W
      VvyD40lb+QyaO7doGXSxc/dyon1USHwW8PKTWsoa+5m59ZtkxHk89LL4eWvxVoWB3Idnv/ct
      Su6U0dEr8uS3v0dcqI5BrYPS8gbaXRLiM58iLSUW+0ATnW0daBOXkgV0t3cSEhqNShXI1h3b
      mOA9fqmQgsNEce5n3GkeRBRB6RnGlu1hSFx6iq81k7Z+x9ixTBSGOXXsEnNXrCJq1hp8P/iA
      //i3k8i1/qzaug1bTwWfnbjIkFUAiYzY6csJVnXw3pVblHYMcVIK4MeW7+wgZhwiWaVSNZHx
      8QDYhvsIDKwgIiQAlZBO2K19/PLX15iSuYEoLbTdvUgt8SxKCWbNsul8vPcN7EjwmziHRUHe
      qGSjGooGFwGBAhMiAnEH/AGcJkoCAomOCkczTlYg53Anxw+epnfYBhIInDiHGH836gqOc/ZW
      Pcg0TF6wlmg3GGi5S2GjSNaCJGYm3GD/r/8DhwjagIk8EetPd/EFjl6vQHCBVK5hzpptDHbk
      UXGriJ62agA8/FN46oXVwFdghnuML4JAV9Fx8kljQ0b4+MXF/wUguqwc++hTUtduJWI8CIX/
      onCSf+RT1GlZpEU8ukLxF/ICPcZXgYjNaESi0TEexqe/JERRwGyyoNZq+SN63v+FIWA2mlFq
      3ceF1OuPEmM5HI4/VucxHuO/Ddzc3L6YGMvlcn3R84/xGP/t8Fe2gT/GY4wvvkIskIjDaqTi
      eg7XO715+smFqAFTbwNnTp6lZdDBpIVrWTQ1CrlgIf/UAW7WD+IRNY1taxagUYzElfRWXuGd
      z/JIWPYU6zOi6Ki5yaXLN+kwWIiaspgV86eMCM8JdvI/20NOlcDO73+LaI2AxdDP3fwz1MrT
      2Lo8Gbko0ll1ldMXbjLsVDBlQRbzJkegeNRDrSjisJoY1BtxIUGt88RT64YEEafNzMCgAVGm
      wutzTM+i4GJ4aACzXeD/Y+89w+O6znPte/Z0zACDQe+VAAmCJECw994k9iLK6rJs2bEt24l9
      5cROnGPnO0kUl1iS1WyrV/beO0CQBFhAkOi99zaDwfSZvb4fAJusRIqInCs+5vOL3Nhr7TL7
      XeUtzxMQZCYoQDPSnYzTZsGvMRF4i7NIyAxZB7A5vWgNQQQH6pFGIxYgBD6vE4vFhtcv7up7
      2JPX329F0gYSbAq4M+oJgc/jZMAyiCxpMIeYR4JGw2kSA1YHQSYTqpFjfq8Ly4AFr1BiCglB
      P0p8RggZu83CkN2NkFSYzCHoNErwe+jv68eLClOwGf1nXNAep40Bywjrs1JDaIgZtVKBa2gA
      q92LLtBE8IiHzee20z8wiKQ1YjYZh/Od+BIG4HfbyD28k+LKShp9WXxt+NKc2fUhttRNvLDR
      yK9//Q6h4X9DVMtBjjUF8+NvbuDi+//GtkupPD0/HrxWDhwpIFzvpanHBgxRWtLOtDVPkBIC
      L/30HylK/QfmJ4fSV3mWq03gtnYy5AOPtZ0jh45QXXIVR3oKMiDkHt7+/V5W/80/kGEc4N/+
      +S2i/v4njA+5P30AfEMUnD5CfZ8XCTcDNgXrn/06sXRzdP8hev06lD4VOatWMCHqlhdC0FV6
      hp35TQTr/fQ5jWx99nGitR6qCk5x+PAhzKv+N1+fGwlC0Fl5icP5FWgCdEimJDatmI3uS4pu
      /OeQqSg4zrVaGyoN9HVbWfz4N8g0y+Qf3UXNgAKTKYllG+bfrof1e52c3PkunXIQflsvxvEr
      2bIwA+9gO6cOHeJc1QA/+OFfEx+iAeEkf/92qock9AqZ5JmrmTM27D+9oy8NZxuHdp/GrVKD
      exCvKZ0ta+ZQd24fBe0eNP5BXIZMvvXYons+2PKL+zhX4iQ83ADGSFYunodZtPP+W3vRhpiw
      Dql55OtPEaOycHbXdmq9AQiblUnLH2Hu2AjgSxiApDUyf+2TJEZs4w+5IwddbVS2CFZtHIfa
      pGR6vJYbtQ20F98ge8HPCA4MYsmi6fzdoas4ZkfReX4/rtRlTLCdoBiAQJauX4tCqcA90IzN
      q0CjVCJ7rew/dIMFD6/gyAc7AVAHRbNm65OUqHo5cJt1RKDR6VEqJBRKNXqNilGJKqkMzFyx
      kTkqFQpkSg7+ntJmO47+yyiT5/L0zHSQZcTdZRTuXk4V9rD1G88SroLa859ypqCOTZO02AJT
      eWT5NE6NjPCy30luYSUrNj9BbLAWWZaRRs0VI5ExazXj5w6L47XkfUJ+fT/RkU00izSeemom
      khD3vCZndxGdumk8vnEaCnsPf3x3L5bZabjb20ldsJlB10cjZwr6S3NpNE3j2Y3jUSKQR9N3
      qI9hwxNPoFYpQXjZ/d7vaWpMpKhPwzee3opSDHHynT9ypWs+syLvzAKDQzJLNj/OxLhbHA8+
      SvaeIGXdt1iaoqen5BAn82tYGtdFl3kSz6+cia+nhPdOFDN17HLgSxiAQiGh0Wju3Sy4HAzJ
      ApVyuLlaLRgadKJzOjBoNChQoFFrcDp7GGyv4cBlC5u/P4n2PSdv9YpC4aOt8hp7dh0mbe1z
      ZEcbaSrcSX/MTMZFBnLk1pmSEo2kulfWRgpjydxEdr/7Knqlm8CcpSQZR8GnrZBQqTy01zfS
      3FRF1VAsq1MCKLlRR5uzn9cKDiGZEli5+iFSI+5QjCjw4/XKoFZiio3FUdiBctFcpoVCX0Hh
      bRIav7+TzsYBTu19l36rh/iJ81izMBvd6Pj0UKkFXc1NtLc3UlyvYNGGMAauHaO7W8dbr14l
      LHMuqxdMRn/7egpkvxdZgEanJcrvp9PvJzNjKtFCcPO2ccrUVXfgcvfy1qsncClNLFm3icw4
      0+hsIhVKhHeApvp2aiuKIWEuMWY1+L14ZYFS0pEYp+Fmq41ZkXf8/7buBvI+eoNTWi3jZq9g
      0ZQomjt1ZK4bdvEGJY5BcbOVHpOLqIh0lJICZUQM4UOVDIz08dVCeVodAQoFflkGJPx+iQCj
      FoNWh883/Gv7/D60WgNVBQe5Xt+F9IdX6Kwqpdvo4fL4BCL6cvnjwVrWPv0C01PC8dva2LPn
      GB2mLN586ywVDbU4dx8h9fHlfJY0QbbXs/9cM1v/5m9JC+jnpRffpHR2NtNj71+4Tch2Km/c
      oGvIjkIZApICh8NF7KQFrMhJpLPoEHvP3+R7m2aNvIsQFkyPYNtrr6DUadHrfHj0Of9B5w5c
      cjCbNz9BlM7D/nfepywznSnRo5DKDYCbxooyGnotyKhRSAqcDidBCTN4cmECZ3d9yNWGVOal
      DS+C9BETiXa/z2svX0EboGGgaYAxn9uvwOVyEpoyizWPpOHpvs6H+08T942NjFYg3mHtpKyk
      jH67m0CjQG+OIDvMy2uvvoxGrUNnbyMo/F7v5MPf/DkPI/A5+9n+9ofciFyPX1Lfic1IGpSS
      jKxQoJZGPnWFCo0kbqvFfEVmuDjS46CopIq06UauNDtZuCyFKPUk/ngxl6Vp8yjMvcLEGc8x
      f+FGFmwani8LPv41V8zLmZqs4Fcvn2Lh83/P9JQIFApQBsby179+d5gsy9LAv/7yXdZsWIle
      owA+k3vud+P0gFqlRFKpkfwuXL7RkZyWlKEs2bgJIaC7cDsHLzSRGRlFv0JCKSmITk5FXduF
      H0YiwEpiJy3nrycuRQhoK9pHgSPhc6PDkhRLcJgXjVKFUqNhXEIoXa7RdDkHMmPFw0wX4Kk6
      xhtnKtiSGI/U5ketDSIlNZqmQTuM7AKU6kBWPfldVsgC2WXhk08OE6v8vDtXEhMTTLNPjUal
      RBsznkhtCS4fjBY/ojk6g4c2jQMEx7b9gZqOVHJWPU72CnmYB+rTd9Al3k2N68PnU6JSKVDp
      Q0lPCGPIBZHGQRp7fMSEq3D3NuE2hGPW9lHdPwAk4h/soUtluL0P+tLEWA09/fiH4I3fvsSi
      Tc+zZP0j7D94gt8V+Uhf8RhZccGoozcyt/0T3nrjj+iiZvHEnARU0p1JMig8huhAI5KzD78m
      gMIDH3LzmBLQMW/j15iePPKAGj2x8fEY1BIDzcXsPXCK9q4B7PJp3vh9LQ9v2Myzj0znzLY3
      OSwrSFn+FFNHYfT3DvWRd/4SpthEdLipKO0iZUEo6Zosth05SYFqOkO1xUQnz0YSPjrauwmN
      iqav9iqNQzq0nm6KK/ysejQez1AfLa1d9Db30CvXUFVrJy4+gewULUdP5JKdZORKu2DVvNFJ
      hxZ+L4WnD+MPSSRYJ9FYVEtiRhahySFwfi+5BUN0VDqYvj4cp7UHmzASapAoLsxHZQqnt74U
      w5jJBGsU9LbW0z3ooqunn7qaCuSkJBKnzOTchyc4qxrEMFSDOzqH0NFJBMXRWsbpsm7iY8NR
      ugdotGoZH6CgoqgQl8aIq6uWGm0mT4Yr8Dis9NkF0eE+jn16mqCx6ZglG5ea3ayZHUHk/Cze
      3r0bzfREKgtryNo4jxh9F/7LxzgbJOGuuUzI+IW3meEe0KLcBSH76G6qorS6BQ8qolIyyU6L
      RoFgoLWKa6UN6CPHkDMhFfVAMa8d7OC5J1ehtLdz5WopLqWRjKzJxIcasPU0cLWoAufIAK8x
      BDN52mxCNHbKi4posXgYM2k6qZGBo5IRLYTA0lFHSUU9do/AHJfOlPFJqJXg7G+l8HodseMn
      MybKSO6ud1FMWM38sWE0V16jsnkAY3gSOdnj0Cu91BUVUtU5eLvv0OQsZmTEYutp5PqNKrz6
      KGZOn4hhlHiFhM9BdckNmrosyEo9GZOnkxCqxdJaw5WyetRBUWRnT8IcoKQ8bw9l/rFsWTSB
      oZ4mikuqGPKqGJszg6RwAwhBR/U1SpssRKVlMSl5mMbS0dfE5WvlqMOHfz+9+gEx1n1Apr2s
      BGV6FpF/Zrocsuymqqye1MyMP7s8JvBRW1JJ1PgJGEchBPEfGsCDXKAH+EuAXq9/kA36AH+5
      eECM9QB/8fjSblBbTxPNA0rGpsehYlg7rL6qgs5BP0kZk4gN0aNA0N1QRm2bFWN0KhNTo1AI
      P4O9bVRWN+NTG0gdm0GkSU1XYy2N7T14hIqE9EziwwJRINNRW0JDl52QhHTGJQwXuwvhx9Je
      R5cvlPTEUCQEPqeFirIqbD4N6RMnEWpQ/VmR1D7A/wwof/7zn//8PztB+D3UXznK7159g5Pl
      MsuWZKNB5ubJj9hztY9Y3QB7T1xnzISJqHuu8Nt3TmAON3Hp8G4UKbMwOWvZuesEquAIbE3X
      OHChhRmzorhw8DKyMQClo42Pdp1jbHY2itZ8XvrkIlFhOs4dPkJA2jSi9B6undjJG6+/wQ1H
      EgumJqEUfk5/9BJXegMItFex92IbU7LHor1fhinZQ13RWT76eBdn8wtpc6gZkxSDSho2wpar
      x/jjocuMyZiE4S5iCCH7GGirZtfuQwTEjiPUoAIh47B2k6K6uGQAACAASURBVH/gAyrlMaRF
      6ocliequsWPbdo6fvUivbCIlPnx09AGETEdNAds+2snJc+ep7vKQnJKAVhL0NVzngw8+pbpX
      zZj02Duue+Hl+sltvLftEPkX8smvHmDGpDT8jh5O7fmIXUfysWvDSYwKQSk83Mzdx8c7DlHe
      5SMtJf6ehMD7gm+QvIM72bX/COcLrqMwxxMTGgg+O5eO7WDHvqMU1w6RkT2GO69d0FNfxPaP
      t3H87AUG1REkRAejVPhpuHaGj7ftIv9aNeFjMgnRKwGBp7+C3/52G4bkdKKC9PziF7/4xZeo
      CfYypI1jy5o5vJM3sl3w93Imt4pF3/wZc1IC6Cr/KZeq6okoPkDEnOd5eHkiUw2t/ObgJSY8
      N4NHn/kGRoMWW6OO8/92hD62svrJzSNX8FJw/Hu0WnooO3SY9OX/ixWzw0jwNbDzzHUy1o1B
      lZDD+vm1HBrhkJI9LZy8aud7/2cVcXonN376C6oGljI18j5jAbIPry6Wp7+3EIPCzpkPX+Ns
      3XhWpQfgsjRx7KqFAG8jzs/4CCy1l9l9sQXXQDuDI35Pd38Lx07l4elqZzBymItHyH7Kq5pY
      tOV54oI8fPi796mfmMy44PtM4hvuHa8iiDVPfZvwICVFO1/j8I1xbBhjZ+fh66x75q/Q2qz3
      shD5vFR2eHjme39D9O3ySMGNvL10hS7kx2vN7P5gO8URz5LuvMTZBiPPvvACTcfeZd/VZJ6Y
      kzA6s67PRfCYeXznoTgkRwfvvLOdqMhv47+8ixr9dL7z14/i7uri3lCnjaO7TzNx67eYEin4
      +A/vUBr5DBOUFey9ZueZb/8Qg8/KoDzcSvY4OH4wF61JwjZ0x8v5xcRYWgNZ2dkY7rb2oR76
      3EqCA42Akkizjtb2Xto6uomMikBCQURUNH2dzchKI8YADdaOKj76eBcxC5cTC7gsHeSf2s9r
      L/5/qKdtJStcS0uPhajIcBRIRESE0dXRgcIQweTMtHvUSISllSG1mQCNBkmpIczgo7VvFDxX
      qgDGZWZg0iqwWXoZkkzEBGsRXhuXTpxjwsqHCf6cUc+UMpVnntzC2Kg7+UGa4FhWb/waS6ek
      3PbzKyQl81dtIDHcAH4fqgAjOuUojaIKJQlpmUQF63DZBuj1aIkLNdBdcRkpMomaa5fpRnuP
      qqPP58PSVU/B+VzOni+kc9CNoJ+aWi3zF6SjCohg6vQxtNY1UHmzgylLpmLW68l6aDHOohKG
      RufOQRfBpMxEtAof/T3d6MxRGPxWTtQ4mWDs48K5XGrtcO/wJqEzBKBVKUFSoQ/Qo1L6uHLi
      CvET47hxMZcrld0EBuoAmeabZxiKnMvE6IDP9PJVoFDcY/kCkCQFCkni9hAjBAqFhEL46KzM
      499f+ZjoBU/x/PoZSICk1mIOiyQlNRlbaw29Q24khYLbPilxh3jr869/ZywTAqRR+o78vlbe
      fvFFXn17LyTNYmyYRFNJAX3BWUxPNn1u1qmk0qD+zIesUKrQqO+dYBUKBZICBprL2PnJbqJm
      LyPOMErhVAD62PvGK/zmlXfoDZ5EdrwBa3c77X1WdFqZ3L3bqey5M1BImgBWrl5PQnQoSnsL
      7723B5vXhVdlIkgz/KA6nQmFwoVTocasHV48KbRmApXOzyao3Bc6a/P53b/9inf3F5AxYwEm
      pRdrTzO9TglTkIbSYx9zqfnu+JSBqdNSOfXR7/jXX76EIyKblAgN3d1WBgasBJpM2OrOs+ds
      ObbOavJrZJYvzPwTHtavlgtkiCBM56PfOgjhBjr6nMTnhBPRE8H19nbkrBTa21oJi8lEttTw
      2ivbWfSjf2Zhqvl2IbbGEEJm9kwys2di+acXuNiygIRIM20dnYgxkbR3dBEdM5fPCzYqTPEY
      vf3Y3W7MSjfddiVTQkaHrk+piuO5n/6Ewe4Wzh/aT261icqPdtJpSqHx5hmqS27Qwi6efnYz
      Uf/lBFRBf91ldp2tZebKR5gUH/LFTf5LCGXDd37AKlsflw9u58j1BKYEhTI+egbTZ8URJHpp
      qO8iIzwOAEmpInn8FJIB5Az6y96hwQtKjw27H0KU4PHYkP1RaPxeBr0jYW3fIHavZlTZMKLG
      zOX7P5lBd2M5+48fIWzlErRhqSyaNwuNpGC8eZCPbzQwK2Hc8Bjkbie3sIvVz77AGLPE8U8/
      5EZTNEajkdg5i5kWDO6MBD7dcYa8pjoKK910tFbTXl+B4qYF49PPAl/CADz2XgrzLlBxs4Ku
      Vjhy4CA5s5azamUOH+94j44YBbUBk/l2RgohiY+S+8oHvN+bSkNFD4//cA4D9dso71czpSyP
      g2Wg0oYwa4KJjw5dJio8FJXPQhlpPJsaT3T0Fl588w983BhHTZ2fr72Qg6u3gYLL1yktbaHd
      U8jR436mz5jD+gURfPLhxyRo+1BkPcw48/2LTftdQ9Q3dxKbnIzRHE6MGW70aPnuL1+7PTNt
      +/0vmf3IeiK/wsAtex0cOXWdlY9+nfjg0Rz5h/cXTbXVmOJSMRlMJEYHcLVzkLCcTOq3naA3
      cyMtjX0EzbrDoO11t3Ptaj8Tpo1DGuyk0SWYIoUzJtXBxYsNbJ5m4kZRLdGLZjE2qp1P826Q
      uXEWbWdzUWYt4f6zr4bh7m+naUhJUmw4odEJaHwnsUsGZgRa2HWlmc05EdSVN2NOmHGnkd+J
      1eZBpVYOrxT8boacSqbOS+L3O08y/skF2NvK8GhjWfzIIywfWTHk738fKWMlkxKG0+G+MBDm
      89hpaWi6ndMCCiIT0zBr/XS1tWBxykTEJRJi1KJAYO1uoaPPgd4cSUKUGddgN82tvbe5/CWV
      noTkeOw9bfRb7fhRER4TT2iQHgUyA53NdFvcGMOiiQ0PwmPvp6WlE8/IDkih0hKbkIRBctLa
      3I5TVhGTkEigTnnfGzLZbaPwzCEulDThE0rCUrLYtHopZv2daejYrvfIWvEMkeoOPtx2nrVb
      19J+8QAHLtcx2NeFMjCcpOxFrMpQsf/AafoGehkQJhISElm7aSG7X/wd7tDQkal49IixhOyn
      LH8/p6/U4vAKAqPSWL/+YWKMUHX5BEcv1JA0dTEPzZ9EQ/5emgKns2xSMFeOH+FCWQN+yUDW
      oodZlpOMx9LCkb37qepxM3bGCh6aNxGdcHDp2G7Ol7VhiJnIo5tWEDoKOl0AXmsL+/ceoq7T
      CkoN42etZNnMDJTObvbv+JS6Xg/hadPZunYhluo88lsMbF2RTfXlU5y6cJNBj4KEzNk8tHQ6
      JpWHC0d3UVDWjjokmQ2PrCc++A6x8/WzB1EkzyY7KfQBL9BXh0zz+QNUhM5h2fjwPytmAdnv
      5NCO/Uxfu5EowyizPP+3w8v5fXsInbWa8ZH3P+M/MIAH+IuGQqH4U14gv9+Px+P5vPMf4AH+
      n8PnLuIeTAoP8JeCP6fl6wM8wKjjSxBjydj7WjlzdA9FlmR+/MI6DMjUXTvFsbyb2J0+Uuas
      ZvXcTOT+GrZvP0yfw4syNI1nn1xPsFpg7aznzOHdVEnT+OHXF6MDrh14ne0FvUSGGkAXxcav
      rSPU2cC2XSewunwYE7J5YvNyAlVe6q6d43BeCT5JzZgZq1gzM5Wy3D2cutaIX0D0hIVsWJqD
      /n5zU4TMUH8H1XWteISS8IRUUqLNIHvpbq6nsbMfXXA06WMS7rmWkL00V5fRYfFgikwkPTny
      jo/cZ6W4uJnE8WMxB2iQ3TaqK6uwyXrSx4/DNEoc+wiBy9ZDTW0Tdo+MKSqJ9IQIlBL4nBbK
      K2rRmBNJS474E/+9rbeZDoee9ITh6inZ56K1vob2fgdBEQmkJUdzi7rIa+/hZmUPGVnjCBit
      XCDho7OplpYuC7KkIyVjPGFGDd6BVooqWxCAQtIxbvJkbovzeK3cKK7C4bvlX9SSMnE8kQYt
      DksnVXXN+JRG0sdnYLqVRuAb5ObNJmLHphM6EoD8EiJ5QxRcvITFPkT/gG3Ym2pv5sChK8zY
      9G1+8J1NVB/fSVlzJ3k7P0Y7ZQvf//43GTN0lT2XmnAP9XGx8BrWoUH6rY7b8dvW2g6mbnyK
      H/3oR/zou4+TbPRxYvt2IhY+ww9eeJbg1vMcvd7OUEcFu06Us/ypb/PD7z3PnIxohL+DnXuv
      seKxb/PC84/Tcnof1dZREJvz2blxrYi+ITceRx9nd39CRb9Ma9l5TuSX4vL5qSk4xpkbrXc1
      kmm5fIiDhfW43UMUnd7Nhco+BMNJctX5R/hw9xFqu20I2cfV47u42tCHtfUGOw9dwu0freWm
      TG3pNVq6bXi9Di4f+pTCliF8TgvH9uymqc9GZ0Mz9rtaCNlPy40zfPD2O3xyqvj28eqLhzlb
      3ITP56Lo3CGu1vQMn+93c+PMXt795CjdrlEsmnK2U3i1hiGXF2dfPXt2H6bPKdNSeITr3X5k
      WUaWP0N6IECMHJdlP1dzj9PU58Dv6mLvjoN0Dbpw9LfT3ucceVYfdQUn+Hj3ISraLLe7+cIZ
      QKkPYsnardTlfcDNnpGD9n56PBpCg41og9KYEqeivKENd9cgSdFhaHQ6Fi+czD+eLME7bw2r
      1m+h7HAP1bW3evXS2dNC86l9DJVGMWPpKjKCnbT2OJkZHYomAOZNT+P3N6rIdLcyRADlx3dQ
      KIWyYPlSzAo95kAFgw4Pfo0dr0qHQTUKI6k6kDnL14z8x4/ZVkdzj4vFY2bw6HgDaiVYw/3s
      qu0BEkbOc1FT0s7sLd8lJxj6YwUHSpqYMy4Ue2cFuS0mVuZEIgF+3wAVXWrWPbUMk9LF7o92
      0G2fSnzQaHAaKZkwexUTABAkiTYudA4xxlnJoDmHR5fm/AkdupBlXNpotm5ezc4i2+3jCVNW
      MtYwrPEca3RR3NoN6eF0VxVS7k1mXkbr6KaeBySwbvOt9+ml7503GXTYaWrXsPix2Yz9PI0s
      jYnsGTOH/z1UT2V1BmOjTTTnfkDArK2smGS65x4dfbWcrdOwbGrsPTPgV4tkhKUzM/E0h/fu
      YkJSKFUt/ejH6Vi0ZAaf7vkYOSsFRVsdHk8KI9RBn4GKp/7+FTx+GUdXJf/+6xd57Mc/YumC
      Cezb9gFDE+IZqmrGI0dg6+/Dp4lj9oqlDFaf4b23tvPdHz7BzKlJHP3kTc5KboKzFhMdMDrF
      ubJs5drZyzR2tOI0TmDzGP0wX6aQGWir5uilRqYtWXtXCz05C7PYsWcbfXEmuto6mbpyDgpX
      HxfyS5i7YhOdeZ8CIEQPSmU8eo2EAjWxWh19so/4z72TrwIHpRevUtfWSo/HxIaN4XTn7qex
      TsPrL51FEzORLeuXYdYOfxqSSk3auAzszUX39BJgMCCEoK3yEhdKB5i9aiF+ewf5N7pYuHwZ
      l/e2ft7F7wu23kaKi8ppbG4iInsN8SaJ9mDBgdd+iwIIjsvi0c1L/7QWWPZw7VQuaYu3EqRx
      cbF8gPbevfzudB9e9Czc+DjZUTIXzl1j5opNWC/vuqf5VzMAyciKx56joaEZl5DQ6HVEhwUz
      ZsIGnoqsod/hw96jICw6ls9f4gq0AYHoJQUm00ymhu+krtfFpqWPEpBYg9Ut8GklIkxRBIf2
      oW8LIDzUTOSESeiPfER7ayX78nv45t/9iATdIG+8+BuuzcpmfqLp8y72X4ICJcZgM5Gyl6bW
      VjrtPpKN0FJ6kSNX2li8ci2pMea7HsWPpd9GYHg4JrMBr20Aq2WQyqrz9GijGe/qom/Aiqu7
      C3uIHyHk28tAGTHKRTwSAUEmwr1ebDXNtFicqISChInzeXROLAWHP6G4tp9FmaH/aS+yz0n1
      pRPkNytZunINiWYlVw4cR0RPQAx2MWC10tHZTWRiDLpRIshVqrUEhYQS5XHQ01yPfWICczc+
      y1zA57JxafcfyauewUMZnxHLtnRw0xrEI3E6FDjwCwVZCzcxK9KAte06e85eRJPipU2KYKyn
      m7p+C4rubmwJISNv7CvBTU+Pg8RxE4jR9NApxZOVFE5vRxem+LGMTTRxvbSPxUuz0X7uL9zH
      2QN5dNncuAfqKOtVkxphoLu9h7DkTMZEqSlv9LJg9jiSxk5B03GVq81WuhpqGDIkEhOiRXYO
      Yvd4kX1OrDbfqBVnKCQjGVOmMn/ZQ6zMVHL2ait99dc4W2rn0Se/Rnqs+d6MQk8/5y91smj1
      EqZPm8m8+ROpKLiK0BnRuXsoLCigurGVirJy+mwmZLkFl0dG+Dy0ud2EKkdJbR0AHSkTspi9
      YAlb58dw5mItIXFxOPoHkFR6wsKC8H6JGE97SS4Xe8N45vHVJIUZQIA2JBS5u57Cwis0trVy
      40Y5g47R2wcEmKLJmjqDZas3E+Kupr7dis/nQwAqnZHYCD1252fJzwStZQWEjptBgCQBelJT
      NLR1eJEkCYM5Ch1OFJoADP4BCgsKqGpoobK8jC7LcGbpF9Ki3CLGarP78cmg1mhYsOk5Atvy
      OFVYjQiKY+2GNcQHaxlsL2XPvjNYRQDTFj/MrIwY7N1V7N15iC6HD1ko0BiCWLrxSYL7ijie
      V4TNr2P+mi1MTgpmoKGI3YfO41Sbmbv8YXJSwofzizoq2LfvBDZdLA+vfYik0AB664s4cvIi
      A1410xavY+b4qPuurPLaejl+5AjegBA0eGhtbmfmhucZyHuVMmccyZHDFIbhqTlMTQ+h/GYl
      yRnjaLqwjzMNgqTIAHpbm4mZuZ4lk2Jvr7nP7XqPwKlryEkM5sbxT7jSqyNUaWXQkMVjD0+9
      TUl+PxB+L3kHPqYLMwaNgq7GelKWPM3cBJl9H3+IOzgal13Fw1s3oh+opUuEkxqh5GreeTo6
      mrhQ72TR1HFkzJhF0fuvMZCYQ4weQENydg4ZMSOZqz47u97bwbRHHyPRODoJfY6Wm+zOLcNk
      DkLy2mjuV7F+9SKun97DkC4and9KXZuPx//qKQIdnTT0+MlMi8NjqWHbnnLWPL0W8y0Kd0cL
      b725i9DkFHyWLiKnr2fh+IjbNRkXD3yEYtwyZqVHPuAF+iyE8DPU3017jwW/kAgaScizdDTQ
      MXDHy2QMiyXUdpNtJRoeXz0drcJLR0szVqcPfVAYcTFh92hYDfb3oDQEY9Cqkb0OWptbcQoN
      cQkJo6Nwz3Dw0jnYS0dXH26fICA4gvioEJQSeB0Wmlp7MUXFEWZUcWrnR4TPWs+kWD0ttfXY
      72JnjExMxdvTQr/j1kyhJDQ2nkjTSCGJ8NPX048xNBTtKBXzCNlDT3s7/TYHQlITGZeI2aDG
      7xyksbkdLyrCouIIN2kpPrWb7pBpLM9Jwuey0e+AiJA7yyIhBA5LF21dAygDQkmKj7hnxrYN
      9ILORKBe/cAAvjpk+puakGKTCR7NFcz/BQjZS2tzJ1GJ8YyKLMH/Vfhpb2zBnJCEfhRs73MN
      QJZlfL7RrPV5gAf4nwmtVvsgG/QB/nLxgBjrAf7i8aVXsL2NxdxoUzNvTiYawGlt59K587Q7
      dcxasozU8AAQbopzT1DWZid+0mzmTxyO7gkh0117jQqLmTnTxqBmOKfkUm4eTRaYvfxhUsJ0
      KISgr7mEsxdv4teHMW/RYhQd1zhbWM0th1tAcAJLH1qIsq+W3Lwr2NVhLFq2mEjjn9li/AH+
      R+CLeYG8Tq6f3s3OI6fpNs5nxpxMND4Le955G032WqZGNPD2q2/xzR88h+3Ce5y0jGP91Bj2
      v/cy3ud/zsI4waVju9h/9DTO5C1MnzYGNT6OffAarRFLWDnexesvv8H3f/xdzLYifvuH82x4
      chPBCjtDQw4S4zNYFJiADJSdfJvDZVpWLe/izdc/YNqGJ4juvMi/v76dv//BowTdb2KZ30lx
      3lFOF1bjEQrMCRPYuuVh3I0X2H+4gH6XB01gNCs3bCQz9lZtrcDWUc627YfpdfoJCEth45b1
      xBkHeO/Xb9MmJJRATM4qnl6ehWOgnYunDlFgS+Qfnlt5f/d7N4RMXdEJjpy9yZBXRheSxJav
      bSJC9PH2Gy8xIJsIDB/Dlie33C7mF34PN8/t5cSVBvwKFanTV7BhQSZ9tYXsPpSH1S0TkpjN
      hrVLMfl6OHn0MBXNffiEjoVbnmBmatjoBPI8PRzYtpfK9n78QmLcnIdYPDGSY9vfon4AQMbS
      2cHCb7/Iqow7ajqO/mZOHz5CWdsApoTJbF09k9JTe7hQ1QUM6z2YJj/Cdzbl0FVWyMGTF7B6
      lGQu2sCa6SkjL+EL4Pe4RGNDoyg59ZZ44R/eETYhhOi8In70438RtVZZCOEW7/38R2LXhWLx
      xt99VxyrdwghfKL+6Mvib187I4ZcQ6KhsUlc3fsb8Te/3CvsQgjhbhA/+8FPRHmnSwjhF2//
      7AfiUFmDOP/WP4qXD5aK7p4e0W+xCZ981434hsTLf/ttsfdqs/DWHRXf/MkfRL9LFl5Hj/in
      73xfFHXbvuhRvhg+l2hraRV2t0/4PHaR98EvxaHyIWHtbRNd/UNCFn5Rn7dDvL7/yl2NnCL3
      rd+KQ5V9wud1i6rzn4h3DpQIb/dN8cqHJ4TvrjNln1dcOr5DHNu3Q/zL2wfv/37vhuwXPe0t
      YsDmEn6/R5Tsf1W8f6FVWNrLxbufHr33Xd6688EG8btf/1502DzCbW0Vr/3yVdHiHBAHXv2t
      yG2wCNnrFPn73hb7LtaL/pYqcaOyUbi8fmHvviReeumgGByte3dbRVNLt3D7/MJr7xVvv/Ib
      UdPjuf1nv6NLfPzm26LFefdD+EX+3rfFscu1wiv7hdUyINwe/11/9ojr+/8gjpZbhLunWvzh
      7U9Ey4BD+DwO0WcZEkIM732/cA8gqbUkJiWivTuTKjCcUPppaO1D9vkw6hS0WzwkxARQVd6A
      2ydjCAyir6sNr2QgKTEOzd3tbT1Y0aLXagGJYKOCru4+6ho66G24zsE9O3jlV7/kdNktNjCB
      pfwYJf4MZo6LQRESh95ST8eAAyHLBChdtFtGoYpNqSUmLpYAlaCnqYo6exDpMXqCQmOICNbj
      snZT0tBHamLUXY1UhEYasfZYkYUf64AdU1gwg719dFRd4I9v/p4dRy7Q7/SiUKqYuXwL86aM
      RT/aPkiFRFh0HMEGFbbuZm62y4xPCMY12EB5YQHvf7SDmk7bPU2UygB0ai8ujx+f24lPoydA
      0hIcomVwwI6QvQzZPQQFGTHHpTNpbCJapaC3qZ2gxDhGjddCE0RCXDgq2U1D2TXkkDRC7lrS
      tteWIuInEqe7+531U1nez2D7Nd75w9tcreuHu+ISzp5aCgciWZRhoq2+FlkFFw98zHvbj9Lv
      vuP3+WoL54B4nv3GJvYffYfik0HY212kzjez7NkfYvtkBy//9jihUhfGwPmoP+8Kag0aIRDD
      md7IsoRGq0LSqJk4bx2bswz03NjDi/tPM3fcY+jkQQ7vPcvcjT8hIkCJggxeeGY+hz98leO6
      IFpsamYFjs4ewO9r5b1fvU+XFMDYrFlEGyXAxrntOzhf3Uns2MksibsrFwglCdkzubh3N7/K
      8xAYmcraOeEEB0Xwv340Cb8s03DlMB9sc/KtZ5cyOoJI/xH62PvmR5T1uUjMnEZSqBZz5GJ+
      +rOZDPY0su/j9+G5b5M2ErxQaoOZlhnOjj/+O37UjJm2kiCVlvTJWew+9hEvHvURnjKZNfHD
      yoweWw8XTx2h2hvL1rUTGc2S+s7afHbsyMVlCGP2guUYR4i58A1yvaiWrFXPfKbFIF2dTtI3
      TGfxHC0ndmyj0PgY89IjAUHljSKSJsxHCzidfVgGNTy0eT30l7Hr0/08+d3Hga9qAEBwQjbf
      +P4M/I42fvfLNsbGhCNUWjY+930k2c65d36JnD4B/ecNdMZ4InQ22rv7SAhQU9fnZ350DMZJ
      KewpLsY1YRYelxuVbljV3NpeSl5rML+YHIU0LDxP7MTFvDBtBUOdZbzYPkDyaMikMkKM9ZOf
      4hzs5+bJnRy/kczGnEgWPvp15nndNF4+zsFzxXx305zh9a/XwunDl5iy5VtkR+hpq8jl1KnL
      PL55DkGmEBQKCFm8gKJf52GB/2YDCGXDX32f1c4havP2sO9iPV9fNAZTiI7gEDOTi3Np7XKS
      FjwcOXX1lnChTs+3fvi3BIhBDr/7KWUZQZSeqWbRk99lnFlDWf4h8q5UsHleIqcPHkAkzuTJ
      mePRj0L6xt2IGjOXF34yC1tvOwf2HyYs6knGRRnoriykPySHlRGfNTcT0YkhJMTFExqoZGZW
      Gjcsg0AE/sF6brRoWDU/FgCDIYTIpDDiosJQRM0ks+BtukZ4Hb+ESF4rB7btpLyqlMYWBW+8
      bGPxhidwXjvI1cZ+HINWkuZtZmK8kc6b5zh4rgSH24lXn8l35idg765m/+7DVJQVUTdQy5uv
      d7N8w5OsXzOdjz5+g4sqF+opm5gYG4Y+fCsXfvcWL//6Im6Pgk1PfhOtys3Fk6dIWPQw4bqR
      Ta5wcOrT96i1erEP2pm75WkiRoHiw2e3cL2sjrHZWRh0GjwOKy4P1BVfQhGTSXKEAaXsYsju
      GZm7GNa49QzQ3e9ADtcw2NONQ46nvbqAxoEQZk1Po73oKhZzGPefq/ofQ/h9lF67TPi4yUQY
      NAiPDYdPpvXGOWpJISdGprRFsGDpXSYoqbD2duD0yehkJ+29VtKUSnyOPvqsLgiW6OvuwRM8
      ho6rp+mPncejc9JHlREOwNlRQ0m/mklj49Hr1dgsVm6R0BUWVZGz5KnPEaMMJTnOy7n8mzyx
      LIPSmibCZk0DARWXCgmdPIfIkTqC6JR0LGcOUJYzniRFLbUOMzkjrCpfGAgT8jBLxN3K4GqN
      DoXsxevzg0KJRqseHpllP26PF4EClXqYL/NP2isUqDValAqB1+PBL4Naq0U5MrTLfi9er3+E
      W1ONQiHwebwIpQqVUhrRCxD4vR68fhmFpESr0YyO0JzPReWVMxzPL8GFhjFTF7NuwSQGGq5x
      9EQ+7RYXoSmTWbdqEeE08dK7l3jm+ccxyn0c27WTN6AGZgAADVZJREFUik4HUenT2fDwPAzC
      xuVTRzlf0oAxLouNaxcTHuBk5+tvUj8k4/ML1Col8x/5PnNS75/jRgiZ5pI8jp29Sr9TED1+
      FptXzkLrtXL++D6Km30sXL+R7MQQrhx4m87oZaydFk9b+UUOnCjArghk9oq1zBoXjaO3gaP7
      D1HX52XMlIWsWphFa+FB9uVWII+86NiMRWxaP5P7v3OQXf2cOXyQ4toOZHUg81c/wrS0MJTe
      Nk6c7Wb+ssnoRvaQdYUHONcZwXPrZuJ3D3Dh6EEuVnaStWgzS6Ylo8bPhXOnGT9jCSEG1a2X
      w2BXBbt3HGVAFcnqjWtJiwpCesAL9FUh01Jwhq74meTEGv+smAVkv5O8E+fJWrwYs/bPLXbi
      5eqpM0RMW0iC6f634J9LjPXAHh7gLwWSJP0pMZYsyw+yQR/gLwZ/TrP3AzzAqONLLwJlvxev
      X4FGoxrZiMp3NrEaDUqlhAKBz+vB65ORVGo0ahUKBLLfj8fjBUmJRqMeEcKQP7MJBuH34/F6
      hwUvlMPtZb8Hj/dOxYZiZNOtEDIejxcZBRqNZlig47/jDT3A/9P4UsRYA00lbPv0Iyp8k/mX
      nz2GEWi7cZIPDxdh1Mr4Iqfx7CNLCXS38IfX38OpCWTQqeTZ732PBJ2d3D3vcqFVQuWxMXHF
      4zw8NZH6S/vYfq6WQJUbRcpinl2XQ0Pucc5WtyP5XfRYZDY8921C+65yNK8MD2BpLaPOmca/
      /tsP6M3/hL2XuzFKDgyZD/H0qpz7Ly0Ufvpbq8gvLMUp1CRPmsG0sTEoAJ97kKL8YpIWzCHi
      bgoWn53rF/Ko6rCOHFCSMHEWMzJjsDSWkX+tAq86lNkL5hApdXPw8EVctxsHMX/9UmJ0oxBS
      EgJbTwOXCooZcPqJTJvMnOxUJK+dK3knaOzzoA+KYf7S+ZhvX85PS1khBSXNw/T1pkQ2LZ+B
      s7eBgsJi+p1+YtOnMjMr5bZQicvSwPFzDSx4aD7BmlHaRAsPNdcLKaltx6cKZPqCRcToPVw8
      c5TOWzpMCiVZ81eTEX2XG1f20lh6mcsVrYQkTmTOlHHoVQqsHdWcL7yJRx3C3EULiTAo8ToH
      uJybS9uQRMb0uUwcKYr/wifwu+2U1nUyJi2RmoqRomTZyslj+UxZ812WZhh57zcvcrk2g4iq
      XbjS1vLCukxqjrzOtmPFPDnZxslaLT/5u+dx1uTxyp5jzJn8CIeOXWXxUz9meoKKl//pnymb
      Po6JM5aStjAAjeSncPtvOHO5ju+vX8g3Jy4E/Bz43d8TkrKEMKmHPx6vYONf/4RUg41f/cvr
      NMzOYGzIfYrN+ZzUN/WSlj2DAIWdwhPbEIEvMF7VwPEjpym5PsCm2TPvNQBJS8qEHCLG+ABB
      69WjNA74yWyr5lxRHeMnz0LqL2Xf3lyeeWI+M+bNQwZkj42DB88xejpDMm2tbYSnTGJckETJ
      yf2c1j/NvLBBytudLF2yELVah+HuX9zv5VpxFWlTFhAeqAW1HqUEXc0tmFOzGB+o4FreKXIV
      D7E0Ow7ZM8iFY8corJTJWjpn9AzA2U2rRcOk6bOQ7B0c3bmDNY8+yoSp80jzA34HFw4cxKG8
      NxpQc+UEl9u0zJk9G5vVhtcno7LXs/3AZWYtmYfBb8NudyNULk7sOYB+3ExmpoPVc2eP+8XE
      WLpA5i1ZQV1eF8qKWzfcRYdVyYzoCCS1RGp4ABWtndhqm0lemY5GpWFs+hje2F1DZ7gTbVgK
      gWoJY2Qs2qFcOrpb6XYFEh1mRtIoSDZLNHQ7mBYfgsPWT1PtTc7Xepj7RPLIJkXg768gr17D
      c1vHgK0UC+GEBxnRaFTE6T009rvv3wDURqbOnQ9C4PM6SIzQ4XTLSIZgFqx9hEDH3j9dZkkq
      TKGRmADZ3kn+gJH5yxMwqP2sW5eGSqnEF+Wm8EopLpWe6NhYQGCpv4QxMZvwUeIzQqFkXM48
      EAK/34M9PoQqtx+Xuxu1Jgqj0YjBaOTuEmTZ58PukwkOCsJg0BBgMKJQSKRNW4gQAtnnITk+
      jFaXBxA0lRTQHzyJ7LjqUSbGimPR4jiEkPG4ggi9XIwfJWFRw5FcW3s59rDxTIq4+3N1Ulra
      QtbyLZiMEuFhkQTooPJkLpGz1xEXpkZShWM0BtBXdZ0eQzIbUiORURJlvJNR+tVM2OvDIwTS
      SD2NQhJ43F48Pt8IPQVIkoTX58br9iDfOk+hQAgvPocXL3dE8CRJxuPxI2Q/Ref2cbPBgmSO
      J/RWdFd4KT55iJApq0gOC4BuD16FhGJErE+SfHg8o+O+lf3dHHz/AM02B1ET5rMhWYuKCAx8
      MfVic+VNNCmTiNYrGH61Ak9/Pdt3nSZp4TpuK4L5bBScr2Ta+mdQf5au7b5g5eyuw5R39GJI
      yGZLZihyXzdKZyk7PylHGTqBrZsXEXgroC6piA2SOHNsPz6nHTkqm6+vn4fSM8j5UwcpbejB
      nDiVNQ8l47PUc6nKybI1s8jdXj2K9zyMvpZiThwrpNvhZdqqrcTfLrYW1JRcI2XSQ5+JBvfQ
      UN5Fn/YQSreHAaeGjY89RF3tAE1DJ9h/1c2Q1UrG8ieIs3bSWd3GAWs9DpsVdcIsnlw7LLf0
      1QzAGIxZLbA7nYAWy5CPyAwz4aFmWiwWBDoslgGCQ6MxR9qRyy3IgMflwK8KxhwThknhxul2
      A2osdogM0SMpVcxb+3Xm+LzUnnqXD/bl87NvLEW2tLL/fCebfp6DTgK/KQKDbwiP14us9DHo
      0jDWPDojqUIys3DdOvo6GynIL6QkcyyTo75EBo9vkOLydiY+tGjkgEx72SUOnq9j8abHSAm9
      M+p015XRFzKO5abRdsIZmbpsJWn9nRSePkthw3gWp2fy2NczkX1uzuz4PTebpjMnZTh+q1Tr
      WLjhWRYi8Lut7Hn9E+rcMxmnMzJl/kOkZrRRcLGQ6xWJuK/ux2kaS8W1Auqam1AUlWCaMong
      UVKZMUWms2J9FO11JRRcyiMlZi1RRjXunlJKeiLZsPSzgoISpqhEVm56ghidgoqz+yhr6EKl
      1jFr1VamBqtwDNSz8+BFwseoSZ48n81LslD4rRx+fycNthkjvXwBZJ+b3s52egZsuJ2DdLZ3
      MOQPZ+rEUPLz8mkozeemNYjJqUnkzJ9H7flDlFaUs+9MOfMXTiMhKYswZxl5JQ1cPH+eoPFT
      iNbHkJOu4fzFK9TfOEu1SCDTrODc6eOU1rbQ3tZEZfMA8XGRKBUybTfzcSXPI2NECVLSJpGd
      4CL38k2qis7SGTSW9OD7TzMTfh/2ITcGcxjJGTnMywiguLKbL5xbhKCn/BL2qGkkhQwborur
      htM3uln7+KOMCQ8cTvUAEB4qyqoZOzFzVH3QQgjsNjtaYzCxyeNYPiOem2VtDFl6sQy5hklk
      hQLVXSnDsn+Inu5BfLIA4ccvSagUfhx2J1pjMHGpmUyblEhjQyvjZi9iYnw4Oq0W1UiaijRK
      s5ff48TpkwgOiyRz2gIiFF109jsAKL1aQmLOBIL+xMERSUiIhbYRolu/LFCrjIzNDKTkejM+
      eTitRlKqiYiMprutCZdPRgg/skLNrW3cF9KiuIe6yDtxmp4R14VCUpK9cB3pwW6KLp2nrsdH
      1rzFjIsOQoGgoTiPq1XdhKblsCgnFQUCe1cNp3KLkEKTmTt7Cma9Cp+9l8ILF2ixKpi+eDnJ
      ZhXdTeUUXqvA7lMQnjSBedPHo5U8VBZewhM1iYmJ5pG1p8Br6+J87kX6vHpmLlpCXLDmvtel
      PnsfJw7soWHAiwIZLwGsfvQppNoTHLtWR+P1cgwTM0lLnsaGhydx5UwBWXMWYFS52ffRJ0xe
      9xjJ5mFDrLmwnfeP1RAbM0xDaIrIZPWmeShbLrHjouDRR+Z8fqbsV4Twe7l46EOK25woALcX
      Fmx4itihYvaevYHH48WYOIWt6+fhqLtGgxzP5ESZgx/uo90rIzxudMkzeXb1RAr27ud6txUl
      4Bc6Zj+8gSlJ/33EWM6Ocj49cA6nDJLsQxWeweY1SzCrunn3nTOseWorYfrhL3awq5bi/7+9
      83fJMori+Oc+9557NcLwzQYHh1CQXBoMpEEbFMEhkN6pf66lyRIaApcCoUmkOWhockxfe4dE
      74/nNNw3M8Il3iDq+ayXwz0H7nLu+fI9R4W1B4t8/nTAy9cHIA5uztF/ssUdP2Tn2XOOswcc
      Dx8/ZXlOeP/mFe8+DAhOmb2/wfajJaY6X6CfUVVKTsRUv2aseLw4Sjzn4sosorGOs4/7vB0u
      0F+dxwI5JZzIZV9TcqzCQP0eI4QJgZLJavHj8ta/kntbMjGmurjcCsHXPiTHSCqKDwFrEns7
      L7i32edub5K2JC5iBtPU86Y2x3XGAtYJQeSH2FCVlBJW6jxnPLnXmVAuLWCQEKrwUQsxKSJu
      dH/hcG8XXVxnZX4G1XZUW4uTgDgL6GVNpnFMhCqU1La+65aGMBJfdsZYv43ydXCCuTXDjXFr
      g/8wqoUvgyFTvd4vW9P/flqGJ6dMTt9mHIZ61xpjlVKui+no+Gfw3ndy6I7/F2OM+QYM+M0L
      uvDpaQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      v3mFti9zzW0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
